{"version":3,"file":"index.js","sources":["../src/chart.tsx","../src/index.tsx"],"sourcesContent":["import React, {\n  useEffect,\n  useState,\n  useRef,\n  useImperativeHandle,\n  useMemo,\n  forwardRef,\n} from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { Props } from './types';\n\nimport Chart from 'chart.js/auto';\nimport type { ChartData } from 'chart.js';\n\nimport merge from 'lodash/merge';\nimport assign from 'lodash/assign';\nimport find from 'lodash/find';\n\nconst ChartComponent = forwardRef<Chart | undefined, Props>((props, ref) => {\n  const {\n    id,\n    className,\n    height = 150,\n    width = 300,\n    redraw = false,\n    type,\n    data,\n    options = {},\n    plugins = [],\n    getDatasetAtEvent,\n    getElementAtEvent,\n    getElementsAtEvent,\n    fallbackContent,\n    ...rest\n  } = props;\n\n  const canvas = useRef<HTMLCanvasElement>(null);\n\n  const computedData = useMemo<ChartData>(() => {\n    if (typeof data === 'function') {\n      return canvas.current ? data(canvas.current) : {};\n    } else return merge({}, data);\n  }, [data, canvas.current]);\n\n  const [chart, setChart] = useState<Chart>();\n\n  useImperativeHandle<Chart | undefined, Chart | undefined>(ref, () => chart, [\n    chart,\n  ]);\n\n  const renderChart = () => {\n    if (!canvas.current) return;\n\n    setChart(\n      new Chart(canvas.current, {\n        type,\n        data: computedData,\n        options,\n        plugins,\n      })\n    );\n  };\n\n  const onClick = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    if (!chart) return;\n\n    getDatasetAtEvent &&\n      getDatasetAtEvent(\n        chart.getElementsAtEventForMode(\n          e as unknown as Event,\n          'dataset',\n          { intersect: true },\n          false\n        ),\n        e\n      );\n    getElementAtEvent &&\n      getElementAtEvent(\n        chart.getElementsAtEventForMode(\n          e as unknown as Event,\n          'nearest',\n          { intersect: true },\n          false\n        ),\n        e\n      );\n    getElementsAtEvent &&\n      getElementsAtEvent(\n        chart.getElementsAtEventForMode(\n          e as unknown as Event,\n          'index',\n          { intersect: true },\n          false\n        ),\n        e\n      );\n  };\n\n  const updateChart = () => {\n    if (!chart) return;\n\n    if (options) {\n      chart.options = { ...options };\n    }\n\n    if (!chart.config.data) {\n      chart.config.data = computedData;\n      chart.update();\n      return;\n    }\n\n    const { datasets: newDataSets = [], ...newChartData } = computedData;\n    const { datasets: currentDataSets = [] } = chart.config.data;\n\n    // copy values\n    assign(chart.config.data, newChartData);\n\n    chart.config.data.datasets = newDataSets.map((newDataSet: any) => {\n      // given the new set, find it's current match\n      const currentDataSet = find(\n        currentDataSets,\n        d => d.label === newDataSet.label && d.type === newDataSet.type\n      );\n\n      // There is no original to update, so simply add new one\n      if (!currentDataSet || !newDataSet.data) return { ...newDataSet };\n\n      if (!currentDataSet.data) {\n        currentDataSet.data = [];\n      } else {\n        currentDataSet.data.length = newDataSet.data.length;\n      }\n\n      // copy in values\n      assign(currentDataSet.data, newDataSet.data);\n\n      // apply dataset changes, but keep copied data\n      assign(currentDataSet, { ...newDataSet, data: currentDataSet.data });\n      return currentDataSet;\n    });\n\n    chart.update();\n  };\n\n  const destroyChart = () => {\n    if (chart) chart.destroy();\n  };\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  useEffect(() => {\n    if (redraw) {\n      destroyChart();\n      setTimeout(() => {\n        renderChart();\n      }, 0);\n    } else {\n      updateChart();\n    }\n  }, [props, computedData]);\n\n  return (\n    <canvas\n      {...rest}\n      height={height}\n      width={width}\n      ref={canvas}\n      id={id}\n      className={className}\n      onClick={onClick}\n      data-testid='canvas'\n      role='img'\n    >\n      {fallbackContent}\n    </canvas>\n  );\n});\n\nexport default ChartComponent;\n","import React, { forwardRef } from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { Props } from './types';\nimport ChartComponent from './chart';\n// eslint-disable-next-line no-unused-vars\nimport Chart from 'chart.js/auto';\nimport * as chartjs from 'chart.js';\n\nexport const Line = forwardRef<Chart | undefined, Omit<Props, 'type'>>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='line'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Bar = forwardRef<Chart | undefined, Omit<Props, 'type'>>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='bar'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Radar = forwardRef<Chart | undefined, Omit<Props, 'type'>>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='radar'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Doughnut = forwardRef<Chart | undefined, Omit<Props, 'type'>>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='doughnut'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const PolarArea = forwardRef<Chart | undefined, Omit<Props, 'type'>>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='polarArea'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Bubble = forwardRef<Chart | undefined, Omit<Props, 'type'>>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='bubble'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Pie = forwardRef<Chart | undefined, Omit<Props, 'type'>>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='pie'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Scatter = forwardRef<Chart | undefined, Omit<Props, 'type'>>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='scatter'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const defaults = chartjs.defaults;\n\nexport const Chart = chartjs.Chart;\n\nexport default ChartComponent;\n"],"names":["ChartComponent","forwardRef","props","ref","id","className","height","width","redraw","type","data","options","plugins","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","fallbackContent","rest","canvas","useRef","computedData","useMemo","current","merge","useState","chart","setChart","useImperativeHandle","renderChart","Chart","onClick","e","getElementsAtEventForMode","intersect","updateChart","config","update","datasets","newDataSets","newChartData","currentDataSets","assign","map","newDataSet","currentDataSet","find","d","label","length","destroyChart","destroy","useEffect","setTimeout","React","role","Line","Bar","Radar","Doughnut","PolarArea","Bubble","Pie","Scatter","defaults","chartjs"],"mappings":"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"}