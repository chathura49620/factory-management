{"ast":null,"code":"import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { format } from \"date-fns\"; // define a generatePDF function that accepts a tickets argument\n\nconst generatePDF = tickets => {\n  // initialize jsPDF\n  const doc = new jsPDF(); // define the columns we want and their titles\n  //const tableColumn = [\"Id\", \"Title\", \"Issue\", \"Status\", \"Closed on\"];\n\n  const tableColumn = [\"Ref No\", \"Reason For Leave\", \"Date\"]; // define an empty array of rows\n\n  const tableRows = []; // for each ticket pass all its data into an array\n\n  tickets.forEach(ticket => {\n    const ticketData = [ticket.refno, ticket.reasonforleave, ticket.date // called date-fns to format the date on the ticket\n    //format(new Date(ticket.date), \"yyyy-MM-dd\"),\n    ]; // push each tickcet's info into a row\n\n    tableRows.push(ticketData);\n  }); // startY is basically margin-top\n\n  doc.autoTable(tableColumn, tableRows, {\n    startY: 20\n  });\n  const date = Date().split(\" \"); // we use a date string to generate our filename.\n\n  const dateStr = date[0] + date[1] + date[2] + date[3] + date[4]; // ticket title. and margin-top + margin-left\n\n  doc.text(\"Employee Leaves.\", 14, 15); // we define the name of our PDF file.\n\n  doc.save(`report_${dateStr}.pdf`);\n};\n\nexport default generatePDF;","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/src/components/Employee/utills/reportGenerator.js"],"names":["jsPDF","format","generatePDF","tickets","doc","tableColumn","tableRows","forEach","ticket","ticketData","refno","reasonforleave","date","push","autoTable","startY","Date","split","dateStr","text","save"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,SAASC,MAAT,QAAuB,UAAvB,C,CAGA;;AACA,MAAMC,WAAW,GAAIC,OAAD,IAAa;AAC/B;AACA,QAAMC,GAAG,GAAG,IAAIJ,KAAJ,EAAZ,CAF+B,CAI/B;AACA;;AACA,QAAMK,WAAW,GAAG,CAClB,QADkB,EAElB,kBAFkB,EAGlB,MAHkB,CAApB,CAN+B,CAW/B;;AACA,QAAMC,SAAS,GAAG,EAAlB,CAZ+B,CAc/B;;AACAH,EAAAA,OAAO,CAACI,OAAR,CAAiBC,MAAD,IAAY;AAC1B,UAAMC,UAAU,GAAG,CACjBD,MAAM,CAACE,KADU,EAEjBF,MAAM,CAACG,cAFU,EAGjBH,MAAM,CAACI,IAHU,CAIjB;AACA;AALiB,KAAnB,CAD0B,CAQ1B;;AACAN,IAAAA,SAAS,CAACO,IAAV,CAAeJ,UAAf;AACD,GAVD,EAf+B,CA2B/B;;AACAL,EAAAA,GAAG,CAACU,SAAJ,CAAcT,WAAd,EAA2BC,SAA3B,EAAsC;AAAES,IAAAA,MAAM,EAAE;AAAV,GAAtC;AACA,QAAMH,IAAI,GAAGI,IAAI,GAAGC,KAAP,CAAa,GAAb,CAAb,CA7B+B,CA8B/B;;AACA,QAAMC,OAAO,GAAGN,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAd,GAAoBA,IAAI,CAAC,CAAD,CAAxB,GAA8BA,IAAI,CAAC,CAAD,CAAlC,GAAwCA,IAAI,CAAC,CAAD,CAA5D,CA/B+B,CAgC/B;;AACAR,EAAAA,GAAG,CAACe,IAAJ,CAAS,kBAAT,EAA6B,EAA7B,EAAiC,EAAjC,EAjC+B,CAkC/B;;AACAf,EAAAA,GAAG,CAACgB,IAAJ,CAAU,UAASF,OAAQ,MAA3B;AACD,CApCD;;AAsCA,eAAehB,WAAf","sourcesContent":["import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { format } from \"date-fns\";\r\n\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst generatePDF = (tickets) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n\r\n  // define the columns we want and their titles\r\n  //const tableColumn = [\"Id\", \"Title\", \"Issue\", \"Status\", \"Closed on\"];\r\n  const tableColumn = [\r\n    \"Ref No\",\r\n    \"Reason For Leave\",\r\n    \"Date\",\r\n  ];\r\n  // define an empty array of rows\r\n  const tableRows = [];\r\n\r\n  // for each ticket pass all its data into an array\r\n  tickets.forEach((ticket) => {\r\n    const ticketData = [\r\n      ticket.refno,\r\n      ticket.reasonforleave,\r\n      ticket.date\r\n      // called date-fns to format the date on the ticket\r\n      //format(new Date(ticket.date), \"yyyy-MM-dd\"),\r\n    ];\r\n    // push each tickcet's info into a row\r\n    tableRows.push(ticketData);\r\n  });\r\n\r\n  // startY is basically margin-top\r\n  doc.autoTable(tableColumn, tableRows, { startY: 20 });\r\n  const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  const dateStr = date[0] + date[1] + date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(\"Employee Leaves.\", 14, 15);\r\n  // we define the name of our PDF file.\r\n  doc.save(`report_${dateStr}.pdf`);\r\n};\r\n\r\nexport default generatePDF;\r\n"]},"metadata":{},"sourceType":"module"}