{"ast":null,"code":"var _jsxFileName = \"/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/WholesaleBuyer/FeedbackPage.jsx\";\nimport React, { Component } from \"react\";\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport addorder from \"../../pages/assets/addorderpic.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FeedbackPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      snackbaropen: false,\n      snackbarmsg: \"\",\n      categories: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/api/categories\").then(result => {\n      const categories = result.data;\n      this.setState({\n        categories: categories\n      });\n    }).catch(err => console.log(err.message));\n  }\n\n  handleSubmit(event, props) {\n    console.log(event);\n    const isValid = this.validate();\n    event.preventDefault(); //alert(event.target.name.value);\n\n    if (isValid) {\n      fetch(\"http://localhost:5000/api/feedback-details\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          username: \"thirnaya\"\n        },\n        body: JSON.stringify({\n          email: event.target.email.value,\n          mobileNumber: event.target.mobileNumber.value,\n          feedback: event.target.feedback.value\n        })\n      }).then(res => res.json()).then(result => {\n        swal({\n          title: \"New Production Round Details Added Succesfully\",\n          icon: \"success\",\n          button: \"Done\"\n        });\n        setTimeout(function () {\n          window.location.reload();\n        }.bind(this), 1500);\n      }, error => {\n        this.setState({\n          snackbaropen: true,\n          snackbarmsg: \"Failed\"\n        });\n      });\n    }\n  }\n\n  validate() {\n    let validationError = \"\";\n\n    if (!this.state.validationError) {\n      validationError = \"This Field Cannot Be Blank\";\n    }\n\n    if (validationError) {\n      this.setState({\n        validationError: validationError\n      });\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading\",\n        children: \"Add Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: addorder,\n          alt: \"leavepic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"email\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                style: {\n                  border: \"1px solid #050139\"\n                },\n                type: \"text\",\n                name: \"email\",\n                placeholder: \"Email\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  background: \"#f8d7da\"\n                },\n                children: this.state.validationError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"mobileNumber\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: \"Mobile Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                style: {\n                  border: \"1px solid #050139\"\n                },\n                type: \"text\",\n                name: \"mobileNumber\",\n                placeholder: \"Mobile Number\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  background: \"#f8d7da\"\n                },\n                children: this.state.validationError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"feedback\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: \"Feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                style: {\n                  border: \"1px solid #050139\"\n                },\n                type: \"text\",\n                name: \"feedback\",\n                placeholder: \"Feedback\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  background: \"#f8d7da\"\n                },\n                children: this.state.validationError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"my-1\",\n                style: {\n                  backgroundColor: \"#7121AD\",\n                  color: \"white\"\n                },\n                type: \"submit\",\n                children: \"Add Feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FeedbackPage;","map":{"version":3,"sources":["/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/WholesaleBuyer/FeedbackPage.jsx"],"names":["React","Component","Modal","Button","Row","Col","Form","FormGroup","swal","axios","addorder","FeedbackPage","constructor","props","state","snackbaropen","snackbarmsg","categories","handleSubmit","bind","componentDidMount","get","then","result","data","setState","catch","err","console","log","message","event","isValid","validate","preventDefault","fetch","method","headers","Accept","username","body","JSON","stringify","email","target","value","mobileNumber","feedback","res","json","title","icon","button","setTimeout","window","location","reload","error","validationError","render","fontWeight","border","background","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport addorder from \"../../pages/assets/addorderpic.png\";\n\nclass FeedbackPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { snackbaropen: false, snackbarmsg: \"\", categories: [] };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/categories\")\n      .then((result) => {\n        const categories = result.data;\n\n        this.setState({ categories: categories });\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  handleSubmit(event, props) {\n    console.log(event);\n    const isValid = this.validate();\n    event.preventDefault();\n    //alert(event.target.name.value);\n\n    if (isValid) {\n      fetch(\"http://localhost:5000/api/feedback-details\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          username: \"thirnaya\",\n        },\n        body: JSON.stringify({\n          email: event.target.email.value,\n          mobileNumber: event.target.mobileNumber.value,\n          feedback: event.target.feedback.value,\n        }),\n      })\n        .then((res) => res.json())\n        .then(\n          (result) => {\n            swal({\n              title: \"New Production Round Details Added Succesfully\",\n              icon: \"success\",\n              button: \"Done\",\n            });\n            setTimeout(\n              function () {\n                window.location.reload();\n              }.bind(this),\n              1500\n            );\n          },\n          (error) => {\n            this.setState({ snackbaropen: true, snackbarmsg: \"Failed\" });\n          }\n        );\n    }\n  }\n\n  validate() {\n    let validationError = \"\";\n\n    if (!this.state.validationError) {\n      validationError = \"This Field Cannot Be Blank\";\n    }\n\n    if (validationError) {\n      this.setState({ validationError: validationError });\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1 className=\"heading\">Add Feedback</h1>\n\n        <div className=\"center\">\n          <img src={addorder} alt=\"leavepic\" />\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-3\"></div>\n\n          <div className=\"col\">\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Group controlId=\"email\">\n                <Form.Label style={{ fontWeight: \"bold\" }}>Email</Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  required\n                />\n                <div style={{ background: \"#f8d7da\" }}>\n                  {this.state.validationError}\n                </div>\n              </Form.Group>\n\n              <Form.Group controlId=\"mobileNumber\">\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Mobile Number\n                </Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  type=\"text\"\n                  name=\"mobileNumber\"\n                  placeholder=\"Mobile Number\"\n                  required\n                />\n                <div style={{ background: \"#f8d7da\" }}>\n                  {this.state.validationError}\n                </div>\n              </Form.Group>\n              <Form.Group controlId=\"feedback\">\n                <Form.Label style={{ fontWeight: \"bold\" }}>Feedback</Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  type=\"text\"\n                  name=\"feedback\"\n                  placeholder=\"Feedback\"\n                  required\n                />\n                <div style={{ background: \"#f8d7da\" }}>\n                  {this.state.validationError}\n                </div>\n              </Form.Group>\n\n              <Form.Group>\n                <Button\n                  className=\"my-1\"\n                  style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\n                  type=\"submit\"\n                >\n                  Add Feedback\n                </Button>\n              </Form.Group>\n            </Form>\n          </div>\n\n          <div className=\"col-1\"></div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default FeedbackPage;\n"]},"metadata":{},"sourceType":"module"}