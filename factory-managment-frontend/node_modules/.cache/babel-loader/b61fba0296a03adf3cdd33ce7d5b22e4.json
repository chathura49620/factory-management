{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { voronoi } from 'd3-voronoi';\nimport { getAttributeFunctor } from '../utils/scales-utils';\n\nvar NOOP = function NOOP(f) {\n  return f;\n}; // Find the index of the node at coordinates of a touch point\n\n\nfunction getNodeIndex(evt) {\n  var _evt$nativeEvent = evt.nativeEvent,\n      pageX = _evt$nativeEvent.pageX,\n      pageY = _evt$nativeEvent.pageY;\n  var target = document.elementFromPoint(pageX, pageY);\n\n  if (!target) {\n    return -1;\n  }\n\n  var parentNode = target.parentNode;\n  return Array.prototype.indexOf.call(parentNode.childNodes, target);\n}\n\nfunction getExtent(_ref) {\n  var innerWidth = _ref.innerWidth,\n      innerHeight = _ref.innerHeight,\n      marginLeft = _ref.marginLeft,\n      marginTop = _ref.marginTop;\n  return [[marginLeft, marginTop], [innerWidth + marginLeft, innerHeight + marginTop]];\n}\n\nfunction Voronoi(props) {\n  var className = props.className,\n      extent = props.extent,\n      nodes = props.nodes,\n      onBlur = props.onBlur,\n      _onClick = props.onClick,\n      _onMouseUp = props.onMouseUp,\n      _onMouseDown = props.onMouseDown,\n      onHover = props.onHover,\n      polygonStyle = props.polygonStyle,\n      style = props.style,\n      x = props.x,\n      y = props.y; // Create a voronoi with each node center points\n\n  var voronoiInstance = voronoi().x(x || getAttributeFunctor(props, 'x')).y(y || getAttributeFunctor(props, 'y')).extent(extent || getExtent(props)); // Create an array of polygons corresponding to the cells in voronoi\n\n  var polygons = voronoiInstance.polygons(nodes); // Create helper function to handle special logic for touch events\n\n  var handleTouchEvent = function handleTouchEvent(handler) {\n    return function (evt) {\n      evt.preventDefault();\n      var index = getNodeIndex(evt);\n\n      if (index > -1 && index < polygons.length) {\n        var d = polygons[index];\n        handler(d.data);\n      }\n    };\n  };\n\n  return React.createElement('g', {\n    className: className + ' rv-voronoi',\n    style: style // Because of the nature of how touch events, and more specifically touchmove\n    // and how it differs from mouseover, we must manage touch events on the parent\n    ,\n    onTouchEnd: handleTouchEvent(_onMouseUp),\n    onTouchStart: handleTouchEvent(_onMouseDown),\n    onTouchMove: handleTouchEvent(onHover),\n    onTouchCancel: handleTouchEvent(onBlur)\n  }, polygons.map(function (d, i) {\n    return React.createElement('path', {\n      className: 'rv-voronoi__cell ' + (d.data && d.data.className || ''),\n      d: 'M' + d.join('L') + 'Z',\n      onClick: function onClick() {\n        return _onClick(d.data);\n      },\n      onMouseUp: function onMouseUp() {\n        return _onMouseUp(d.data);\n      },\n      onMouseDown: function onMouseDown() {\n        return _onMouseDown(d.data);\n      },\n      onMouseOver: function onMouseOver() {\n        return onHover(d.data);\n      },\n      onMouseOut: function onMouseOut() {\n        return onBlur(d.data);\n      },\n      fill: 'none',\n      style: _extends({\n        pointerEvents: 'all'\n      }, polygonStyle, d.data && d.data.style),\n      key: i\n    });\n  }));\n}\n\nVoronoi.requiresSVG = true;\nVoronoi.displayName = 'Voronoi';\nVoronoi.defaultProps = {\n  className: '',\n  onBlur: NOOP,\n  onClick: NOOP,\n  onHover: NOOP,\n  onMouseDown: NOOP,\n  onMouseUp: NOOP\n};\nVoronoi.propTypes = {\n  className: PropTypes.string,\n  extent: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\n  nodes: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  onHover: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  x: PropTypes.func,\n  y: PropTypes.func\n};\nexport default Voronoi;","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/node_modules/react-vis/es/plot/voronoi.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","React","PropTypes","voronoi","getAttributeFunctor","NOOP","f","getNodeIndex","evt","_evt$nativeEvent","nativeEvent","pageX","pageY","document","elementFromPoint","parentNode","Array","indexOf","childNodes","getExtent","_ref","innerWidth","innerHeight","marginLeft","marginTop","Voronoi","props","className","extent","nodes","onBlur","_onClick","onClick","_onMouseUp","onMouseUp","_onMouseDown","onMouseDown","onHover","polygonStyle","style","x","y","voronoiInstance","polygons","handleTouchEvent","handler","preventDefault","index","d","data","createElement","onTouchEnd","onTouchStart","onTouchMove","onTouchCancel","map","join","onMouseOver","onMouseOut","fill","pointerEvents","requiresSVG","displayName","defaultProps","propTypes","string","arrayOf","number","object","isRequired","func"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { voronoi } from 'd3-voronoi';\r\n\r\nimport { getAttributeFunctor } from '../utils/scales-utils';\r\n\r\nvar NOOP = function NOOP(f) {\r\n  return f;\r\n};\r\n\r\n// Find the index of the node at coordinates of a touch point\r\nfunction getNodeIndex(evt) {\r\n  var _evt$nativeEvent = evt.nativeEvent,\r\n      pageX = _evt$nativeEvent.pageX,\r\n      pageY = _evt$nativeEvent.pageY;\r\n\r\n  var target = document.elementFromPoint(pageX, pageY);\r\n  if (!target) {\r\n    return -1;\r\n  }\r\n  var parentNode = target.parentNode;\r\n\r\n  return Array.prototype.indexOf.call(parentNode.childNodes, target);\r\n}\r\n\r\nfunction getExtent(_ref) {\r\n  var innerWidth = _ref.innerWidth,\r\n      innerHeight = _ref.innerHeight,\r\n      marginLeft = _ref.marginLeft,\r\n      marginTop = _ref.marginTop;\r\n\r\n  return [[marginLeft, marginTop], [innerWidth + marginLeft, innerHeight + marginTop]];\r\n}\r\n\r\nfunction Voronoi(props) {\r\n  var className = props.className,\r\n      extent = props.extent,\r\n      nodes = props.nodes,\r\n      onBlur = props.onBlur,\r\n      _onClick = props.onClick,\r\n      _onMouseUp = props.onMouseUp,\r\n      _onMouseDown = props.onMouseDown,\r\n      onHover = props.onHover,\r\n      polygonStyle = props.polygonStyle,\r\n      style = props.style,\r\n      x = props.x,\r\n      y = props.y;\r\n  // Create a voronoi with each node center points\r\n\r\n  var voronoiInstance = voronoi().x(x || getAttributeFunctor(props, 'x')).y(y || getAttributeFunctor(props, 'y')).extent(extent || getExtent(props));\r\n\r\n  // Create an array of polygons corresponding to the cells in voronoi\r\n  var polygons = voronoiInstance.polygons(nodes);\r\n\r\n  // Create helper function to handle special logic for touch events\r\n  var handleTouchEvent = function handleTouchEvent(handler) {\r\n    return function (evt) {\r\n      evt.preventDefault();\r\n      var index = getNodeIndex(evt);\r\n      if (index > -1 && index < polygons.length) {\r\n        var d = polygons[index];\r\n        handler(d.data);\r\n      }\r\n    };\r\n  };\r\n\r\n  return React.createElement(\r\n    'g',\r\n    {\r\n      className: className + ' rv-voronoi',\r\n      style: style\r\n      // Because of the nature of how touch events, and more specifically touchmove\r\n      // and how it differs from mouseover, we must manage touch events on the parent\r\n      , onTouchEnd: handleTouchEvent(_onMouseUp),\r\n      onTouchStart: handleTouchEvent(_onMouseDown),\r\n      onTouchMove: handleTouchEvent(onHover),\r\n      onTouchCancel: handleTouchEvent(onBlur)\r\n    },\r\n    polygons.map(function (d, i) {\r\n      return React.createElement('path', {\r\n        className: 'rv-voronoi__cell ' + (d.data && d.data.className || ''),\r\n        d: 'M' + d.join('L') + 'Z',\r\n        onClick: function onClick() {\r\n          return _onClick(d.data);\r\n        },\r\n        onMouseUp: function onMouseUp() {\r\n          return _onMouseUp(d.data);\r\n        },\r\n        onMouseDown: function onMouseDown() {\r\n          return _onMouseDown(d.data);\r\n        },\r\n        onMouseOver: function onMouseOver() {\r\n          return onHover(d.data);\r\n        },\r\n        onMouseOut: function onMouseOut() {\r\n          return onBlur(d.data);\r\n        },\r\n        fill: 'none',\r\n        style: _extends({\r\n          pointerEvents: 'all'\r\n        }, polygonStyle, d.data && d.data.style),\r\n        key: i\r\n      });\r\n    })\r\n  );\r\n}\r\n\r\nVoronoi.requiresSVG = true;\r\nVoronoi.displayName = 'Voronoi';\r\nVoronoi.defaultProps = {\r\n  className: '',\r\n  onBlur: NOOP,\r\n  onClick: NOOP,\r\n  onHover: NOOP,\r\n  onMouseDown: NOOP,\r\n  onMouseUp: NOOP\r\n};\r\n\r\nVoronoi.propTypes = {\r\n  className: PropTypes.string,\r\n  extent: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\r\n  nodes: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onBlur: PropTypes.func,\r\n  onClick: PropTypes.func,\r\n  onHover: PropTypes.func,\r\n  onMouseDown: PropTypes.func,\r\n  onMouseUp: PropTypes.func,\r\n  x: PropTypes.func,\r\n  y: PropTypes.func\r\n};\r\n\r\nexport default Voronoi;"]},"metadata":{},"sourceType":"module"}