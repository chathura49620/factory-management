{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  aspectRatio: '1x1'\n};\n\nfunction toPercent(num) {\n  if (num <= 0 || num > 100) return '100%';\n  if (num < 1) return `${num * 100}%`;\n  return `${num}%`;\n}\n\nconst Ratio = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  aspectRatio,\n  style,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'ratio');\n  const isCustomRatio = typeof aspectRatio === 'number';\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    style: { ...style,\n      ...(isCustomRatio && {\n        '--bs-aspect-ratio': toPercent(aspectRatio)\n      })\n    },\n    className: classNames(bsPrefix, className, !isCustomRatio && `${bsPrefix}-${aspectRatio}`),\n    children: React.Children.only(children)\n  });\n});\nRatio.defaultProps = defaultProps;\nexport default Ratio;","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/node_modules/react-bootstrap/esm/Ratio.js"],"names":["classNames","React","useBootstrapPrefix","jsx","_jsx","defaultProps","aspectRatio","toPercent","num","Ratio","forwardRef","bsPrefix","className","children","style","props","ref","isCustomRatio","Children","only"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE;AADM,CAArB;;AAIA,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACtB,MAAIA,GAAG,IAAI,CAAP,IAAYA,GAAG,GAAG,GAAtB,EAA2B,OAAO,MAAP;AAC3B,MAAIA,GAAG,GAAG,CAAV,EAAa,OAAQ,GAAEA,GAAG,GAAG,GAAI,GAApB;AACb,SAAQ,GAAEA,GAAI,GAAd;AACD;;AAED,MAAMC,KAAK,GAAG,aAAaR,KAAK,CAACS,UAAN,CAAiB,CAAC;AAC3CC,EAAAA,QAD2C;AAE3CC,EAAAA,SAF2C;AAG3CC,EAAAA,QAH2C;AAI3CP,EAAAA,WAJ2C;AAK3CQ,EAAAA,KAL2C;AAM3C,KAAGC;AANwC,CAAD,EAOzCC,GAPyC,KAOjC;AACTL,EAAAA,QAAQ,GAAGT,kBAAkB,CAACS,QAAD,EAAW,OAAX,CAA7B;AACA,QAAMM,aAAa,GAAG,OAAOX,WAAP,KAAuB,QAA7C;AACA,SAAO,aAAaF,IAAI,CAAC,KAAD,EAAQ;AAC9BY,IAAAA,GAAG,EAAEA,GADyB;AAE9B,OAAGD,KAF2B;AAG9BD,IAAAA,KAAK,EAAE,EAAE,GAAGA,KAAL;AACL,UAAIG,aAAa,IAAI;AACnB,6BAAqBV,SAAS,CAACD,WAAD;AADX,OAArB;AADK,KAHuB;AAQ9BM,IAAAA,SAAS,EAAEZ,UAAU,CAACW,QAAD,EAAWC,SAAX,EAAsB,CAACK,aAAD,IAAmB,GAAEN,QAAS,IAAGL,WAAY,EAAnE,CARS;AAS9BO,IAAAA,QAAQ,EAAEZ,KAAK,CAACiB,QAAN,CAAeC,IAAf,CAAoBN,QAApB;AAToB,GAAR,CAAxB;AAWD,CArB0B,CAA3B;AAsBAJ,KAAK,CAACJ,YAAN,GAAqBA,YAArB;AACA,eAAeI,KAAf","sourcesContent":["import classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst defaultProps = {\r\n  aspectRatio: '1x1'\r\n};\r\n\r\nfunction toPercent(num) {\r\n  if (num <= 0 || num > 100) return '100%';\r\n  if (num < 1) return `${num * 100}%`;\r\n  return `${num}%`;\r\n}\r\n\r\nconst Ratio = /*#__PURE__*/React.forwardRef(({\r\n  bsPrefix,\r\n  className,\r\n  children,\r\n  aspectRatio,\r\n  style,\r\n  ...props\r\n}, ref) => {\r\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'ratio');\r\n  const isCustomRatio = typeof aspectRatio === 'number';\r\n  return /*#__PURE__*/_jsx(\"div\", {\r\n    ref: ref,\r\n    ...props,\r\n    style: { ...style,\r\n      ...(isCustomRatio && {\r\n        '--bs-aspect-ratio': toPercent(aspectRatio)\r\n      })\r\n    },\r\n    className: classNames(bsPrefix, className, !isCustomRatio && `${bsPrefix}-${aspectRatio}`),\r\n    children: React.Children.only(children)\r\n  });\r\n});\r\nRatio.defaultProps = defaultProps;\r\nexport default Ratio;"]},"metadata":{},"sourceType":"module"}