{"ast":null,"code":"import { sqrt } from \"../math.js\"; // TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function () {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function () {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function () {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];\n    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/node_modules/d3-geo/src/path/centroid.js"],"names":["sqrt","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","x00","y00","x0","y0","centroidStream","point","centroidPoint","lineStart","centroidLineStart","lineEnd","centroidLineEnd","polygonStart","centroidRingStart","centroidRingEnd","polygonEnd","result","centroid","NaN","x","y","centroidPointFirstLine","centroidPointLine","dx","dy","z","centroidPointFirstRing","centroidPointRing"],"mappings":"AAAA,SAAQA,IAAR,QAAmB,YAAnB,C,CAEA;;AAEA,IAAIC,EAAE,GAAG,CAAT;AAAA,IACIC,EAAE,GAAG,CADT;AAAA,IAEIC,EAAE,GAAG,CAFT;AAAA,IAGIC,EAAE,GAAG,CAHT;AAAA,IAIIC,EAAE,GAAG,CAJT;AAAA,IAKIC,EAAE,GAAG,CALT;AAAA,IAMIC,EAAE,GAAG,CANT;AAAA,IAOIC,EAAE,GAAG,CAPT;AAAA,IAQIC,EAAE,GAAG,CART;AAAA,IASIC,GATJ;AAAA,IAUIC,GAVJ;AAAA,IAWIC,EAXJ;AAAA,IAYIC,EAZJ;AAcA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,KAAK,EAAEC,aADY;AAEnBC,EAAAA,SAAS,EAAEC,iBAFQ;AAGnBC,EAAAA,OAAO,EAAEC,eAHU;AAInBC,EAAAA,YAAY,EAAE,YAAW;AACvBP,IAAAA,cAAc,CAACG,SAAf,GAA2BK,iBAA3B;AACAR,IAAAA,cAAc,CAACK,OAAf,GAAyBI,eAAzB;AACD,GAPkB;AAQnBC,EAAAA,UAAU,EAAE,YAAW;AACrBV,IAAAA,cAAc,CAACC,KAAf,GAAuBC,aAAvB;AACAF,IAAAA,cAAc,CAACG,SAAf,GAA2BC,iBAA3B;AACAJ,IAAAA,cAAc,CAACK,OAAf,GAAyBC,eAAzB;AACD,GAZkB;AAanBK,EAAAA,MAAM,EAAE,YAAW;AACjB,QAAIC,QAAQ,GAAGjB,EAAE,GAAG,CAACF,EAAE,GAAGE,EAAN,EAAUD,EAAE,GAAGC,EAAf,CAAH,GACXH,EAAE,GAAG,CAACF,EAAE,GAAGE,EAAN,EAAUD,EAAE,GAAGC,EAAf,CAAH,GACFH,EAAE,GAAG,CAACF,EAAE,GAAGE,EAAN,EAAUD,EAAE,GAAGC,EAAf,CAAH,GACF,CAACwB,GAAD,EAAMA,GAAN,CAHN;AAIA1B,IAAAA,EAAE,GAAGC,EAAE,GAAGC,EAAE,GACZC,EAAE,GAAGC,EAAE,GAAGC,EAAE,GACZC,EAAE,GAAGC,EAAE,GAAGC,EAAE,GAAG,CAFf;AAGA,WAAOiB,QAAP;AACD;AAtBkB,CAArB;;AAyBA,SAASV,aAAT,CAAuBY,CAAvB,EAA0BC,CAA1B,EAA6B;AAC3B5B,EAAAA,EAAE,IAAI2B,CAAN;AACA1B,EAAAA,EAAE,IAAI2B,CAAN;AACA,IAAE1B,EAAF;AACD;;AAED,SAASe,iBAAT,GAA6B;AAC3BJ,EAAAA,cAAc,CAACC,KAAf,GAAuBe,sBAAvB;AACD;;AAED,SAASA,sBAAT,CAAgCF,CAAhC,EAAmCC,CAAnC,EAAsC;AACpCf,EAAAA,cAAc,CAACC,KAAf,GAAuBgB,iBAAvB;AACAf,EAAAA,aAAa,CAACJ,EAAE,GAAGgB,CAAN,EAASf,EAAE,GAAGgB,CAAd,CAAb;AACD;;AAED,SAASE,iBAAT,CAA2BH,CAA3B,EAA8BC,CAA9B,EAAiC;AAC/B,MAAIG,EAAE,GAAGJ,CAAC,GAAGhB,EAAb;AAAA,MAAiBqB,EAAE,GAAGJ,CAAC,GAAGhB,EAA1B;AAAA,MAA8BqB,CAAC,GAAGlC,IAAI,CAACgC,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAhB,CAAtC;AACA7B,EAAAA,EAAE,IAAI8B,CAAC,IAAItB,EAAE,GAAGgB,CAAT,CAAD,GAAe,CAArB;AACAvB,EAAAA,EAAE,IAAI6B,CAAC,IAAIrB,EAAE,GAAGgB,CAAT,CAAD,GAAe,CAArB;AACAvB,EAAAA,EAAE,IAAI4B,CAAN;AACAlB,EAAAA,aAAa,CAACJ,EAAE,GAAGgB,CAAN,EAASf,EAAE,GAAGgB,CAAd,CAAb;AACD;;AAED,SAAST,eAAT,GAA2B;AACzBN,EAAAA,cAAc,CAACC,KAAf,GAAuBC,aAAvB;AACD;;AAED,SAASM,iBAAT,GAA6B;AAC3BR,EAAAA,cAAc,CAACC,KAAf,GAAuBoB,sBAAvB;AACD;;AAED,SAASZ,eAAT,GAA2B;AACzBa,EAAAA,iBAAiB,CAAC1B,GAAD,EAAMC,GAAN,CAAjB;AACD;;AAED,SAASwB,sBAAT,CAAgCP,CAAhC,EAAmCC,CAAnC,EAAsC;AACpCf,EAAAA,cAAc,CAACC,KAAf,GAAuBqB,iBAAvB;AACApB,EAAAA,aAAa,CAACN,GAAG,GAAGE,EAAE,GAAGgB,CAAZ,EAAejB,GAAG,GAAGE,EAAE,GAAGgB,CAA1B,CAAb;AACD;;AAED,SAASO,iBAAT,CAA2BR,CAA3B,EAA8BC,CAA9B,EAAiC;AAC/B,MAAIG,EAAE,GAAGJ,CAAC,GAAGhB,EAAb;AAAA,MACIqB,EAAE,GAAGJ,CAAC,GAAGhB,EADb;AAAA,MAEIqB,CAAC,GAAGlC,IAAI,CAACgC,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAhB,CAFZ;AAIA7B,EAAAA,EAAE,IAAI8B,CAAC,IAAItB,EAAE,GAAGgB,CAAT,CAAD,GAAe,CAArB;AACAvB,EAAAA,EAAE,IAAI6B,CAAC,IAAIrB,EAAE,GAAGgB,CAAT,CAAD,GAAe,CAArB;AACAvB,EAAAA,EAAE,IAAI4B,CAAN;AAEAA,EAAAA,CAAC,GAAGrB,EAAE,GAAGe,CAAL,GAAShB,EAAE,GAAGiB,CAAlB;AACAtB,EAAAA,EAAE,IAAI2B,CAAC,IAAItB,EAAE,GAAGgB,CAAT,CAAP;AACApB,EAAAA,EAAE,IAAI0B,CAAC,IAAIrB,EAAE,GAAGgB,CAAT,CAAP;AACApB,EAAAA,EAAE,IAAIyB,CAAC,GAAG,CAAV;AACAlB,EAAAA,aAAa,CAACJ,EAAE,GAAGgB,CAAN,EAASf,EAAE,GAAGgB,CAAd,CAAb;AACD;;AAED,eAAef,cAAf","sourcesContent":["import {sqrt} from \"../math.js\";\r\n\r\n// TODO Enforce positive area for exterior, negative area for interior?\r\n\r\nvar X0 = 0,\r\n    Y0 = 0,\r\n    Z0 = 0,\r\n    X1 = 0,\r\n    Y1 = 0,\r\n    Z1 = 0,\r\n    X2 = 0,\r\n    Y2 = 0,\r\n    Z2 = 0,\r\n    x00,\r\n    y00,\r\n    x0,\r\n    y0;\r\n\r\nvar centroidStream = {\r\n  point: centroidPoint,\r\n  lineStart: centroidLineStart,\r\n  lineEnd: centroidLineEnd,\r\n  polygonStart: function() {\r\n    centroidStream.lineStart = centroidRingStart;\r\n    centroidStream.lineEnd = centroidRingEnd;\r\n  },\r\n  polygonEnd: function() {\r\n    centroidStream.point = centroidPoint;\r\n    centroidStream.lineStart = centroidLineStart;\r\n    centroidStream.lineEnd = centroidLineEnd;\r\n  },\r\n  result: function() {\r\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\r\n        : Z1 ? [X1 / Z1, Y1 / Z1]\r\n        : Z0 ? [X0 / Z0, Y0 / Z0]\r\n        : [NaN, NaN];\r\n    X0 = Y0 = Z0 =\r\n    X1 = Y1 = Z1 =\r\n    X2 = Y2 = Z2 = 0;\r\n    return centroid;\r\n  }\r\n};\r\n\r\nfunction centroidPoint(x, y) {\r\n  X0 += x;\r\n  Y0 += y;\r\n  ++Z0;\r\n}\r\n\r\nfunction centroidLineStart() {\r\n  centroidStream.point = centroidPointFirstLine;\r\n}\r\n\r\nfunction centroidPointFirstLine(x, y) {\r\n  centroidStream.point = centroidPointLine;\r\n  centroidPoint(x0 = x, y0 = y);\r\n}\r\n\r\nfunction centroidPointLine(x, y) {\r\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\r\n  X1 += z * (x0 + x) / 2;\r\n  Y1 += z * (y0 + y) / 2;\r\n  Z1 += z;\r\n  centroidPoint(x0 = x, y0 = y);\r\n}\r\n\r\nfunction centroidLineEnd() {\r\n  centroidStream.point = centroidPoint;\r\n}\r\n\r\nfunction centroidRingStart() {\r\n  centroidStream.point = centroidPointFirstRing;\r\n}\r\n\r\nfunction centroidRingEnd() {\r\n  centroidPointRing(x00, y00);\r\n}\r\n\r\nfunction centroidPointFirstRing(x, y) {\r\n  centroidStream.point = centroidPointRing;\r\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\r\n}\r\n\r\nfunction centroidPointRing(x, y) {\r\n  var dx = x - x0,\r\n      dy = y - y0,\r\n      z = sqrt(dx * dx + dy * dy);\r\n\r\n  X1 += z * (x0 + x) / 2;\r\n  Y1 += z * (y0 + y) / 2;\r\n  Z1 += z;\r\n\r\n  z = y0 * x - x0 * y;\r\n  X2 += z * (x0 + x);\r\n  Y2 += z * (y0 + y);\r\n  Z2 += z * 3;\r\n  centroidPoint(x0 = x, y0 = y);\r\n}\r\n\r\nexport default centroidStream;\r\n"]},"metadata":{},"sourceType":"module"}