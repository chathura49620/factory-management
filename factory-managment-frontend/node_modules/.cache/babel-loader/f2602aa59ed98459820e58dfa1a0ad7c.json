{"ast":null,"code":"var _jsxFileName = \"/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/Modals/EditProductionRoundDetailsModal.jsx\";\nimport React, { Component } from 'react';\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport swal from 'sweetalert';\nimport axios from \"axios\";\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class EditProductionRoundDetailsModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.snackbarClose = event => {\n      this.setState({\n        snackbaropen: false\n      });\n    };\n\n    this.state = {\n      snackbaropen: false,\n      snackbarmsg: '',\n      categories: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/api/categories\").then(result => {\n      const categories = result.data;\n      this.setState({\n        categories: categories\n      });\n    }).catch(err => console.log(err.message));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    fetch('http://localhost:5000/api/newProRound-details', {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'username': 'chathura'\n      },\n      body: JSON.stringify({\n        id: event.target.id.value,\n        productCategory: event.target.productCategory.value,\n        quantity: event.target.quntity.value,\n        esDays: event.target.estDays.value,\n        esEmployees: event.target.estEmp.value\n      })\n    }).then(res => res.json()).then(result => {\n      swal({\n        title: \"Category Added Succesfully\",\n        icon: \"success\",\n        button: \"Done\"\n      });\n    }, error => {\n      this.setState({\n        snackbaropen: true,\n        snackbarmsg: 'Failed'\n      });\n    });\n  } //   handleSubmit = (event) => {\n  //       return <Redirect to='/login' />\n  //   }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'center'\n        },\n        open: this.state.snackbaropen,\n        autoHideDuration: 6000,\n        onClose: this.snackbarClose,\n        message: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"message-id\",\n          children: this.state.snackbarmsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 30\n        }, this),\n        action: [/*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"Close\",\n          color: \"danger\",\n          onClick: this.snackbarClose\n        }, \"close\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, { ...this.props,\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\" //centered\n        ,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"contained-modal-title-vcenter\",\n            children: \"Add Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: this.handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    controlId: \"proId\",\n                    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      name: \"id\",\n                      required: true,\n                      placeholder: \"id\",\n                      disabled: true,\n                      hidden: true,\n                      defaultValue: this.props.id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Product Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    required: true,\n                    name: \"productCategory\",\n                    defaultValue: this.props.productCategory,\n                    children: this.state.categories.map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: i.categoryName\n                    }, i._id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 45\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"quntity\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Quntity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    name: \"quntity\",\n                    required: true,\n                    placeholder: \"Quntity\",\n                    defaultValue: this.props.quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"estDays\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Estimated Days\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    name: \"estDays\",\n                    required: true,\n                    placeholder: \"Estimated Days\",\n                    defaultValue: this.props.esDays\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"estEmp\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Estimated Employees\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    name: \"estEmp\",\n                    required: true,\n                    placeholder: \"Estimated Employees\",\n                    defaultValue: this.props.esEmployees\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    type: \"submit\",\n                    children: \"Update Production Round\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: this.props.onHide,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/Modals/EditProductionRoundDetailsModal.jsx"],"names":["React","Component","Modal","Button","Row","Col","Form","FormGroup","Snackbar","IconButton","swal","axios","Redirect","EditProductionRoundDetailsModal","constructor","props","snackbarClose","event","setState","snackbaropen","state","snackbarmsg","categories","handleSubmit","bind","componentDidMount","get","then","result","data","catch","err","console","log","message","preventDefault","fetch","method","headers","body","JSON","stringify","id","target","value","productCategory","quantity","quntity","esDays","estDays","esEmployees","estEmp","res","json","title","icon","button","error","render","vertical","horizontal","map","i","categoryName","_id","onHide"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport swal from 'sweetalert';\nimport axios from \"axios\";\nimport { Redirect } from 'react-router-dom';\n\n\nexport class EditProductionRoundDetailsModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { snackbaropen: false, snackbarmsg: '', categories:[] };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    snackbarClose = (event) => {\n        this.setState({ snackbaropen: false });\n    };\n\n    componentDidMount() {\n        axios\n          .get(\"http://localhost:5000/api/categories\")\n          .then((result) => {\n            const categories = result.data;\n    \n            this.setState({ categories: categories });\n          })\n          .catch((err) => console.log(err.message));\n      }\n\n    handleSubmit(event) {\n\n        event.preventDefault();\n\n        fetch('http://localhost:5000/api/newProRound-details', {\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'username': 'chathura'\n            },\n            body: JSON.stringify({\n                id:event.target.id.value,\n                productCategory: event.target.productCategory.value,\n                quantity: event.target.quntity.value,\n                esDays: event.target.estDays.value,\n                esEmployees: event.target.estEmp.value,\n            })\n        })\n            .then(res => res.json())\n            .then((result) => {\n                swal({\n                    title: \"Category Added Succesfully\",\n                    icon: \"success\",\n                    button: \"Done\",\n                  }); \n                  \n            }, (error) => {\n                this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\n            }\n\n            )\n    }\n\n    //   handleSubmit = (event) => {\n\n    //       return <Redirect to='/login' />\n\n    //   }\n\n    render() {\n        return (\n            <div className=\"container\">\n\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                    open={this.state.snackbaropen}\n                    autoHideDuration={6000}\n                    onClose={this.snackbarClose}\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\n                    action={[\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\"  onClick={this.snackbarClose}></IconButton>\n                    ]}\n                />\n                <Modal\n                    {...this.props}\n                    size=\"lg\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                //centered\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Add Category\n              </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <Row>\n                            <Col sm={6}>\n                            <Form onSubmit={this.handleSubmit} >\n                                    <Form.Group>\n                                    <Form.Group controlId=\"proId\">\n                                        <Form.Control type=\"text\" name=\"id\" required placeholder=\"id\" disabled hidden  defaultValue={this.props.id}/>\n                                    </Form.Group>\n                                        <Form.Label>Product Category</Form.Label>\n                                        <Form.Control as=\"select\" required name=\"productCategory\" defaultValue={this.props.productCategory}>\n                                        {this.state.categories.map((i) => (\n                                            <option key={i._id}\n                                                    >{i.categoryName}</option>\n                                        ))}\n                                        </Form.Control>  \n                                    </Form.Group>\n                                    <Form.Group controlId=\"quntity\">\n                                        <Form.Label>Quntity</Form.Label>\n                                        <Form.Control type=\"text\" name=\"quntity\" required placeholder=\"Quntity\"  defaultValue={this.props.quantity}/>\n                                    </Form.Group>\n                                    <Form.Group controlId=\"estDays\">\n                                        <Form.Label>Estimated Days</Form.Label>\n                                        <Form.Control type=\"text\" name=\"estDays\" required placeholder=\"Estimated Days\" defaultValue={this.props.esDays}/>\n                                    </Form.Group>\n                                    <Form.Group controlId=\"estEmp\">\n                                        <Form.Label>Estimated Employees</Form.Label>\n                                        <Form.Control type=\"text\" name=\"estEmp\" required placeholder=\"Estimated Employees\"  defaultValue={this.props.esEmployees}/>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Button  variant=\"primary\" type=\"submit\" >\n                                           Update Production Round\n                                        </Button>\n                                    </Form.Group>\n              </Form>\n                            </Col>\n                        </Row>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}