{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}; // Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { scaleLinear } from 'd3-scale';\nimport { format } from 'd3-format';\nimport { AnimationPropType } from '../animation';\nimport XYPlot from '../plot/xy-plot';\nimport { DISCRETE_COLOR_RANGE } from '../theme';\nimport { MarginPropType } from '../utils/chart-utils';\nimport MarkSeries from '../plot/series/mark-series';\nimport PolygonSeries from '../plot/series/polygon-series';\nimport LabelSeries from '../plot/series/label-series';\nimport DecorativeAxis from '../plot/axis/decorative-axis';\nvar predefinedClassName = 'rv-radar-chart';\nvar DEFAULT_FORMAT = format('.2r');\n/**\n * Generate axes for each of the domains\n * @param {Object} props\n - props.animation {Boolean}\n - props.domains {Array} array of object specifying the way each axis is to be plotted\n - props.style {object} style object for the whole chart\n - props.tickFormat {Function} formatting function for axes\n - props.startingAngle {number} the initial angle offset\n * @return {Array} the plotted axis components\n */\n\nfunction getAxes(props) {\n  var animation = props.animation,\n      domains = props.domains,\n      startingAngle = props.startingAngle,\n      style = props.style,\n      tickFormat = props.tickFormat,\n      hideInnerMostValues = props.hideInnerMostValues;\n  return domains.map(function (domain, index) {\n    var angle = index / domains.length * Math.PI * 2 + startingAngle;\n    var sortedDomain = domain.domain;\n\n    var domainTickFormat = function domainTickFormat(t) {\n      if (hideInnerMostValues && t === sortedDomain[0]) {\n        return '';\n      }\n\n      return domain.tickFormat ? domain.tickFormat(t) : tickFormat(t);\n    };\n\n    return React.createElement(DecorativeAxis, {\n      animation: animation,\n      key: index + '-axis',\n      axisStart: {\n        x: 0,\n        y: 0\n      },\n      axisEnd: {\n        x: getCoordinate(Math.cos(angle)),\n        y: getCoordinate(Math.sin(angle))\n      },\n      axisDomain: sortedDomain,\n      numberOfTicks: 5,\n      tickValue: domainTickFormat,\n      style: style.axes\n    });\n  });\n}\n/**\n * Generate x or y coordinate for axisEnd\n * @param {Number} axisEndPoint\n - epsilon is an arbitrarily chosen small number to approximate axisEndPoints\n - to true values resulting from trigonometry functions (sin, cos) on angles\n * @return {Number} the x or y coordinate accounting for exact trig values\n */\n\n\nfunction getCoordinate(axisEndPoint) {\n  var epsilon = 10e-13;\n\n  if (Math.abs(axisEndPoint) <= epsilon) {\n    axisEndPoint = 0;\n  } else if (axisEndPoint > 0) {\n    if (Math.abs(axisEndPoint - 0.5) <= epsilon) {\n      axisEndPoint = 0.5;\n    }\n  } else if (axisEndPoint < 0) {\n    if (Math.abs(axisEndPoint + 0.5) <= epsilon) {\n      axisEndPoint = -0.5;\n    }\n  }\n\n  return axisEndPoint;\n}\n/**\n * Generate labels for the ends of the axes\n * @param {Object} props\n - props.domains {Array} array of object specifying the way each axis is to be plotted\n  - props.startingAngle {number} the initial angle offset\n - props.style {object} style object for just the labels\n * @return {Array} the prepped data for the labelSeries\n */\n\n\nfunction getLabels(props) {\n  var domains = props.domains,\n      startingAngle = props.startingAngle,\n      style = props.style;\n  return domains.map(function (_ref, index) {\n    var name = _ref.name;\n    var angle = index / domains.length * Math.PI * 2 + startingAngle;\n    var radius = 1.2;\n    return {\n      x: radius * Math.cos(angle),\n      y: radius * Math.sin(angle),\n      label: name,\n      style: style\n    };\n  });\n}\n/**\n * Generate the actual polygons to be plotted\n * @param {Object} props\n - props.animation {Boolean}\n - props.data {Array} array of object specifying what values are to be plotted\n - props.domains {Array} array of object specifying the way each axis is to be plotted\n - props.startingAngle {number} the initial angle offset\n - props.style {object} style object for the whole chart\n * @return {Array} the plotted axis components\n */\n\n\nfunction getPolygons(props) {\n  var animation = props.animation,\n      colorRange = props.colorRange,\n      domains = props.domains,\n      data = props.data,\n      style = props.style,\n      startingAngle = props.startingAngle,\n      onSeriesMouseOver = props.onSeriesMouseOver,\n      onSeriesMouseOut = props.onSeriesMouseOut;\n  var scales = domains.reduce(function (acc, _ref2) {\n    var domain = _ref2.domain,\n        name = _ref2.name;\n    acc[name] = scaleLinear().domain(domain).range([0, 1]);\n    return acc;\n  }, {});\n  return data.map(function (row, rowIndex) {\n    var mappedData = domains.map(function (_ref3, index) {\n      var name = _ref3.name,\n          getValue = _ref3.getValue;\n      var dataPoint = getValue ? getValue(row) : row[name]; // error handling if point doesn't exist\n\n      var angle = index / domains.length * Math.PI * 2 + startingAngle; // dont let the radius become negative\n\n      var radius = Math.max(scales[name](dataPoint), 0);\n      return {\n        x: radius * Math.cos(angle),\n        y: radius * Math.sin(angle),\n        name: row.name\n      };\n    });\n    return React.createElement(PolygonSeries, {\n      animation: animation,\n      className: predefinedClassName + '-polygon',\n      key: rowIndex + '-polygon',\n      data: mappedData,\n      style: _extends({\n        stroke: row.color || row.stroke || colorRange[rowIndex % colorRange.length],\n        fill: row.color || row.fill || colorRange[rowIndex % colorRange.length]\n      }, style.polygons),\n      onSeriesMouseOver: onSeriesMouseOver,\n      onSeriesMouseOut: onSeriesMouseOut\n    });\n  });\n}\n/**\n * Generate circles at the polygon points for Hover functionality\n * @param {Object} props\n - props.animation {Boolean}\n - props.data {Array} array of object specifying what values are to be plotted\n - props.domains {Array} array of object specifying the way each axis is to be plotted\n - props.startingAngle {number} the initial angle offset\n - props.style {object} style object for the whole chart\n - props.onValueMouseOver {function} function to call on mouse over a polygon point\n - props.onValueMouseOver {function} function to call when mouse leaves a polygon point\n * @return {Array} the plotted axis components\n */\n\n\nfunction getPolygonPoints(props) {\n  var animation = props.animation,\n      domains = props.domains,\n      data = props.data,\n      startingAngle = props.startingAngle,\n      style = props.style,\n      onValueMouseOver = props.onValueMouseOver,\n      onValueMouseOut = props.onValueMouseOut;\n\n  if (!onValueMouseOver) {\n    return;\n  }\n\n  var scales = domains.reduce(function (acc, _ref4) {\n    var domain = _ref4.domain,\n        name = _ref4.name;\n    acc[name] = scaleLinear().domain(domain).range([0, 1]);\n    return acc;\n  }, {});\n  return data.map(function (row, rowIndex) {\n    var mappedData = domains.map(function (_ref5, index) {\n      var name = _ref5.name,\n          getValue = _ref5.getValue;\n      var dataPoint = getValue ? getValue(row) : row[name]; // error handling if point doesn't exist\n\n      var angle = index / domains.length * Math.PI * 2 + startingAngle; // dont let the radius become negative\n\n      var radius = Math.max(scales[name](dataPoint), 0);\n      return {\n        x: radius * Math.cos(angle),\n        y: radius * Math.sin(angle),\n        domain: name,\n        value: dataPoint,\n        dataName: row.name\n      };\n    });\n    return React.createElement(MarkSeries, {\n      animation: animation,\n      className: predefinedClassName + '-polygonPoint',\n      key: rowIndex + '-polygonPoint',\n      data: mappedData,\n      size: 10,\n      style: _extends({}, style.polygons, {\n        fill: 'transparent',\n        stroke: 'transparent'\n      }),\n      onValueMouseOver: onValueMouseOver,\n      onValueMouseOut: onValueMouseOut\n    });\n  });\n}\n\nfunction RadarChart(props) {\n  var animation = props.animation,\n      className = props.className,\n      children = props.children,\n      colorRange = props.colorRange,\n      data = props.data,\n      domains = props.domains,\n      height = props.height,\n      hideInnerMostValues = props.hideInnerMostValues,\n      margin = props.margin,\n      onMouseLeave = props.onMouseLeave,\n      onMouseEnter = props.onMouseEnter,\n      startingAngle = props.startingAngle,\n      style = props.style,\n      tickFormat = props.tickFormat,\n      width = props.width,\n      renderAxesOverPolygons = props.renderAxesOverPolygons,\n      onValueMouseOver = props.onValueMouseOver,\n      onValueMouseOut = props.onValueMouseOut,\n      onSeriesMouseOver = props.onSeriesMouseOver,\n      onSeriesMouseOut = props.onSeriesMouseOut;\n  var axes = getAxes({\n    domains: domains,\n    animation: animation,\n    hideInnerMostValues: hideInnerMostValues,\n    startingAngle: startingAngle,\n    style: style,\n    tickFormat: tickFormat\n  });\n  var polygons = getPolygons({\n    animation: animation,\n    colorRange: colorRange,\n    domains: domains,\n    data: data,\n    startingAngle: startingAngle,\n    style: style,\n    onSeriesMouseOver: onSeriesMouseOver,\n    onSeriesMouseOut: onSeriesMouseOut\n  });\n  var polygonPoints = getPolygonPoints({\n    animation: animation,\n    colorRange: colorRange,\n    domains: domains,\n    data: data,\n    startingAngle: startingAngle,\n    style: style,\n    onValueMouseOver: onValueMouseOver,\n    onValueMouseOut: onValueMouseOut\n  });\n  var labelSeries = React.createElement(LabelSeries, {\n    animation: animation,\n    key: className,\n    className: predefinedClassName + '-label',\n    data: getLabels({\n      domains: domains,\n      style: style.labels,\n      startingAngle: startingAngle\n    })\n  });\n  return React.createElement(XYPlot, {\n    height: height,\n    width: width,\n    margin: margin,\n    dontCheckIfEmpty: true,\n    className: className + ' ' + predefinedClassName,\n    onMouseLeave: onMouseLeave,\n    onMouseEnter: onMouseEnter,\n    xDomain: [-1, 1],\n    yDomain: [-1, 1]\n  }, children, !renderAxesOverPolygons && axes.concat(polygons).concat(labelSeries).concat(polygonPoints), renderAxesOverPolygons && polygons.concat(labelSeries).concat(axes).concat(polygonPoints));\n}\n\nRadarChart.displayName = 'RadarChart';\nRadarChart.propTypes = {\n  animation: AnimationPropType,\n  className: PropTypes.string,\n  colorType: PropTypes.string,\n  colorRange: PropTypes.arrayOf(PropTypes.string),\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  domains: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    domain: PropTypes.arrayOf(PropTypes.number).isRequired,\n    tickFormat: PropTypes.func\n  })).isRequired,\n  height: PropTypes.number.isRequired,\n  hideInnerMostValues: PropTypes.bool,\n  margin: MarginPropType,\n  startingAngle: PropTypes.number,\n  style: PropTypes.shape({\n    axes: PropTypes.object,\n    labels: PropTypes.object,\n    polygons: PropTypes.object\n  }),\n  tickFormat: PropTypes.func,\n  width: PropTypes.number.isRequired,\n  renderAxesOverPolygons: PropTypes.bool,\n  onValueMouseOver: PropTypes.func,\n  onValueMouseOut: PropTypes.func,\n  onSeriesMouseOver: PropTypes.func,\n  onSeriesMouseOut: PropTypes.func\n};\nRadarChart.defaultProps = {\n  className: '',\n  colorType: 'category',\n  colorRange: DISCRETE_COLOR_RANGE,\n  hideInnerMostValues: true,\n  startingAngle: Math.PI / 2,\n  style: {\n    axes: {\n      line: {},\n      ticks: {},\n      text: {}\n    },\n    labels: {\n      fontSize: 10,\n      textAnchor: 'middle'\n    },\n    polygons: {\n      strokeWidth: 0.5,\n      strokeOpacity: 1,\n      fillOpacity: 0.1\n    }\n  },\n  tickFormat: DEFAULT_FORMAT,\n  renderAxesOverPolygons: false\n};\nexport default RadarChart;","map":{"version":3,"sources":["/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/node_modules/react-vis/es/radar-chart/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","React","PropTypes","scaleLinear","format","AnimationPropType","XYPlot","DISCRETE_COLOR_RANGE","MarginPropType","MarkSeries","PolygonSeries","LabelSeries","DecorativeAxis","predefinedClassName","DEFAULT_FORMAT","getAxes","props","animation","domains","startingAngle","style","tickFormat","hideInnerMostValues","map","domain","index","angle","Math","PI","sortedDomain","domainTickFormat","t","createElement","axisStart","x","y","axisEnd","getCoordinate","cos","sin","axisDomain","numberOfTicks","tickValue","axes","axisEndPoint","epsilon","abs","getLabels","_ref","name","radius","label","getPolygons","colorRange","data","onSeriesMouseOver","onSeriesMouseOut","scales","reduce","acc","_ref2","range","row","rowIndex","mappedData","_ref3","getValue","dataPoint","max","className","stroke","color","fill","polygons","getPolygonPoints","onValueMouseOver","onValueMouseOut","_ref4","_ref5","value","dataName","size","RadarChart","children","height","margin","onMouseLeave","onMouseEnter","width","renderAxesOverPolygons","polygonPoints","labelSeries","labels","dontCheckIfEmpty","xDomain","yDomain","concat","displayName","propTypes","string","colorType","arrayOf","object","isRequired","shape","number","func","bool","defaultProps","line","ticks","text","fontSize","textAnchor","strokeWidth","strokeOpacity","fillOpacity"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { scaleLinear } from 'd3-scale';\nimport { format } from 'd3-format';\n\nimport { AnimationPropType } from '../animation';\nimport XYPlot from '../plot/xy-plot';\nimport { DISCRETE_COLOR_RANGE } from '../theme';\nimport { MarginPropType } from '../utils/chart-utils';\nimport MarkSeries from '../plot/series/mark-series';\nimport PolygonSeries from '../plot/series/polygon-series';\nimport LabelSeries from '../plot/series/label-series';\nimport DecorativeAxis from '../plot/axis/decorative-axis';\n\nvar predefinedClassName = 'rv-radar-chart';\nvar DEFAULT_FORMAT = format('.2r');\n/**\n * Generate axes for each of the domains\n * @param {Object} props\n - props.animation {Boolean}\n - props.domains {Array} array of object specifying the way each axis is to be plotted\n - props.style {object} style object for the whole chart\n - props.tickFormat {Function} formatting function for axes\n - props.startingAngle {number} the initial angle offset\n * @return {Array} the plotted axis components\n */\nfunction getAxes(props) {\n  var animation = props.animation,\n      domains = props.domains,\n      startingAngle = props.startingAngle,\n      style = props.style,\n      tickFormat = props.tickFormat,\n      hideInnerMostValues = props.hideInnerMostValues;\n\n  return domains.map(function (domain, index) {\n    var angle = index / domains.length * Math.PI * 2 + startingAngle;\n    var sortedDomain = domain.domain;\n\n    var domainTickFormat = function domainTickFormat(t) {\n      if (hideInnerMostValues && t === sortedDomain[0]) {\n        return '';\n      }\n      return domain.tickFormat ? domain.tickFormat(t) : tickFormat(t);\n    };\n\n    return React.createElement(DecorativeAxis, {\n      animation: animation,\n      key: index + '-axis',\n      axisStart: { x: 0, y: 0 },\n      axisEnd: {\n        x: getCoordinate(Math.cos(angle)),\n        y: getCoordinate(Math.sin(angle))\n      },\n      axisDomain: sortedDomain,\n      numberOfTicks: 5,\n      tickValue: domainTickFormat,\n      style: style.axes\n    });\n  });\n}\n\n/**\n * Generate x or y coordinate for axisEnd\n * @param {Number} axisEndPoint\n - epsilon is an arbitrarily chosen small number to approximate axisEndPoints\n - to true values resulting from trigonometry functions (sin, cos) on angles\n * @return {Number} the x or y coordinate accounting for exact trig values\n */\nfunction getCoordinate(axisEndPoint) {\n  var epsilon = 10e-13;\n  if (Math.abs(axisEndPoint) <= epsilon) {\n    axisEndPoint = 0;\n  } else if (axisEndPoint > 0) {\n    if (Math.abs(axisEndPoint - 0.5) <= epsilon) {\n      axisEndPoint = 0.5;\n    }\n  } else if (axisEndPoint < 0) {\n    if (Math.abs(axisEndPoint + 0.5) <= epsilon) {\n      axisEndPoint = -0.5;\n    }\n  }\n  return axisEndPoint;\n}\n\n/**\n * Generate labels for the ends of the axes\n * @param {Object} props\n - props.domains {Array} array of object specifying the way each axis is to be plotted\n  - props.startingAngle {number} the initial angle offset\n - props.style {object} style object for just the labels\n * @return {Array} the prepped data for the labelSeries\n */\nfunction getLabels(props) {\n  var domains = props.domains,\n      startingAngle = props.startingAngle,\n      style = props.style;\n\n  return domains.map(function (_ref, index) {\n    var name = _ref.name;\n\n    var angle = index / domains.length * Math.PI * 2 + startingAngle;\n    var radius = 1.2;\n    return {\n      x: radius * Math.cos(angle),\n      y: radius * Math.sin(angle),\n      label: name,\n      style: style\n    };\n  });\n}\n\n/**\n * Generate the actual polygons to be plotted\n * @param {Object} props\n - props.animation {Boolean}\n - props.data {Array} array of object specifying what values are to be plotted\n - props.domains {Array} array of object specifying the way each axis is to be plotted\n - props.startingAngle {number} the initial angle offset\n - props.style {object} style object for the whole chart\n * @return {Array} the plotted axis components\n */\nfunction getPolygons(props) {\n  var animation = props.animation,\n      colorRange = props.colorRange,\n      domains = props.domains,\n      data = props.data,\n      style = props.style,\n      startingAngle = props.startingAngle,\n      onSeriesMouseOver = props.onSeriesMouseOver,\n      onSeriesMouseOut = props.onSeriesMouseOut;\n\n  var scales = domains.reduce(function (acc, _ref2) {\n    var domain = _ref2.domain,\n        name = _ref2.name;\n\n    acc[name] = scaleLinear().domain(domain).range([0, 1]);\n    return acc;\n  }, {});\n\n  return data.map(function (row, rowIndex) {\n    var mappedData = domains.map(function (_ref3, index) {\n      var name = _ref3.name,\n          getValue = _ref3.getValue;\n\n      var dataPoint = getValue ? getValue(row) : row[name];\n      // error handling if point doesn't exist\n      var angle = index / domains.length * Math.PI * 2 + startingAngle;\n      // dont let the radius become negative\n      var radius = Math.max(scales[name](dataPoint), 0);\n      return { x: radius * Math.cos(angle), y: radius * Math.sin(angle), name: row.name };\n    });\n\n    return React.createElement(PolygonSeries, {\n      animation: animation,\n      className: predefinedClassName + '-polygon',\n      key: rowIndex + '-polygon',\n      data: mappedData,\n      style: _extends({\n        stroke: row.color || row.stroke || colorRange[rowIndex % colorRange.length],\n        fill: row.color || row.fill || colorRange[rowIndex % colorRange.length]\n      }, style.polygons),\n      onSeriesMouseOver: onSeriesMouseOver,\n      onSeriesMouseOut: onSeriesMouseOut\n    });\n  });\n}\n\n/**\n * Generate circles at the polygon points for Hover functionality\n * @param {Object} props\n - props.animation {Boolean}\n - props.data {Array} array of object specifying what values are to be plotted\n - props.domains {Array} array of object specifying the way each axis is to be plotted\n - props.startingAngle {number} the initial angle offset\n - props.style {object} style object for the whole chart\n - props.onValueMouseOver {function} function to call on mouse over a polygon point\n - props.onValueMouseOver {function} function to call when mouse leaves a polygon point\n * @return {Array} the plotted axis components\n */\nfunction getPolygonPoints(props) {\n  var animation = props.animation,\n      domains = props.domains,\n      data = props.data,\n      startingAngle = props.startingAngle,\n      style = props.style,\n      onValueMouseOver = props.onValueMouseOver,\n      onValueMouseOut = props.onValueMouseOut;\n\n  if (!onValueMouseOver) {\n    return;\n  }\n  var scales = domains.reduce(function (acc, _ref4) {\n    var domain = _ref4.domain,\n        name = _ref4.name;\n\n    acc[name] = scaleLinear().domain(domain).range([0, 1]);\n    return acc;\n  }, {});\n  return data.map(function (row, rowIndex) {\n    var mappedData = domains.map(function (_ref5, index) {\n      var name = _ref5.name,\n          getValue = _ref5.getValue;\n\n      var dataPoint = getValue ? getValue(row) : row[name];\n      // error handling if point doesn't exist\n      var angle = index / domains.length * Math.PI * 2 + startingAngle;\n      // dont let the radius become negative\n      var radius = Math.max(scales[name](dataPoint), 0);\n      return {\n        x: radius * Math.cos(angle),\n        y: radius * Math.sin(angle),\n        domain: name,\n        value: dataPoint,\n        dataName: row.name\n      };\n    });\n\n    return React.createElement(MarkSeries, {\n      animation: animation,\n      className: predefinedClassName + '-polygonPoint',\n      key: rowIndex + '-polygonPoint',\n      data: mappedData,\n      size: 10,\n      style: _extends({}, style.polygons, {\n        fill: 'transparent',\n        stroke: 'transparent'\n      }),\n      onValueMouseOver: onValueMouseOver,\n      onValueMouseOut: onValueMouseOut\n    });\n  });\n}\n\nfunction RadarChart(props) {\n  var animation = props.animation,\n      className = props.className,\n      children = props.children,\n      colorRange = props.colorRange,\n      data = props.data,\n      domains = props.domains,\n      height = props.height,\n      hideInnerMostValues = props.hideInnerMostValues,\n      margin = props.margin,\n      onMouseLeave = props.onMouseLeave,\n      onMouseEnter = props.onMouseEnter,\n      startingAngle = props.startingAngle,\n      style = props.style,\n      tickFormat = props.tickFormat,\n      width = props.width,\n      renderAxesOverPolygons = props.renderAxesOverPolygons,\n      onValueMouseOver = props.onValueMouseOver,\n      onValueMouseOut = props.onValueMouseOut,\n      onSeriesMouseOver = props.onSeriesMouseOver,\n      onSeriesMouseOut = props.onSeriesMouseOut;\n\n\n  var axes = getAxes({\n    domains: domains,\n    animation: animation,\n    hideInnerMostValues: hideInnerMostValues,\n    startingAngle: startingAngle,\n    style: style,\n    tickFormat: tickFormat\n  });\n\n  var polygons = getPolygons({\n    animation: animation,\n    colorRange: colorRange,\n    domains: domains,\n    data: data,\n    startingAngle: startingAngle,\n    style: style,\n    onSeriesMouseOver: onSeriesMouseOver,\n    onSeriesMouseOut: onSeriesMouseOut\n  });\n\n  var polygonPoints = getPolygonPoints({\n    animation: animation,\n    colorRange: colorRange,\n    domains: domains,\n    data: data,\n    startingAngle: startingAngle,\n    style: style,\n    onValueMouseOver: onValueMouseOver,\n    onValueMouseOut: onValueMouseOut\n  });\n\n  var labelSeries = React.createElement(LabelSeries, {\n    animation: animation,\n    key: className,\n    className: predefinedClassName + '-label',\n    data: getLabels({ domains: domains, style: style.labels, startingAngle: startingAngle }) });\n  return React.createElement(\n    XYPlot,\n    {\n      height: height,\n      width: width,\n      margin: margin,\n      dontCheckIfEmpty: true,\n      className: className + ' ' + predefinedClassName,\n      onMouseLeave: onMouseLeave,\n      onMouseEnter: onMouseEnter,\n      xDomain: [-1, 1],\n      yDomain: [-1, 1] },\n    children,\n    !renderAxesOverPolygons && axes.concat(polygons).concat(labelSeries).concat(polygonPoints),\n    renderAxesOverPolygons && polygons.concat(labelSeries).concat(axes).concat(polygonPoints)\n  );\n}\n\nRadarChart.displayName = 'RadarChart';\nRadarChart.propTypes = {\n  animation: AnimationPropType,\n  className: PropTypes.string,\n  colorType: PropTypes.string,\n  colorRange: PropTypes.arrayOf(PropTypes.string),\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  domains: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    domain: PropTypes.arrayOf(PropTypes.number).isRequired,\n    tickFormat: PropTypes.func\n  })).isRequired,\n  height: PropTypes.number.isRequired,\n  hideInnerMostValues: PropTypes.bool,\n  margin: MarginPropType,\n  startingAngle: PropTypes.number,\n  style: PropTypes.shape({\n    axes: PropTypes.object,\n    labels: PropTypes.object,\n    polygons: PropTypes.object\n  }),\n  tickFormat: PropTypes.func,\n  width: PropTypes.number.isRequired,\n  renderAxesOverPolygons: PropTypes.bool,\n  onValueMouseOver: PropTypes.func,\n  onValueMouseOut: PropTypes.func,\n  onSeriesMouseOver: PropTypes.func,\n  onSeriesMouseOut: PropTypes.func\n};\nRadarChart.defaultProps = {\n  className: '',\n  colorType: 'category',\n  colorRange: DISCRETE_COLOR_RANGE,\n  hideInnerMostValues: true,\n  startingAngle: Math.PI / 2,\n  style: {\n    axes: {\n      line: {},\n      ticks: {},\n      text: {}\n    },\n    labels: {\n      fontSize: 10,\n      textAnchor: 'middle'\n    },\n    polygons: {\n      strokeWidth: 0.5,\n      strokeOpacity: 1,\n      fillOpacity: 0.1\n    }\n  },\n  tickFormat: DEFAULT_FORMAT,\n  renderAxesOverPolygons: false\n};\n\nexport default RadarChart;"]},"metadata":{},"sourceType":"module"}