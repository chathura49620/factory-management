{"ast":null,"code":"import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\r\n * @name isThursday\r\n * @category Weekday Helpers\r\n * @summary Is the given date Thursday?\r\n *\r\n * @description\r\n * Is the given date Thursday?\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the date to check\r\n * @returns {Boolean} the date is Thursday\r\n * @throws {TypeError} 1 argument required\r\n *\r\n * @example\r\n * // Is 25 September 2014 Thursday?\r\n * var result = isThursday(new Date(2014, 8, 25))\r\n * //=> true\r\n */\n\nexport default function isThursday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 4;\n}","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/node_modules/date-fns/esm/isThursday/index.js"],"names":["toDate","requiredArgs","isThursday","dirtyDate","arguments","getDay"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,UAAT,CAAoBC,SAApB,EAA+B;AAC5CF,EAAAA,YAAY,CAAC,CAAD,EAAIG,SAAJ,CAAZ;AACA,SAAOJ,MAAM,CAACG,SAAD,CAAN,CAAkBE,MAAlB,OAA+B,CAAtC;AACD","sourcesContent":["import toDate from \"../toDate/index.js\";\r\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\r\n/**\r\n * @name isThursday\r\n * @category Weekday Helpers\r\n * @summary Is the given date Thursday?\r\n *\r\n * @description\r\n * Is the given date Thursday?\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the date to check\r\n * @returns {Boolean} the date is Thursday\r\n * @throws {TypeError} 1 argument required\r\n *\r\n * @example\r\n * // Is 25 September 2014 Thursday?\r\n * var result = isThursday(new Date(2014, 8, 25))\r\n * //=> true\r\n */\r\n\r\nexport default function isThursday(dirtyDate) {\r\n  requiredArgs(1, arguments);\r\n  return toDate(dirtyDate).getDay() === 4;\r\n}"]},"metadata":{},"sourceType":"module"}