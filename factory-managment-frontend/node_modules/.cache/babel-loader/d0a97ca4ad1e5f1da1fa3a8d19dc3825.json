{"ast":null,"code":"var _jsxFileName = \"/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/ProductionManager/AddNewProductionRound.jsx\";\nimport React, { Component } from \"react\";\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport addorder from \"../../pages/assets/addorderpic.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddNewProductionRound extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      snackbaropen: false,\n      snackbarmsg: \"\",\n      categories: [],\n      productCodeError: \"\",\n      productCategoryError: \"\",\n      quantityError: \"\",\n      esDaysError: \"\",\n      esEmployeesError: \"\",\n      statusError: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/api/categories\").then(result => {\n      const categories = result.data;\n      this.setState({\n        categories: categories\n      });\n    }).catch(err => console.log(err.message));\n  }\n\n  handleSubmit(event, props) {\n    // console.log(event);\n    const isValid = this.validate(event);\n    event.preventDefault(); //alert(event.target.name.value);\n\n    if (isValid) {\n      fetch(\"http://localhost:5000/api/newProRound-details\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          username: \"thirnaya\"\n        },\n        body: JSON.stringify({\n          productId: event.target.proId.value,\n          productCategory: event.target.productCategory.value,\n          quantity: event.target.quntity.value,\n          esDays: event.target.estDays.value,\n          esEmployees: event.target.estEmp.value,\n          status: event.target.status.value\n        })\n      }).then(res => res.json()).then(result => {\n        console.log(this.state);\n        swal({\n          title: \"New Production Round Details Added Succesfully\",\n          icon: \"success\",\n          button: \"Done\"\n        });\n        setTimeout(function () {\n          window.location.reload();\n        }.bind(this), 1500);\n      }, error => {\n        this.setState({\n          snackbaropen: true,\n          snackbarmsg: \"Failed\"\n        });\n      });\n    }\n  }\n\n  validate() {\n    let validationError = \"\";\n\n    if (!this.state.validationError) {\n      validationError = \"This Field Can Not Be Blank\";\n    }\n\n    if (validationError) {\n      this.setState({\n        validationError: validationError\n      });\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading\",\n        children: \"Add New Production Round Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: addorder,\n          alt: \"leavepic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"proId\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: \"Product Id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  style: {\n                    border: \"1px solid #050139\"\n                  },\n                  type: \"text\",\n                  name: \"proId\",\n                  required: true,\n                  placeholder: \"Product Id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    background: \"#f8d7da\"\n                  },\n                  children: this.state.validationError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: \"Product Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                style: {\n                  border: \"1px solid #050139\"\n                },\n                as: \"select\",\n                required: true,\n                name: \"productCategory\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    background: \"#f8d7da\"\n                  },\n                  children: this.state.validationError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 19\n                }, this), this.state.categories.map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: i.categoryName\n                }, i._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"quntity\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                style: {\n                  border: \"1px solid #050139\"\n                },\n                type: \"text\",\n                name: \"quntity\",\n                required: true,\n                placeholder: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  background: \"#f8d7da\"\n                },\n                children: this.state.validationError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"estDays\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: \"Estimated Days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                style: {\n                  border: \"1px solid #050139\"\n                },\n                type: \"text\",\n                name: \"estDays\",\n                required: true,\n                placeholder: \"Estimated Days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  background: \"#f8d7da\"\n                },\n                children: this.state.validationError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"estEmp\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: \"Estimated Employees\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                style: {\n                  border: \"1px solid #050139\"\n                },\n                type: \"text\",\n                name: \"estEmp\",\n                required: true,\n                placeholder: \"Estimated Employees\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  background: \"#f8d7da\"\n                },\n                children: this.state.validationError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                style: {\n                  border: \"1px solid #050139\"\n                },\n                as: \"select\",\n                required: true,\n                name: \"status\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    background: \"#f8d7da\"\n                  },\n                  children: this.state.validationError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: true,\n                  children: \"Pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"my-1\",\n                style: {\n                  backgroundColor: \"#7121AD\",\n                  color: \"white\"\n                },\n                type: \"submit\",\n                children: \"Add Production Round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AddNewProductionRound;","map":{"version":3,"sources":["/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/ProductionManager/AddNewProductionRound.jsx"],"names":["React","Component","Modal","Button","Row","Col","Form","FormGroup","swal","axios","addorder","AddNewProductionRound","constructor","props","state","snackbaropen","snackbarmsg","categories","productCodeError","productCategoryError","quantityError","esDaysError","esEmployeesError","statusError","handleSubmit","bind","componentDidMount","get","then","result","data","setState","catch","err","console","log","message","event","isValid","validate","preventDefault","fetch","method","headers","Accept","username","body","JSON","stringify","productId","target","proId","value","productCategory","quantity","quntity","esDays","estDays","esEmployees","estEmp","status","res","json","title","icon","button","setTimeout","window","location","reload","error","validationError","render","fontWeight","border","background","map","i","categoryName","_id","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\r\nimport swal from \"sweetalert\";\r\nimport axios from \"axios\";\r\nimport \"./styles.css\";\r\nimport addorder from \"../../pages/assets/addorderpic.png\";\r\nclass AddNewProductionRound extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      snackbaropen: false,\r\n      snackbarmsg: \"\",\r\n      categories: [],\r\n      productCodeError: \"\",\r\n      productCategoryError: \"\",\r\n      quantityError: \"\",\r\n      esDaysError: \"\",\r\n      esEmployeesError: \"\",\r\n      statusError: \"\",\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/categories\")\r\n      .then((result) => {\r\n        const categories = result.data;\r\n\r\n        this.setState({ categories: categories });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  handleSubmit(event, props) {\r\n    // console.log(event);\r\n    const isValid = this.validate(event);\r\n    event.preventDefault();\r\n    //alert(event.target.name.value);\r\n\r\n    if (isValid) {\r\n      fetch(\"http://localhost:5000/api/newProRound-details\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          username: \"thirnaya\",\r\n        },\r\n        body: JSON.stringify({\r\n          productId: event.target.proId.value,\r\n          productCategory: event.target.productCategory.value,\r\n          quantity: event.target.quntity.value,\r\n          esDays: event.target.estDays.value,\r\n          esEmployees: event.target.estEmp.value,\r\n          status: event.target.status.value,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then(\r\n          (result) => {\r\n            console.log(this.state);\r\n            swal({\r\n              title: \"New Production Round Details Added Succesfully\",\r\n              icon: \"success\",\r\n              button: \"Done\",\r\n            });\r\n            setTimeout(\r\n              function () {\r\n                window.location.reload();\r\n              }.bind(this),\r\n              1500\r\n            );\r\n          },\r\n          (error) => {\r\n            this.setState({ snackbaropen: true, snackbarmsg: \"Failed\" });\r\n          }\r\n        );\r\n    }\r\n  }\r\n  validate() {\r\n    let validationError = \"\";\r\n\r\n    if (!this.state.validationError) {\r\n      validationError = \"This Field Can Not Be Blank\";\r\n    }\r\n\r\n    if (validationError) {\r\n      this.setState({ validationError: validationError });\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"heading\">Add New Production Round Details</h1>\r\n\r\n        <div className=\"center\">\r\n          <img src={addorder} alt=\"leavepic\" />\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n\r\n          <div className=\"col\">\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Form.Group>\r\n                <Form.Group controlId=\"proId\">\r\n                  <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                    Product Id\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    style={{ border: \"1px solid #050139\" }}\r\n                    type=\"text\"\r\n                    name=\"proId\"\r\n                    required\r\n                    placeholder=\"Product Id\"\r\n                  />\r\n                  <div style={{ background: \"#f8d7da\" }}>\r\n                    {this.state.validationError}\r\n                  </div>\r\n                </Form.Group>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Product Category\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  as=\"select\"\r\n                  required\r\n                  name=\"productCategory\"\r\n                >\r\n                  <div style={{ background: \"#f8d7da\" }}>\r\n                    {this.state.validationError}\r\n                  </div>\r\n                  {this.state.categories.map((i) => (\r\n                    <option key={i._id}>{i.categoryName}</option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"quntity\">\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Quantity</Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  type=\"text\"\r\n                  name=\"quntity\"\r\n                  required\r\n                  placeholder=\"Quantity\"\r\n                />\r\n                <div style={{ background: \"#f8d7da\" }}>\r\n                  {this.state.validationError}\r\n                </div>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"estDays\">\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Estimated Days\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  type=\"text\"\r\n                  name=\"estDays\"\r\n                  required\r\n                  placeholder=\"Estimated Days\"\r\n                />\r\n                <div style={{ background: \"#f8d7da\" }}>\r\n                  {this.state.validationError}\r\n                </div>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"estEmp\">\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Estimated Employees\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  type=\"text\"\r\n                  name=\"estEmp\"\r\n                  required\r\n                  placeholder=\"Estimated Employees\"\r\n                />\r\n                <div style={{ background: \"#f8d7da\" }}>\r\n                  {this.state.validationError}\r\n                </div>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Status</Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  as=\"select\"\r\n                  required\r\n                  name=\"status\"\r\n                >\r\n                  <div style={{ background: \"#f8d7da\" }}>\r\n                    {this.state.validationError}\r\n                  </div>\r\n                  <option selected>Pending</option>\r\n                  <option>Completed</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Button\r\n                  className=\"my-1\"\r\n                  style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                  type=\"submit\"\r\n                >\r\n                  Add Production Round\r\n                </Button>\r\n              </Form.Group>\r\n            </Form>\r\n          </div>\r\n\r\n          <div className=\"col-1\"></div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNewProductionRound;\r\n"]},"metadata":{},"sourceType":"module"}