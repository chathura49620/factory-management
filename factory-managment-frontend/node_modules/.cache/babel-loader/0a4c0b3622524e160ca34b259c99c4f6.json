{"ast":null,"code":"import noop from \"../noop.js\";\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function () {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/node_modules/d3-geo/src/path/bounds.js"],"names":["noop","x0","Infinity","y0","x1","y1","boundsStream","point","boundsPoint","lineStart","lineEnd","polygonStart","polygonEnd","result","bounds","x","y"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,YAAjB;AAEA,IAAIC,EAAE,GAAGC,QAAT;AAAA,IACIC,EAAE,GAAGF,EADT;AAAA,IAEIG,EAAE,GAAG,CAACH,EAFV;AAAA,IAGII,EAAE,GAAGD,EAHT;AAKA,IAAIE,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAEC,WADU;AAEjBC,EAAAA,SAAS,EAAET,IAFM;AAGjBU,EAAAA,OAAO,EAAEV,IAHQ;AAIjBW,EAAAA,YAAY,EAAEX,IAJG;AAKjBY,EAAAA,UAAU,EAAEZ,IALK;AAMjBa,EAAAA,MAAM,EAAE,YAAW;AACjB,QAAIC,MAAM,GAAG,CAAC,CAACb,EAAD,EAAKE,EAAL,CAAD,EAAW,CAACC,EAAD,EAAKC,EAAL,CAAX,CAAb;AACAD,IAAAA,EAAE,GAAGC,EAAE,GAAG,EAAEF,EAAE,GAAGF,EAAE,GAAGC,QAAZ,CAAV;AACA,WAAOY,MAAP;AACD;AAVgB,CAAnB;;AAaA,SAASN,WAAT,CAAqBO,CAArB,EAAwBC,CAAxB,EAA2B;AACzB,MAAID,CAAC,GAAGd,EAAR,EAAYA,EAAE,GAAGc,CAAL;AACZ,MAAIA,CAAC,GAAGX,EAAR,EAAYA,EAAE,GAAGW,CAAL;AACZ,MAAIC,CAAC,GAAGb,EAAR,EAAYA,EAAE,GAAGa,CAAL;AACZ,MAAIA,CAAC,GAAGX,EAAR,EAAYA,EAAE,GAAGW,CAAL;AACb;;AAED,eAAeV,YAAf","sourcesContent":["import noop from \"../noop.js\";\r\n\r\nvar x0 = Infinity,\r\n    y0 = x0,\r\n    x1 = -x0,\r\n    y1 = x1;\r\n\r\nvar boundsStream = {\r\n  point: boundsPoint,\r\n  lineStart: noop,\r\n  lineEnd: noop,\r\n  polygonStart: noop,\r\n  polygonEnd: noop,\r\n  result: function() {\r\n    var bounds = [[x0, y0], [x1, y1]];\r\n    x1 = y1 = -(y0 = x0 = Infinity);\r\n    return bounds;\r\n  }\r\n};\r\n\r\nfunction boundsPoint(x, y) {\r\n  if (x < x0) x0 = x;\r\n  if (x > x1) x1 = x;\r\n  if (y < y0) y0 = y;\r\n  if (y > y1) y1 = y;\r\n}\r\n\r\nexport default boundsStream;\r\n"]},"metadata":{},"sourceType":"module"}