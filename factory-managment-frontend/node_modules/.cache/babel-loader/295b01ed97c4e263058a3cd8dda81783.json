{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}; // Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ORIENTATION } from '../../utils/axis-utils';\nvar LEFT = ORIENTATION.LEFT,\n    RIGHT = ORIENTATION.RIGHT,\n    TOP = ORIENTATION.TOP,\n    BOTTOM = ORIENTATION.BOTTOM;\nvar propTypes = {\n  height: PropTypes.number.isRequired,\n  style: PropTypes.object,\n  orientation: PropTypes.oneOf([LEFT, RIGHT, TOP, BOTTOM]).isRequired,\n  width: PropTypes.number.isRequired\n};\nvar defaultProps = {\n  style: {}\n};\n\nfunction AxisLine(_ref) {\n  var orientation = _ref.orientation,\n      width = _ref.width,\n      height = _ref.height,\n      style = _ref.style;\n  var lineProps = void 0;\n\n  if (orientation === LEFT) {\n    lineProps = {\n      x1: width,\n      x2: width,\n      y1: 0,\n      y2: height\n    };\n  } else if (orientation === RIGHT) {\n    lineProps = {\n      x1: 0,\n      x2: 0,\n      y1: 0,\n      y2: height\n    };\n  } else if (orientation === TOP) {\n    lineProps = {\n      x1: 0,\n      x2: width,\n      y1: height,\n      y2: height\n    };\n  } else {\n    lineProps = {\n      x1: 0,\n      x2: width,\n      y1: 0,\n      y2: 0\n    };\n  }\n\n  return React.createElement('line', _extends({}, lineProps, {\n    className: 'rv-xy-plot__axis__line',\n    style: style\n  }));\n}\n\nAxisLine.defaultProps = defaultProps;\nAxisLine.displayName = 'AxisLine';\nAxisLine.propTypes = propTypes;\nexport default AxisLine;","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/node_modules/react-vis/es/plot/axis/axis-line.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","React","PropTypes","ORIENTATION","LEFT","RIGHT","TOP","BOTTOM","propTypes","height","number","isRequired","style","object","orientation","oneOf","width","defaultProps","AxisLine","_ref","lineProps","x1","x2","y1","y2","createElement","className","displayName"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\r\n// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\nimport React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ORIENTATION } from '../../utils/axis-utils';\r\n\r\nvar LEFT = ORIENTATION.LEFT,\r\n    RIGHT = ORIENTATION.RIGHT,\r\n    TOP = ORIENTATION.TOP,\r\n    BOTTOM = ORIENTATION.BOTTOM;\r\n\r\n\r\nvar propTypes = {\r\n  height: PropTypes.number.isRequired,\r\n  style: PropTypes.object,\r\n  orientation: PropTypes.oneOf([LEFT, RIGHT, TOP, BOTTOM]).isRequired,\r\n  width: PropTypes.number.isRequired\r\n};\r\n\r\nvar defaultProps = {\r\n  style: {}\r\n};\r\n\r\nfunction AxisLine(_ref) {\r\n  var orientation = _ref.orientation,\r\n      width = _ref.width,\r\n      height = _ref.height,\r\n      style = _ref.style;\r\n\r\n  var lineProps = void 0;\r\n  if (orientation === LEFT) {\r\n    lineProps = {\r\n      x1: width,\r\n      x2: width,\r\n      y1: 0,\r\n      y2: height\r\n    };\r\n  } else if (orientation === RIGHT) {\r\n    lineProps = {\r\n      x1: 0,\r\n      x2: 0,\r\n      y1: 0,\r\n      y2: height\r\n    };\r\n  } else if (orientation === TOP) {\r\n    lineProps = {\r\n      x1: 0,\r\n      x2: width,\r\n      y1: height,\r\n      y2: height\r\n    };\r\n  } else {\r\n    lineProps = {\r\n      x1: 0,\r\n      x2: width,\r\n      y1: 0,\r\n      y2: 0\r\n    };\r\n  }\r\n  return React.createElement('line', _extends({}, lineProps, { className: 'rv-xy-plot__axis__line', style: style }));\r\n}\r\n\r\nAxisLine.defaultProps = defaultProps;\r\nAxisLine.displayName = 'AxisLine';\r\nAxisLine.propTypes = propTypes;\r\n\r\nexport default AxisLine;"]},"metadata":{},"sourceType":"module"}