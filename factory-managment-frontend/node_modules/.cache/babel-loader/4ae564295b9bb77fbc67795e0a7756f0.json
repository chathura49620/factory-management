{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thero\\\\OneDrive\\\\Documents\\\\factory-management\\\\factory-management\\\\factory-managment-frontend\\\\src\\\\components\\\\storeManager\\\\forms\\\\edititemrequestform.jsx\";\nimport React, { Component } from \"react\";\nimport FormSuper from \"../reusables/formsuper\";\nimport Joi, { join } from \"joi-browser\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditItemRequestForm extends FormSuper {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        _id: \"\",\n        Code: \"\",\n        Type: \"\",\n        Category: \"\",\n        Quantity: \"\",\n        RequestDate: \"\",\n        Status: \"\"\n      },\n      types: [{\n        _id: \"123\",\n        categoryName: \"Product\"\n      }, {\n        _id: \"143\",\n        categoryName: \"Material\"\n      }],\n      iCodes: [],\n      genres: [\"All\", \"Product\", \"Material\"],\n      searchQuery: \"\",\n      errors: {},\n      selectedGenre: \"All\",\n      materialCodeObjects: [],\n      categoryObjects: []\n    };\n    this.schema = {\n      _id: Joi.string(),\n      Code: Joi.string().required(),\n      Type: Joi.string().required(),\n      Category: Joi.string().required(),\n      Quantity: Joi.number().required(),\n      RequestDate: Joi.date().required(),\n      Status: Joi.string()\n    };\n  }\n\n  componentDidMount() {\n    const ob = {\n      _id: this.props.requestOb._id,\n      Code: this.props.requestOb.reqCode,\n      Type: this.props.requestOb.reqType,\n      Category: this.props.requestOb.reqCategory,\n      Quantity: this.props.requestOb.reqQuantity,\n      RequestDate: this.props.requestOb.reqDate,\n      Status: this.props.requestOb.reqStatus\n    };\n    this.setState({\n      data: ob\n    }); //take the category set from db\n    //take the Material codes from db\n\n    axios.get(\"http://localhost:5000/category/\").then(result => {\n      const categoryObjs = result.data;\n      console.log(categoryObjs); //this.setState({categoryObjects: categoryObjs});\n\n      this.setState({\n        categoryObjects: categoryObjs\n      });\n    }); //take the Product codes from db\n    //and put them into single array name iCodes after put them into codes table after set search and fiter them and put again\n  }\n\n  doSubmit() {\n    const {\n      data\n    } = this.state;\n    console.log(data);\n    const jsonOb = {\n      _id: data._id,\n      reqCode: data.Code,\n      reqType: data.Type,\n      reqCategory: data.Category,\n      reqQuantity: data.Quantity,\n      reqDate: data.RequestDate,\n      reqStatus: data.Status\n    }; //add in database\n\n    axios.post(\"http://localhost:5000/requests/update/\" + data._id, jsonOb).then(result => console.log(result.data));\n    swal({\n      text: \"Request added successfully.\",\n      icon: \"success\",\n      timer: \"1500\"\n    });\n    this.props.onSetAndClose(jsonOb);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [this.renderInput(\"Code\", \"Item Code\"), this.renderSelect(\"Type\", \"Item Type\", this.state.types), this.renderSelect(\"Category\", \"Category\", this.state.categoryObjects), this.renderInput(\"Quantity\", \"Item Quantity\"), this.renderInput(\"RequestDate\", \"Request date\", \"date\"), this.renderButton(\"update request\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default EditItemRequestForm;","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/src/components/storeManager/forms/edititemrequestform.jsx"],"names":["React","Component","FormSuper","Joi","join","axios","swal","Link","EditItemRequestForm","state","data","_id","Code","Type","Category","Quantity","RequestDate","Status","types","categoryName","iCodes","genres","searchQuery","errors","selectedGenre","materialCodeObjects","categoryObjects","schema","string","required","number","date","componentDidMount","ob","props","requestOb","reqCode","reqType","reqCategory","reqQuantity","reqDate","reqStatus","setState","get","then","result","categoryObjs","console","log","doSubmit","jsonOb","post","text","icon","timer","onSetAndClose","render","handleSubmit","renderInput","renderSelect","renderButton"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport FormSuper from \"../reusables/formsuper\";\r\nimport Joi, { join } from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass EditItemRequestForm extends FormSuper {\r\n  state = {\r\n    data: {\r\n      _id: \"\",\r\n      Code: \"\",\r\n      Type: \"\",\r\n      Category: \"\",\r\n      Quantity: \"\",\r\n      RequestDate: \"\",\r\n      Status: \"\",\r\n    },\r\n\r\n    types: [\r\n      { _id: \"123\", categoryName: \"Product\" },\r\n      { _id: \"143\", categoryName: \"Material\" },\r\n    ],\r\n    iCodes: [],\r\n    genres: [\"All\", \"Product\", \"Material\"],\r\n    searchQuery: \"\",\r\n    errors: {},\r\n    selectedGenre: \"All\",\r\n    materialCodeObjects: [],\r\n    categoryObjects: [],\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    Code: Joi.string().required(),\r\n    Type: Joi.string().required(),\r\n    Category: Joi.string().required(),\r\n    Quantity: Joi.number().required(),\r\n    RequestDate: Joi.date().required(),\r\n    Status: Joi.string(),\r\n  };\r\n\r\n  componentDidMount() {\r\n    const ob = {\r\n      _id: this.props.requestOb._id,\r\n      Code: this.props.requestOb.reqCode,\r\n      Type: this.props.requestOb.reqType,\r\n      Category: this.props.requestOb.reqCategory,\r\n      Quantity: this.props.requestOb.reqQuantity,\r\n      RequestDate: this.props.requestOb.reqDate,\r\n      Status: this.props.requestOb.reqStatus,\r\n    };\r\n\r\n    this.setState({ data: ob });\r\n    //take the category set from db\r\n    //take the Material codes from db\r\n    axios.get(\"http://localhost:5000/category/\").then((result) => {\r\n      const categoryObjs = result.data;\r\n      console.log(categoryObjs);\r\n      //this.setState({categoryObjects: categoryObjs});\r\n      this.setState({\r\n        categoryObjects: categoryObjs,\r\n      });\r\n    });\r\n\r\n    //take the Product codes from db\r\n    //and put them into single array name iCodes after put them into codes table after set search and fiter them and put again\r\n  }\r\n\r\n  doSubmit() {\r\n    const { data } = this.state;\r\n    console.log(data);\r\n\r\n    const jsonOb = {\r\n      _id: data._id,\r\n      reqCode: data.Code,\r\n      reqType: data.Type,\r\n      reqCategory: data.Category,\r\n      reqQuantity: data.Quantity,\r\n      reqDate: data.RequestDate,\r\n      reqStatus: data.Status,\r\n    };\r\n\r\n    //add in database\r\n    axios\r\n      .post(\"http://localhost:5000/requests/update/\" + data._id, jsonOb)\r\n      .then((result) => console.log(result.data));\r\n\r\n    swal({\r\n      text: \"Request added successfully.\",\r\n      icon: \"success\",\r\n      timer: \"1500\",\r\n    });\r\n\r\n    this.props.onSetAndClose(jsonOb);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"Code\", \"Item Code\")}\r\n              {this.renderSelect(\"Type\", \"Item Type\", this.state.types)}\r\n              {this.renderSelect(\r\n                \"Category\",\r\n                \"Category\",\r\n                this.state.categoryObjects\r\n              )}\r\n              {this.renderInput(\"Quantity\", \"Item Quantity\")}\r\n              {this.renderInput(\"RequestDate\", \"Request date\", \"date\")}\r\n              {this.renderButton(\"update request\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditItemRequestForm;\r\n"]},"metadata":{},"sourceType":"module"}