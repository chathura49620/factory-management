{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { transformValueToString } from '../utils/data-utils';\nimport { getAttributeFunctor } from '../utils/scales-utils';\n/*\n * Hint provides two options for placement of hint:\n * a) around a data point in one of four quadrants (imagine the point bisected\n *    by two axes -vertical, horizontal- creating 4 quadrants around a data\n *    point).\n * b) **New** pin to an edge of chart/plot area and position along that edge\n *    using data point's other dimension value.\n *\n * To support these two options, deprecate one Hint props (orientation) with two\n * new Hint align prop object (horizontal, vertical) with following values:\n *\n *   horizontal: auto, left, right, leftEdge, rightEdge\n *   vertical: auto, bottom, top, bottomEdge, topEdge\n *\n * Thus, the following ALIGN constants are the values for horizontal\n * and vertical\n */\n\nvar ALIGN = {\n  AUTO: 'auto',\n  LEFT: 'left',\n  RIGHT: 'right',\n  LEFT_EDGE: 'leftEdge',\n  RIGHT_EDGE: 'rightEdge',\n  BOTTOM: 'bottom',\n  TOP: 'top',\n  BOTTOM_EDGE: 'bottomEdge',\n  TOP_EDGE: 'topEdge'\n};\n/**\n * For backwards support, retain the ORIENTATION prop constants\n */\n\nvar ORIENTATION = {\n  BOTTOM_LEFT: 'bottomleft',\n  BOTTOM_RIGHT: 'bottomright',\n  TOP_LEFT: 'topleft',\n  TOP_RIGHT: 'topright'\n};\n/**\n * Default format function for the value.\n * @param {Object} value Value.\n * @returns {Array} title-value pairs.\n */\n\nfunction defaultFormat(value) {\n  return Object.keys(value).map(function getProp(key) {\n    return {\n      title: key,\n      value: transformValueToString(value[key])\n    };\n  });\n}\n\nvar Hint = function (_PureComponent) {\n  _inherits(Hint, _PureComponent);\n\n  function Hint() {\n    _classCallCheck(this, Hint);\n\n    return _possibleConstructorReturn(this, (Hint.__proto__ || Object.getPrototypeOf(Hint)).apply(this, arguments));\n  }\n\n  _createClass(Hint, [{\n    key: '_getAlign',\n\n    /**\n     * Obtain align object with horizontal and vertical settings\n     * but convert any AUTO values to the non-auto ALIGN depending on the\n     * values of x and y.\n     * @param {number} x X value.\n     * @param {number} y Y value.\n     * @returns {Object} Align object w/ horizontal, vertical prop strings.\n     * @private\n     */\n    value: function _getAlign(x, y) {\n      var _props = this.props,\n          innerWidth = _props.innerWidth,\n          innerHeight = _props.innerHeight,\n          orientation = _props.orientation,\n          _props$align = _props.align,\n          horizontal = _props$align.horizontal,\n          vertical = _props$align.vertical;\n      var align = orientation ? this._mapOrientationToAlign(orientation) : {\n        horizontal: horizontal,\n        vertical: vertical\n      };\n\n      if (horizontal === ALIGN.AUTO) {\n        align.horizontal = x > innerWidth / 2 ? ALIGN.LEFT : ALIGN.RIGHT;\n      }\n\n      if (vertical === ALIGN.AUTO) {\n        align.vertical = y > innerHeight / 2 ? ALIGN.TOP : ALIGN.BOTTOM;\n      }\n\n      return align;\n    }\n    /**\n     * Get the class names from align values.\n     * @param {Object} align object with horizontal and vertical prop strings.\n     * @returns {string} Class names.\n     * @private\n     */\n\n  }, {\n    key: '_getAlignClassNames',\n    value: function _getAlignClassNames(align) {\n      var orientation = this.props.orientation;\n      var orientationClass = orientation ? 'rv-hint--orientation-' + orientation : '';\n      return orientationClass + ' rv-hint--horizontalAlign-' + align.horizontal + '\\n     rv-hint--verticalAlign-' + align.vertical;\n    }\n    /**\n     * Get a CSS mixin for a proper positioning of the element.\n     * @param {Object} align object with horizontal and vertical prop strings.\n     * @param {number} x X position.\n     * @param {number} y Y position.\n     * @returns {Object} Object, that may contain `left` or `right, `top` or\n     * `bottom` properties.\n     * @private\n     */\n\n  }, {\n    key: '_getAlignStyle',\n    value: function _getAlignStyle(align, x, y) {\n      return _extends({}, this._getXCSS(align.horizontal, x), this._getYCSS(align.vertical, y));\n    }\n    /**\n     * Get the bottom coordinate of the hint.\n     * When y undefined or null, edge case, pin bottom.\n     * @param {number} y Y.\n     * @returns {{bottom: *}} Mixin.\n     * @private\n     */\n\n  }, {\n    key: '_getCSSBottom',\n    value: function _getCSSBottom(y) {\n      if (y === undefined || y === null) {\n        return {\n          bottom: 0\n        };\n      }\n\n      var _props2 = this.props,\n          innerHeight = _props2.innerHeight,\n          marginBottom = _props2.marginBottom;\n      return {\n        bottom: marginBottom + innerHeight - y\n      };\n    }\n    /**\n     * Get the left coordinate of the hint.\n     * When x undefined or null, edge case, pin left.\n     * @param {number} x X.\n     * @returns {{left: *}} Mixin.\n     * @private\n     */\n\n  }, {\n    key: '_getCSSLeft',\n    value: function _getCSSLeft(x) {\n      if (x === undefined || x === null) {\n        return {\n          left: 0\n        };\n      }\n\n      var marginLeft = this.props.marginLeft;\n      return {\n        left: marginLeft + x\n      };\n    }\n    /**\n     * Get the right coordinate of the hint.\n     * When x undefined or null, edge case, pin right.\n     * @param {number} x X.\n     * @returns {{right: *}} Mixin.\n     * @private\n     */\n\n  }, {\n    key: '_getCSSRight',\n    value: function _getCSSRight(x) {\n      if (x === undefined || x === null) {\n        return {\n          right: 0\n        };\n      }\n\n      var _props3 = this.props,\n          innerWidth = _props3.innerWidth,\n          marginRight = _props3.marginRight;\n      return {\n        right: marginRight + innerWidth - x\n      };\n    }\n    /**\n     * Get the top coordinate of the hint.\n     * When y undefined or null, edge case, pin top.\n     * @param {number} y Y.\n     * @returns {{top: *}} Mixin.\n     * @private\n     */\n\n  }, {\n    key: '_getCSSTop',\n    value: function _getCSSTop(y) {\n      if (y === undefined || y === null) {\n        return {\n          top: 0\n        };\n      }\n\n      var marginTop = this.props.marginTop;\n      return {\n        top: marginTop + y\n      };\n    }\n    /**\n     * Get the position for the hint and the appropriate class name.\n     * @returns {{style: Object, positionClassName: string}} Style and className for the\n     * hint.\n     * @private\n     */\n\n  }, {\n    key: '_getPositionInfo',\n    value: function _getPositionInfo() {\n      var _props4 = this.props,\n          value = _props4.value,\n          getAlignStyle = _props4.getAlignStyle;\n      var x = getAttributeFunctor(this.props, 'x')(value);\n      var y = getAttributeFunctor(this.props, 'y')(value);\n\n      var align = this._getAlign(x, y);\n\n      return {\n        position: getAlignStyle ? getAlignStyle(align, x, y) : this._getAlignStyle(align, x, y),\n        positionClassName: this._getAlignClassNames(align)\n      };\n    }\n  }, {\n    key: '_getXCSS',\n    value: function _getXCSS(horizontal, x) {\n      // obtain xCSS\n      switch (horizontal) {\n        case ALIGN.LEFT_EDGE:\n          // this pins x to left edge\n          return this._getCSSLeft(null);\n\n        case ALIGN.RIGHT_EDGE:\n          // this pins x to left edge\n          return this._getCSSRight(null);\n\n        case ALIGN.LEFT:\n          // this places hint text to the left of center, so set its right edge\n          return this._getCSSRight(x);\n\n        case ALIGN.RIGHT:\n        default:\n          // this places hint text to the right of center, so set its left edge\n          // default case should not be possible but if it happens set to RIGHT\n          return this._getCSSLeft(x);\n      }\n    }\n  }, {\n    key: '_getYCSS',\n    value: function _getYCSS(verticalAlign, y) {\n      // obtain yCSS\n      switch (verticalAlign) {\n        case ALIGN.TOP_EDGE:\n          // this pins x to top edge\n          return this._getCSSTop(null);\n\n        case ALIGN.BOTTOM_EDGE:\n          // this pins x to bottom edge\n          return this._getCSSBottom(null);\n\n        case ALIGN.BOTTOM:\n          // this places hint text to the bottom of center, so set its top edge\n          return this._getCSSTop(y);\n\n        case ALIGN.TOP:\n        default:\n          // this places hint text to the top of center, so set its bottom edge\n          // default case should not be possible but if it happens set to BOTTOM\n          return this._getCSSBottom(y);\n      }\n    }\n  }, {\n    key: '_mapOrientationToAlign',\n    value: function _mapOrientationToAlign(orientation) {\n      // TODO: print warning that this feature is deprecated and support will be\n      // removed in next major release.\n      switch (orientation) {\n        case ORIENTATION.BOTTOM_LEFT:\n          return {\n            horizontal: ALIGN.LEFT,\n            vertical: ALIGN.BOTTOM\n          };\n\n        case ORIENTATION.BOTTOM_RIGHT:\n          return {\n            horizontal: ALIGN.RIGHT,\n            vertical: ALIGN.BOTTOM\n          };\n\n        case ORIENTATION.TOP_LEFT:\n          return {\n            horizontal: ALIGN.LEFT,\n            vertical: ALIGN.TOP\n          };\n\n        case ORIENTATION.TOP_RIGHT:\n          return {\n            horizontal: ALIGN.RIGHT,\n            vertical: ALIGN.TOP\n          };\n\n        default:\n          // fall back to horizontalAlign, verticalAlign that are either\n          // provided or defaulted to AUTO.  So, don't change things\n          break;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props5 = this.props,\n          value = _props5.value,\n          format = _props5.format,\n          children = _props5.children,\n          style = _props5.style,\n          className = _props5.className;\n\n      var _getPositionInfo2 = this._getPositionInfo(),\n          position = _getPositionInfo2.position,\n          positionClassName = _getPositionInfo2.positionClassName;\n\n      return React.createElement('div', {\n        className: 'rv-hint ' + positionClassName + ' ' + className,\n        style: _extends({}, style, position, {\n          position: 'absolute'\n        })\n      }, children ? children : React.createElement('div', {\n        className: 'rv-hint__content',\n        style: style.content\n      }, format(value).map(function (formattedProp, i) {\n        return React.createElement('div', {\n          key: 'rv-hint' + i,\n          style: style.row\n        }, React.createElement('span', {\n          className: 'rv-hint__title',\n          style: style.title\n        }, formattedProp.title), ': ', React.createElement('span', {\n          className: 'rv-hint__value',\n          style: style.value\n        }, formattedProp.value));\n      })));\n    }\n  }], [{\n    key: 'defaultProps',\n    get: function get() {\n      return {\n        format: defaultFormat,\n        align: {\n          horizontal: ALIGN.AUTO,\n          vertical: ALIGN.AUTO\n        },\n        style: {}\n      };\n    }\n  }, {\n    key: 'propTypes',\n    get: function get() {\n      return {\n        marginTop: PropTypes.number,\n        marginLeft: PropTypes.number,\n        innerWidth: PropTypes.number,\n        innerHeight: PropTypes.number,\n        scales: PropTypes.object,\n        value: PropTypes.object,\n        format: PropTypes.func,\n        style: PropTypes.object,\n        className: PropTypes.string,\n        align: PropTypes.shape({\n          horizontal: PropTypes.oneOf([ALIGN.AUTO, ALIGN.LEFT, ALIGN.RIGHT, ALIGN.LEFT_EDGE, ALIGN.RIGHT_EDGE]),\n          vertical: PropTypes.oneOf([ALIGN.AUTO, ALIGN.BOTTOM, ALIGN.TOP, ALIGN.BOTTOM_EDGE, ALIGN.TOP_EDGE])\n        }),\n        getAlignStyle: PropTypes.func,\n        orientation: PropTypes.oneOf([ORIENTATION.BOTTOM_LEFT, ORIENTATION.BOTTOM_RIGHT, ORIENTATION.TOP_LEFT, ORIENTATION.TOP_RIGHT])\n      };\n    }\n  }]);\n\n  return Hint;\n}(PureComponent);\n\nHint.displayName = 'Hint';\nHint.ORIENTATION = ORIENTATION;\nHint.ALIGN = ALIGN;\nexport default Hint;","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/node_modules/react-vis/es/plot/hint.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","React","PureComponent","PropTypes","transformValueToString","getAttributeFunctor","ALIGN","AUTO","LEFT","RIGHT","LEFT_EDGE","RIGHT_EDGE","BOTTOM","TOP","BOTTOM_EDGE","TOP_EDGE","ORIENTATION","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","defaultFormat","keys","map","getProp","title","Hint","_PureComponent","getPrototypeOf","apply","_getAlign","x","y","_props","innerWidth","innerHeight","orientation","_props$align","align","horizontal","vertical","_mapOrientationToAlign","_getAlignClassNames","orientationClass","_getAlignStyle","_getXCSS","_getYCSS","_getCSSBottom","undefined","bottom","_props2","marginBottom","_getCSSLeft","left","marginLeft","_getCSSRight","right","_props3","marginRight","_getCSSTop","top","marginTop","_getPositionInfo","_props4","getAlignStyle","position","positionClassName","verticalAlign","render","_props5","format","children","style","className","_getPositionInfo2","createElement","content","formattedProp","row","get","number","scales","object","func","string","shape","oneOf","displayName"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, { PureComponent } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { transformValueToString } from '../utils/data-utils';\n\nimport { getAttributeFunctor } from '../utils/scales-utils';\n\n/*\n * Hint provides two options for placement of hint:\n * a) around a data point in one of four quadrants (imagine the point bisected\n *    by two axes -vertical, horizontal- creating 4 quadrants around a data\n *    point).\n * b) **New** pin to an edge of chart/plot area and position along that edge\n *    using data point's other dimension value.\n *\n * To support these two options, deprecate one Hint props (orientation) with two\n * new Hint align prop object (horizontal, vertical) with following values:\n *\n *   horizontal: auto, left, right, leftEdge, rightEdge\n *   vertical: auto, bottom, top, bottomEdge, topEdge\n *\n * Thus, the following ALIGN constants are the values for horizontal\n * and vertical\n */\nvar ALIGN = {\n  AUTO: 'auto',\n  LEFT: 'left',\n  RIGHT: 'right',\n  LEFT_EDGE: 'leftEdge',\n  RIGHT_EDGE: 'rightEdge',\n  BOTTOM: 'bottom',\n  TOP: 'top',\n  BOTTOM_EDGE: 'bottomEdge',\n  TOP_EDGE: 'topEdge'\n};\n\n/**\n * For backwards support, retain the ORIENTATION prop constants\n */\nvar ORIENTATION = {\n  BOTTOM_LEFT: 'bottomleft',\n  BOTTOM_RIGHT: 'bottomright',\n  TOP_LEFT: 'topleft',\n  TOP_RIGHT: 'topright'\n};\n\n/**\n * Default format function for the value.\n * @param {Object} value Value.\n * @returns {Array} title-value pairs.\n */\nfunction defaultFormat(value) {\n  return Object.keys(value).map(function getProp(key) {\n    return { title: key, value: transformValueToString(value[key]) };\n  });\n}\n\nvar Hint = function (_PureComponent) {\n  _inherits(Hint, _PureComponent);\n\n  function Hint() {\n    _classCallCheck(this, Hint);\n\n    return _possibleConstructorReturn(this, (Hint.__proto__ || Object.getPrototypeOf(Hint)).apply(this, arguments));\n  }\n\n  _createClass(Hint, [{\n    key: '_getAlign',\n\n\n    /**\n     * Obtain align object with horizontal and vertical settings\n     * but convert any AUTO values to the non-auto ALIGN depending on the\n     * values of x and y.\n     * @param {number} x X value.\n     * @param {number} y Y value.\n     * @returns {Object} Align object w/ horizontal, vertical prop strings.\n     * @private\n     */\n    value: function _getAlign(x, y) {\n      var _props = this.props,\n          innerWidth = _props.innerWidth,\n          innerHeight = _props.innerHeight,\n          orientation = _props.orientation,\n          _props$align = _props.align,\n          horizontal = _props$align.horizontal,\n          vertical = _props$align.vertical;\n\n      var align = orientation ? this._mapOrientationToAlign(orientation) : { horizontal: horizontal, vertical: vertical };\n      if (horizontal === ALIGN.AUTO) {\n        align.horizontal = x > innerWidth / 2 ? ALIGN.LEFT : ALIGN.RIGHT;\n      }\n      if (vertical === ALIGN.AUTO) {\n        align.vertical = y > innerHeight / 2 ? ALIGN.TOP : ALIGN.BOTTOM;\n      }\n      return align;\n    }\n\n    /**\n     * Get the class names from align values.\n     * @param {Object} align object with horizontal and vertical prop strings.\n     * @returns {string} Class names.\n     * @private\n     */\n\n  }, {\n    key: '_getAlignClassNames',\n    value: function _getAlignClassNames(align) {\n      var orientation = this.props.orientation;\n\n      var orientationClass = orientation ? 'rv-hint--orientation-' + orientation : '';\n      return orientationClass + ' rv-hint--horizontalAlign-' + align.horizontal + '\\n     rv-hint--verticalAlign-' + align.vertical;\n    }\n\n    /**\n     * Get a CSS mixin for a proper positioning of the element.\n     * @param {Object} align object with horizontal and vertical prop strings.\n     * @param {number} x X position.\n     * @param {number} y Y position.\n     * @returns {Object} Object, that may contain `left` or `right, `top` or\n     * `bottom` properties.\n     * @private\n     */\n\n  }, {\n    key: '_getAlignStyle',\n    value: function _getAlignStyle(align, x, y) {\n      return _extends({}, this._getXCSS(align.horizontal, x), this._getYCSS(align.vertical, y));\n    }\n\n    /**\n     * Get the bottom coordinate of the hint.\n     * When y undefined or null, edge case, pin bottom.\n     * @param {number} y Y.\n     * @returns {{bottom: *}} Mixin.\n     * @private\n     */\n\n  }, {\n    key: '_getCSSBottom',\n    value: function _getCSSBottom(y) {\n      if (y === undefined || y === null) {\n        return {\n          bottom: 0\n        };\n      }\n\n      var _props2 = this.props,\n          innerHeight = _props2.innerHeight,\n          marginBottom = _props2.marginBottom;\n\n      return {\n        bottom: marginBottom + innerHeight - y\n      };\n    }\n\n    /**\n     * Get the left coordinate of the hint.\n     * When x undefined or null, edge case, pin left.\n     * @param {number} x X.\n     * @returns {{left: *}} Mixin.\n     * @private\n     */\n\n  }, {\n    key: '_getCSSLeft',\n    value: function _getCSSLeft(x) {\n      if (x === undefined || x === null) {\n        return {\n          left: 0\n        };\n      }\n\n      var marginLeft = this.props.marginLeft;\n\n      return {\n        left: marginLeft + x\n      };\n    }\n\n    /**\n     * Get the right coordinate of the hint.\n     * When x undefined or null, edge case, pin right.\n     * @param {number} x X.\n     * @returns {{right: *}} Mixin.\n     * @private\n     */\n\n  }, {\n    key: '_getCSSRight',\n    value: function _getCSSRight(x) {\n      if (x === undefined || x === null) {\n        return {\n          right: 0\n        };\n      }\n\n      var _props3 = this.props,\n          innerWidth = _props3.innerWidth,\n          marginRight = _props3.marginRight;\n\n      return {\n        right: marginRight + innerWidth - x\n      };\n    }\n\n    /**\n     * Get the top coordinate of the hint.\n     * When y undefined or null, edge case, pin top.\n     * @param {number} y Y.\n     * @returns {{top: *}} Mixin.\n     * @private\n     */\n\n  }, {\n    key: '_getCSSTop',\n    value: function _getCSSTop(y) {\n      if (y === undefined || y === null) {\n        return {\n          top: 0\n        };\n      }\n\n      var marginTop = this.props.marginTop;\n\n      return {\n        top: marginTop + y\n      };\n    }\n\n    /**\n     * Get the position for the hint and the appropriate class name.\n     * @returns {{style: Object, positionClassName: string}} Style and className for the\n     * hint.\n     * @private\n     */\n\n  }, {\n    key: '_getPositionInfo',\n    value: function _getPositionInfo() {\n      var _props4 = this.props,\n          value = _props4.value,\n          getAlignStyle = _props4.getAlignStyle;\n\n\n      var x = getAttributeFunctor(this.props, 'x')(value);\n      var y = getAttributeFunctor(this.props, 'y')(value);\n\n      var align = this._getAlign(x, y);\n\n      return {\n        position: getAlignStyle ? getAlignStyle(align, x, y) : this._getAlignStyle(align, x, y),\n        positionClassName: this._getAlignClassNames(align)\n      };\n    }\n  }, {\n    key: '_getXCSS',\n    value: function _getXCSS(horizontal, x) {\n      // obtain xCSS\n      switch (horizontal) {\n        case ALIGN.LEFT_EDGE:\n          // this pins x to left edge\n          return this._getCSSLeft(null);\n        case ALIGN.RIGHT_EDGE:\n          // this pins x to left edge\n          return this._getCSSRight(null);\n        case ALIGN.LEFT:\n          // this places hint text to the left of center, so set its right edge\n          return this._getCSSRight(x);\n        case ALIGN.RIGHT:\n        default:\n          // this places hint text to the right of center, so set its left edge\n          // default case should not be possible but if it happens set to RIGHT\n          return this._getCSSLeft(x);\n      }\n    }\n  }, {\n    key: '_getYCSS',\n    value: function _getYCSS(verticalAlign, y) {\n      // obtain yCSS\n      switch (verticalAlign) {\n        case ALIGN.TOP_EDGE:\n          // this pins x to top edge\n          return this._getCSSTop(null);\n        case ALIGN.BOTTOM_EDGE:\n          // this pins x to bottom edge\n          return this._getCSSBottom(null);\n        case ALIGN.BOTTOM:\n          // this places hint text to the bottom of center, so set its top edge\n          return this._getCSSTop(y);\n        case ALIGN.TOP:\n        default:\n          // this places hint text to the top of center, so set its bottom edge\n          // default case should not be possible but if it happens set to BOTTOM\n          return this._getCSSBottom(y);\n      }\n    }\n  }, {\n    key: '_mapOrientationToAlign',\n    value: function _mapOrientationToAlign(orientation) {\n      // TODO: print warning that this feature is deprecated and support will be\n      // removed in next major release.\n      switch (orientation) {\n        case ORIENTATION.BOTTOM_LEFT:\n          return {\n            horizontal: ALIGN.LEFT,\n            vertical: ALIGN.BOTTOM\n          };\n        case ORIENTATION.BOTTOM_RIGHT:\n          return {\n            horizontal: ALIGN.RIGHT,\n            vertical: ALIGN.BOTTOM\n          };\n        case ORIENTATION.TOP_LEFT:\n          return {\n            horizontal: ALIGN.LEFT,\n            vertical: ALIGN.TOP\n          };\n        case ORIENTATION.TOP_RIGHT:\n          return {\n            horizontal: ALIGN.RIGHT,\n            vertical: ALIGN.TOP\n          };\n        default:\n          // fall back to horizontalAlign, verticalAlign that are either\n          // provided or defaulted to AUTO.  So, don't change things\n          break;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props5 = this.props,\n          value = _props5.value,\n          format = _props5.format,\n          children = _props5.children,\n          style = _props5.style,\n          className = _props5.className;\n\n      var _getPositionInfo2 = this._getPositionInfo(),\n          position = _getPositionInfo2.position,\n          positionClassName = _getPositionInfo2.positionClassName;\n\n      return React.createElement(\n        'div',\n        {\n          className: 'rv-hint ' + positionClassName + ' ' + className,\n          style: _extends({}, style, position, {\n            position: 'absolute'\n          })\n        },\n        children ? children : React.createElement(\n          'div',\n          { className: 'rv-hint__content', style: style.content },\n          format(value).map(function (formattedProp, i) {\n            return React.createElement(\n              'div',\n              { key: 'rv-hint' + i, style: style.row },\n              React.createElement(\n                'span',\n                { className: 'rv-hint__title', style: style.title },\n                formattedProp.title\n              ),\n              ': ',\n              React.createElement(\n                'span',\n                { className: 'rv-hint__value', style: style.value },\n                formattedProp.value\n              )\n            );\n          })\n        )\n      );\n    }\n  }], [{\n    key: 'defaultProps',\n    get: function get() {\n      return {\n        format: defaultFormat,\n        align: {\n          horizontal: ALIGN.AUTO,\n          vertical: ALIGN.AUTO\n        },\n        style: {}\n      };\n    }\n  }, {\n    key: 'propTypes',\n    get: function get() {\n      return {\n        marginTop: PropTypes.number,\n        marginLeft: PropTypes.number,\n        innerWidth: PropTypes.number,\n        innerHeight: PropTypes.number,\n        scales: PropTypes.object,\n        value: PropTypes.object,\n        format: PropTypes.func,\n        style: PropTypes.object,\n        className: PropTypes.string,\n        align: PropTypes.shape({\n          horizontal: PropTypes.oneOf([ALIGN.AUTO, ALIGN.LEFT, ALIGN.RIGHT, ALIGN.LEFT_EDGE, ALIGN.RIGHT_EDGE]),\n          vertical: PropTypes.oneOf([ALIGN.AUTO, ALIGN.BOTTOM, ALIGN.TOP, ALIGN.BOTTOM_EDGE, ALIGN.TOP_EDGE])\n        }),\n        getAlignStyle: PropTypes.func,\n        orientation: PropTypes.oneOf([ORIENTATION.BOTTOM_LEFT, ORIENTATION.BOTTOM_RIGHT, ORIENTATION.TOP_LEFT, ORIENTATION.TOP_RIGHT])\n      };\n    }\n  }]);\n\n  return Hint;\n}(PureComponent);\n\nHint.displayName = 'Hint';\nHint.ORIENTATION = ORIENTATION;\nHint.ALIGN = ALIGN;\n\nexport default Hint;"]},"metadata":{},"sourceType":"module"}