{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Button from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst noop = () => undefined;\n\nconst ToggleButton = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  name,\n  className,\n  checked,\n  type,\n  onChange,\n  value,\n  disabled,\n  id,\n  inputRef,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'btn-check');\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"input\", {\n      className: bsPrefix,\n      name: name,\n      type: type,\n      value: value,\n      ref: inputRef,\n      autoComplete: \"off\",\n      checked: !!checked,\n      disabled: !!disabled,\n      onChange: onChange || noop,\n      id: id\n    }), /*#__PURE__*/_jsx(Button, { ...props,\n      ref: ref,\n      className: classNames(className, disabled && 'disabled'),\n      type: undefined,\n      as: \"label\",\n      htmlFor: id\n    })]\n  });\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/node_modules/react-bootstrap/esm/ToggleButton.js"],"names":["classNames","React","useBootstrapPrefix","Button","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","noop","undefined","ToggleButton","forwardRef","bsPrefix","name","className","checked","type","onChange","value","disabled","id","inputRef","props","ref","children","autoComplete","as","htmlFor","displayName"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,QAAQ,IAAIC,SAArB,QAAsC,mBAAtC;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,mBAA9B;;AAEA,MAAMC,IAAI,GAAG,MAAMC,SAAnB;;AAEA,MAAMC,YAAY,GAAG,aAAaX,KAAK,CAACY,UAAN,CAAiB,CAAC;AAClDC,EAAAA,QADkD;AAElDC,EAAAA,IAFkD;AAGlDC,EAAAA,SAHkD;AAIlDC,EAAAA,OAJkD;AAKlDC,EAAAA,IALkD;AAMlDC,EAAAA,QANkD;AAOlDC,EAAAA,KAPkD;AAQlDC,EAAAA,QARkD;AASlDC,EAAAA,EATkD;AAUlDC,EAAAA,QAVkD;AAWlD,KAAGC;AAX+C,CAAD,EAYhDC,GAZgD,KAYxC;AACTX,EAAAA,QAAQ,GAAGZ,kBAAkB,CAACY,QAAD,EAAW,WAAX,CAA7B;AACA,SAAO,aAAaL,KAAK,CAACF,SAAD,EAAY;AACnCmB,IAAAA,QAAQ,EAAE,CAAC,aAAarB,IAAI,CAAC,OAAD,EAAU;AACpCW,MAAAA,SAAS,EAAEF,QADyB;AAEpCC,MAAAA,IAAI,EAAEA,IAF8B;AAGpCG,MAAAA,IAAI,EAAEA,IAH8B;AAIpCE,MAAAA,KAAK,EAAEA,KAJ6B;AAKpCK,MAAAA,GAAG,EAAEF,QAL+B;AAMpCI,MAAAA,YAAY,EAAE,KANsB;AAOpCV,MAAAA,OAAO,EAAE,CAAC,CAACA,OAPyB;AAQpCI,MAAAA,QAAQ,EAAE,CAAC,CAACA,QARwB;AASpCF,MAAAA,QAAQ,EAAEA,QAAQ,IAAIT,IATc;AAUpCY,MAAAA,EAAE,EAAEA;AAVgC,KAAV,CAAlB,EAWN,aAAajB,IAAI,CAACF,MAAD,EAAS,EAAE,GAAGqB,KAAL;AAC5BC,MAAAA,GAAG,EAAEA,GADuB;AAE5BT,MAAAA,SAAS,EAAEhB,UAAU,CAACgB,SAAD,EAAYK,QAAQ,IAAI,UAAxB,CAFO;AAG5BH,MAAAA,IAAI,EAAEP,SAHsB;AAI5BiB,MAAAA,EAAE,EAAE,OAJwB;AAK5BC,MAAAA,OAAO,EAAEP;AALmB,KAAT,CAXX;AADyB,GAAZ,CAAzB;AAoBD,CAlCiC,CAAlC;AAmCAV,YAAY,CAACkB,WAAb,GAA2B,cAA3B;AACA,eAAelB,YAAf","sourcesContent":["import classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport Button from './Button';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\n\r\nconst noop = () => undefined;\r\n\r\nconst ToggleButton = /*#__PURE__*/React.forwardRef(({\r\n  bsPrefix,\r\n  name,\r\n  className,\r\n  checked,\r\n  type,\r\n  onChange,\r\n  value,\r\n  disabled,\r\n  id,\r\n  inputRef,\r\n  ...props\r\n}, ref) => {\r\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'btn-check');\r\n  return /*#__PURE__*/_jsxs(_Fragment, {\r\n    children: [/*#__PURE__*/_jsx(\"input\", {\r\n      className: bsPrefix,\r\n      name: name,\r\n      type: type,\r\n      value: value,\r\n      ref: inputRef,\r\n      autoComplete: \"off\",\r\n      checked: !!checked,\r\n      disabled: !!disabled,\r\n      onChange: onChange || noop,\r\n      id: id\r\n    }), /*#__PURE__*/_jsx(Button, { ...props,\r\n      ref: ref,\r\n      className: classNames(className, disabled && 'disabled'),\r\n      type: undefined,\r\n      as: \"label\",\r\n      htmlFor: id\r\n    })]\r\n  });\r\n});\r\nToggleButton.displayName = 'ToggleButton';\r\nexport default ToggleButton;"]},"metadata":{},"sourceType":"module"}