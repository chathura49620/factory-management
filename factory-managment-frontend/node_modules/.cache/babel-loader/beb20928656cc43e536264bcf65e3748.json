{"ast":null,"code":"var _jsxFileName = \"/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/storeManager/forms/edititemform.jsx\";\nimport React, { Component } from \"react\";\nimport FormSuper from \"../reusables/formsuper\";\nimport Joi, { join } from \"joi-browser\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditItemForm extends FormSuper {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        _id: \"\",\n        Code: \"\",\n        Type: \"\",\n        Category: \"\",\n        Quantity: \"\",\n        Supplier: \"\",\n        AddedDate: \"\"\n      },\n      categories: [\"category1\", \"category2\", \"category3\"],\n      types: [{\n        _id: \"123\",\n        categoryName: \"Product\"\n      }, {\n        _id: \"143\",\n        categoryName: \"Material\"\n      }],\n      iCodes: [],\n      genres: [\"All\", \"Product\", \"Material\"],\n      searchQuery: \"\",\n      errors: {},\n      selectedGenre: \"All\",\n      materialCodeObjects: [],\n      categoryObjects: []\n    };\n    this.schema = {\n      _id: Joi.string(),\n      Code: Joi.string().required(),\n      Type: Joi.string().required(),\n      Category: Joi.string().required(),\n      Quantity: Joi.number().required(),\n      Supplier: Joi.string(),\n      AddedDate: Joi.date().required()\n    };\n  }\n\n  componentDidMount() {\n    //take the category set from db\n    //take the Material codes from db\n    const ob = {\n      _id: this.props.itemOb._id,\n      Code: this.props.itemOb.iCode,\n      Type: this.props.itemOb.iType,\n      Category: this.props.itemOb.iCategory,\n      Quantity: this.props.itemOb.iQuantity,\n      Supplier: this.props.itemOb.iSupplier,\n      AddedDate: this.props.itemOb.iAddedDate\n    };\n    this.setState({\n      data: ob\n    });\n    axios.get(\"http://localhost:5000/category/\").then(result => {\n      const categoryObjs = result.data;\n      console.log(categoryObjs); //this.setState({categoryObjects: categoryObjs});\n\n      this.setState({\n        categoryObjects: categoryObjs\n      });\n    }); //take the Product codes from db\n    //and put them into single array name iCodes after put them into codes table after set search and fiter them and put again\n  }\n\n  doSubmit() {\n    const {\n      data\n    } = this.state;\n    const jsonOb = {\n      _id: data._id,\n      iCode: data.Code,\n      iType: data.Type,\n      iCategory: data.Category,\n      iQuantity: data.Quantity,\n      iSupplier: data.Supplier,\n      iAddedDate: data.AddedDate\n    }; //update in database\n\n    axios.post(\"http://localhost:5000/items/update/\" + data._id, jsonOb).then(result => console.log(\"updated\"));\n    swal({\n      text: \"Item updated successfully.\",\n      icon: \"success\",\n      timer: \"1500\"\n    });\n    this.props.onSetAndClose(jsonOb);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [this.renderInput(\"Code\", \"Item Code\"), this.renderSelect(\"Type\", \"Item Type\", this.state.types), this.renderSelect(\"Category\", \"Category\", this.state.categoryObjects), this.renderInput(\"Quantity\", \"Item Quantity\"), this.renderInput(\"AddedDate\", \"Received date\", \"date\"), this.renderButton(\"Update Item\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default EditItemForm;","map":{"version":3,"sources":["/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/storeManager/forms/edititemform.jsx"],"names":["React","Component","FormSuper","Joi","join","axios","swal","Link","EditItemForm","state","data","_id","Code","Type","Category","Quantity","Supplier","AddedDate","categories","types","categoryName","iCodes","genres","searchQuery","errors","selectedGenre","materialCodeObjects","categoryObjects","schema","string","required","number","date","componentDidMount","ob","props","itemOb","iCode","iType","iCategory","iQuantity","iSupplier","iAddedDate","setState","get","then","result","categoryObjs","console","log","doSubmit","jsonOb","post","text","icon","timer","onSetAndClose","render","handleSubmit","renderInput","renderSelect","renderButton"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport FormSuper from \"../reusables/formsuper\";\r\nimport Joi, { join } from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass EditItemForm extends FormSuper {\r\n  state = {\r\n    data: {\r\n      _id: \"\",\r\n      Code: \"\",\r\n      Type: \"\",\r\n      Category: \"\",\r\n      Quantity: \"\",\r\n      Supplier: \"\",\r\n      AddedDate: \"\",\r\n    },\r\n    categories: [\"category1\", \"category2\", \"category3\"],\r\n    types: [\r\n      { _id: \"123\", categoryName: \"Product\" },\r\n      { _id: \"143\", categoryName: \"Material\" },\r\n    ],\r\n    iCodes: [],\r\n    genres: [\"All\", \"Product\", \"Material\"],\r\n    searchQuery: \"\",\r\n    errors: {},\r\n    selectedGenre: \"All\",\r\n    materialCodeObjects: [],\r\n    categoryObjects: [],\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    Code: Joi.string().required(),\r\n    Type: Joi.string().required(),\r\n    Category: Joi.string().required(),\r\n    Quantity: Joi.number().required(),\r\n    Supplier: Joi.string(),\r\n    AddedDate: Joi.date().required(),\r\n  };\r\n\r\n  componentDidMount() {\r\n    //take the category set from db\r\n    //take the Material codes from db\r\n    const ob = {\r\n      _id: this.props.itemOb._id,\r\n      Code: this.props.itemOb.iCode,\r\n      Type: this.props.itemOb.iType,\r\n      Category: this.props.itemOb.iCategory,\r\n      Quantity: this.props.itemOb.iQuantity,\r\n      Supplier: this.props.itemOb.iSupplier,\r\n      AddedDate: this.props.itemOb.iAddedDate,\r\n    };\r\n\r\n    this.setState({ data: ob });\r\n\r\n    axios.get(\"http://localhost:5000/category/\").then((result) => {\r\n      const categoryObjs = result.data;\r\n      console.log(categoryObjs);\r\n      //this.setState({categoryObjects: categoryObjs});\r\n      this.setState({\r\n        categoryObjects: categoryObjs,\r\n      });\r\n    });\r\n\r\n    //take the Product codes from db\r\n    //and put them into single array name iCodes after put them into codes table after set search and fiter them and put again\r\n  }\r\n\r\n  doSubmit() {\r\n    const { data } = this.state;\r\n\r\n    const jsonOb = {\r\n      _id: data._id,\r\n      iCode: data.Code,\r\n      iType: data.Type,\r\n      iCategory: data.Category,\r\n      iQuantity: data.Quantity,\r\n      iSupplier: data.Supplier,\r\n      iAddedDate: data.AddedDate,\r\n    };\r\n\r\n    //update in database\r\n    axios\r\n      .post(\"http://localhost:5000/items/update/\" + data._id, jsonOb)\r\n      .then((result) => console.log(\"updated\"));\r\n\r\n    swal({\r\n      text: \"Item updated successfully.\",\r\n      icon: \"success\",\r\n      timer: \"1500\",\r\n    });\r\n\r\n    this.props.onSetAndClose(jsonOb);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"Code\", \"Item Code\")}\r\n              {this.renderSelect(\"Type\", \"Item Type\", this.state.types)}\r\n              {this.renderSelect(\r\n                \"Category\",\r\n                \"Category\",\r\n                this.state.categoryObjects\r\n              )}\r\n              {this.renderInput(\"Quantity\", \"Item Quantity\")}\r\n              {this.renderInput(\"AddedDate\", \"Received date\", \"date\")}\r\n              {this.renderButton(\"Update Item\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditItemForm;\r\n"]},"metadata":{},"sourceType":"module"}