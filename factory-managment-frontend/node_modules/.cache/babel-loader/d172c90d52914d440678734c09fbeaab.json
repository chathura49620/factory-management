{"ast":null,"code":"var _jsxFileName = \"/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/storeManager/forms/editreturnedproductform.jsx\";\nimport React, { Component } from \"react\";\nimport FormSuper from \"../reusables/formsuper\";\nimport Joi, { join } from \"joi-browser\";\nimport axios from \"axios\";\nimport ItemCodeTable from \"../tables/itemcodestable\";\nimport SearchBox from \"../reusables/searchBox\";\nimport ListGroup from \"../reusables/listgroup\";\nimport swal from \"sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditReturnedProductForm extends FormSuper {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        _id: \"\",\n        Code: \"\",\n        Type: \"Product\",\n        Category: \"\",\n        Quantity: \"\",\n        Buyer: \"\",\n        ReturnedDate: \"\",\n        Reason: \"\"\n      },\n      iCodes: [],\n      searchQuery: \"\",\n      errors: {},\n      selectedGenre: \"All\",\n      materialCodeObjects: [],\n      categoryObjects: []\n    };\n    this.schema = {\n      _id: Joi.string(),\n      Code: Joi.string().required(),\n      Type: Joi.string(),\n      Category: Joi.string().required(),\n      Quantity: Joi.number().required(),\n      Buyer: Joi.string().required(),\n      ReturnedDate: Joi.date().required(),\n      Reason: Joi.string().required()\n    };\n  }\n\n  componentDidMount() {\n    const ob = {\n      _id: this.props.returnedOb._id,\n      Code: this.props.returnedOb.rCode,\n      Type: this.props.returnedOb.rType,\n      Category: this.props.returnedOb.rCategory,\n      Quantity: this.props.returnedOb.rQuantity,\n      Buyer: this.props.returnedOb.rBuyer,\n      ReturnedDate: this.props.returnedOb.rDate,\n      Reason: this.props.returnedOb.rReason\n    };\n    this.setState({\n      data: ob\n    }); //take the category set from db\n    //take the Material codes from db\n\n    axios.get(\"http://localhost:5000/category/\").then(result => {\n      const categoryObjs = result.data; //this.setState({categoryObjects: categoryObjs});\n\n      this.setState({\n        categoryObjects: categoryObjs\n      });\n    }); //take the Product codes from db\n    //and put them into single array name iCodes after put them into codes table after set search and fiter them and put again\n  }\n\n  doSubmit() {\n    // console.log(\"submitted\", this.state.data);\n    const {\n      data\n    } = this.state;\n    const jsonOb = {\n      _id: data._id,\n      rCode: data.Code,\n      rType: data.Type,\n      rCategory: data.Category,\n      rQuantity: data.Quantity,\n      rBuyer: data.Buyer,\n      rDate: data.ReturnedDate,\n      rReason: data.Reason\n    };\n    console.log(jsonOb);\n    axios.post(\"http://localhost:5000/returned/update/\" + data._id, jsonOb).then(result => console.log(result.data));\n    swal({\n      text: \"Returned Item added successfully.\",\n      icon: \"success\",\n      timer: \"1500\"\n    });\n    this.props.onSetAndClose(jsonOb);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [this.renderInput(\"Code\", \"Item Code\"), this.renderInput(\"Type\", \"Item Type\"), this.renderSelect(\"Category\", \"Category\", this.state.categoryObjects), this.renderInput(\"Quantity\", \"Item Quantity\"), this.renderInput(\"Buyer\", \"Buyer Name\"), this.renderInput(\"ReturnedDate\", \"Returned date\", \"date\"), this.renderInput(\"Reason\", \"Reason for return\"), this.renderButton(\"Update product\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default EditReturnedProductForm;","map":{"version":3,"sources":["/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/storeManager/forms/editreturnedproductform.jsx"],"names":["React","Component","FormSuper","Joi","join","axios","ItemCodeTable","SearchBox","ListGroup","swal","EditReturnedProductForm","state","data","_id","Code","Type","Category","Quantity","Buyer","ReturnedDate","Reason","iCodes","searchQuery","errors","selectedGenre","materialCodeObjects","categoryObjects","schema","string","required","number","date","componentDidMount","ob","props","returnedOb","rCode","rType","rCategory","rQuantity","rBuyer","rDate","rReason","setState","get","then","result","categoryObjs","doSubmit","jsonOb","console","log","post","text","icon","timer","onSetAndClose","render","handleSubmit","renderInput","renderSelect","renderButton"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport FormSuper from \"../reusables/formsuper\";\r\nimport Joi, { join } from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport ItemCodeTable from \"../tables/itemcodestable\";\r\nimport SearchBox from \"../reusables/searchBox\";\r\nimport ListGroup from \"../reusables/listgroup\";\r\nimport swal from \"sweetalert\";\r\n\r\nclass EditReturnedProductForm extends FormSuper {\r\n  state = {\r\n    data: {\r\n      _id: \"\",\r\n      Code: \"\",\r\n      Type: \"Product\",\r\n      Category: \"\",\r\n      Quantity: \"\",\r\n      Buyer: \"\",\r\n      ReturnedDate: \"\",\r\n      Reason: \"\",\r\n    },\r\n    iCodes: [],\r\n    searchQuery: \"\",\r\n    errors: {},\r\n    selectedGenre: \"All\",\r\n    materialCodeObjects: [],\r\n    categoryObjects: [],\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    Code: Joi.string().required(),\r\n    Type: Joi.string(),\r\n    Category: Joi.string().required(),\r\n    Quantity: Joi.number().required(),\r\n    Buyer: Joi.string().required(),\r\n    ReturnedDate: Joi.date().required(),\r\n    Reason: Joi.string().required(),\r\n  };\r\n\r\n  componentDidMount() {\r\n    const ob = {\r\n      _id: this.props.returnedOb._id,\r\n      Code: this.props.returnedOb.rCode,\r\n      Type: this.props.returnedOb.rType,\r\n      Category: this.props.returnedOb.rCategory,\r\n      Quantity: this.props.returnedOb.rQuantity,\r\n      Buyer: this.props.returnedOb.rBuyer,\r\n      ReturnedDate: this.props.returnedOb.rDate,\r\n      Reason: this.props.returnedOb.rReason,\r\n    };\r\n\r\n    this.setState({ data: ob });\r\n    //take the category set from db\r\n    //take the Material codes from db\r\n\r\n    axios.get(\"http://localhost:5000/category/\").then((result) => {\r\n      const categoryObjs = result.data;\r\n\r\n      //this.setState({categoryObjects: categoryObjs});\r\n      this.setState({\r\n        categoryObjects: categoryObjs,\r\n      });\r\n    });\r\n\r\n    //take the Product codes from db\r\n    //and put them into single array name iCodes after put them into codes table after set search and fiter them and put again\r\n  }\r\n\r\n  doSubmit() {\r\n    // console.log(\"submitted\", this.state.data);\r\n\r\n    const { data } = this.state;\r\n\r\n    const jsonOb = {\r\n      _id: data._id,\r\n      rCode: data.Code,\r\n      rType: data.Type,\r\n      rCategory: data.Category,\r\n      rQuantity: data.Quantity,\r\n      rBuyer: data.Buyer,\r\n      rDate: data.ReturnedDate,\r\n      rReason: data.Reason,\r\n    };\r\n\r\n    console.log(jsonOb);\r\n    axios\r\n      .post(\"http://localhost:5000/returned/update/\" + data._id, jsonOb)\r\n      .then((result) => console.log(result.data));\r\n\r\n    swal({\r\n      text: \"Returned Item added successfully.\",\r\n      icon: \"success\",\r\n      timer: \"1500\",\r\n    });\r\n\r\n    this.props.onSetAndClose(jsonOb);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"Code\", \"Item Code\")}\r\n              {this.renderInput(\"Type\", \"Item Type\")}\r\n              {this.renderSelect(\r\n                \"Category\",\r\n                \"Category\",\r\n                this.state.categoryObjects\r\n              )}\r\n              {this.renderInput(\"Quantity\", \"Item Quantity\")}\r\n              {this.renderInput(\"Buyer\", \"Buyer Name\")}\r\n              {this.renderInput(\"ReturnedDate\", \"Returned date\", \"date\")}\r\n              {this.renderInput(\"Reason\", \"Reason for return\")}\r\n              {this.renderButton(\"Update product\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditReturnedProductForm;\r\n"]},"metadata":{},"sourceType":"module"}