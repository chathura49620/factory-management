{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thero\\\\OneDrive\\\\Documents\\\\factory-management\\\\factory-management\\\\factory-managment-frontend\\\\src\\\\components\\\\FinanceTeamMember\\\\Modals\\\\AddNewBillModal.jsx\";\nimport React, { Component } from 'react';\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\nimport axios from \"axios\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport swal from 'sweetalert';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class AddNewBillModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.snackbarClose = event => {\n      this.setState({\n        snackbaropen: false\n      });\n    };\n\n    this.state = {\n      snackbaropen: false,\n      snackbarmsg: '',\n      CategoryNameError: '',\n      BillType: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/api/bill-type\").then(result => {\n      const BillType = result.data;\n      this.setState({\n        BillType: BillType\n      });\n    }).catch(err => console.log(err.message));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const isValid = this.validate(); // if(isValid){\n\n    fetch('http://localhost:5000/api/bills', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'username': 'chathura'\n      },\n      body: JSON.stringify({\n        billNo: event.target.billNo.value,\n        billType: event.target.billType.value,\n        amount: event.target.amount.value,\n        billDate: event.target.billDate.value,\n        month: event.target.month.value\n      })\n    }).then(res => res.json()).then(result => {\n      swal({\n        title: \"Bill  Added Succesfully\",\n        icon: \"success\",\n        button: \"Done\"\n      });\n      this.setState({\n        CategoryNameError: ''\n      });\n      setTimeout(function () {\n        window.location.reload();\n      }.bind(this), 1000);\n    }, error => {\n      this.setState({\n        snackbaropen: true,\n        snackbarmsg: 'Failed'\n      });\n    }); // }\n  }\n\n  validate() {\n    let CategoryNameError = \"\";\n\n    if (!this.state.CategoryNameError) {\n      CategoryNameError = \"Category Name Cannot Be Blank\";\n    }\n\n    if (CategoryNameError) {\n      this.setState({\n        CategoryNameError: CategoryNameError\n      });\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'center'\n        },\n        open: this.state.snackbaropen,\n        autoHideDuration: 6000,\n        onClose: this.snackbarClose,\n        message: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"message-id\",\n          children: this.state.snackbarmsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 30\n        }, this),\n        action: [/*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"Close\",\n          color: \"danger\",\n          onClick: this.snackbarClose\n        }, \"close\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, { ...this.props,\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\" //centered\n        ,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"contained-modal-title-vcenter\",\n            children: \"Add Bill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: this.handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"name\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Bill No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    name: \"billNo\",\n                    required: true,\n                    placeholder: \"Bill No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      background: \"#f8d7da\"\n                    },\n                    children: this.state.CategoryNameError\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 43\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Bill Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    required: true,\n                    name: \"billType\",\n                    children: this.state.BillType.map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: i.billType\n                    }, i._id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 45\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"name\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    name: \"amount\",\n                    required: true,\n                    placeholder: \"Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      background: \"#f8d7da\"\n                    },\n                    children: this.state.CategoryNameError\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 43\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"startDate\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"date\",\n                    name: \"billDate\",\n                    required: true,\n                    placeholder: \"Bill Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      background: \"#f8d7da\"\n                    },\n                    children: this.state.startDate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Month\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    required: true,\n                    name: \"month\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"January\",\n                      children: \"January\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"February\",\n                      children: \"February\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"February\",\n                      children: \"February\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"April\",\n                      children: \"April\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"May\",\n                      children: \"May\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"June\",\n                      children: \"June \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"July\",\n                      children: \"July\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"August\",\n                      children: \"August\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"September\",\n                      children: \"September\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"October\",\n                      children: \"October\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"November\",\n                      children: \"November\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"December\",\n                      children: \"December\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      backgroundColor: \"#7121AD\",\n                      color: \"white\"\n                    },\n                    variant: \"primary\",\n                    type: \"submit\",\n                    children: \"Add Bill\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: this.props.onHide,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/src/components/FinanceTeamMember/Modals/AddNewBillModal.jsx"],"names":["React","Component","Modal","Button","Row","Col","Form","FormGroup","axios","Snackbar","IconButton","swal","Redirect","AddNewBillModal","constructor","props","snackbarClose","event","setState","snackbaropen","state","snackbarmsg","CategoryNameError","BillType","handleSubmit","bind","componentDidMount","get","then","result","data","catch","err","console","log","message","preventDefault","isValid","validate","fetch","method","headers","body","JSON","stringify","billNo","target","value","billType","amount","billDate","month","res","json","title","icon","button","setTimeout","window","location","reload","error","render","vertical","horizontal","background","map","i","_id","startDate","backgroundColor","color","onHide"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,IAAlC,EAAwCC,SAAxC,QAAyD,iBAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAGA,OAAO,MAAMC,eAAN,SAA8BZ,SAA9B,CAAwC;AAC3Ca,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAYnBC,aAZmB,GAYFC,KAAD,IAAW;AACvB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACH,KAdkB;;AAEf,SAAKC,KAAL,GAAa;AACTD,MAAAA,YAAY,EAAE,KADL;AAETE,MAAAA,WAAW,EAAE,EAFJ;AAGTC,MAAAA,iBAAiB,EAAC,EAHT;AAITC,MAAAA,QAAQ,EAAC;AAJA,KAAb;AAOA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAMDC,EAAAA,iBAAiB,GAAG;AAChBlB,IAAAA,KAAK,CACFmB,GADH,CACO,qCADP,EAEGC,IAFH,CAESC,MAAD,IAAY;AAChB,YAAMN,QAAQ,GAAGM,MAAM,CAACC,IAAxB;AAEA,WAAKZ,QAAL,CAAc;AAAEK,QAAAA,QAAQ,EAAEA;AAAZ,OAAd;AACD,KANH,EAOGQ,KAPH,CAOUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,CAPlB;AAQD;;AAEHX,EAAAA,YAAY,CAACP,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACmB,cAAN;AACA,UAAMC,OAAO,GAAG,KAAKC,QAAL,EAAhB,CAFgB,CAGhB;;AACIC,IAAAA,KAAK,CAAC,iCAAD,EAAoC;AACrCC,MAAAA,MAAM,EAAE,MAD6B;AAErCC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB,kBAFX;AAGL,oBAAY;AAHP,OAF4B;AAOrCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,MAAM,EAAE5B,KAAK,CAAC6B,MAAN,CAAaD,MAAb,CAAoBE,KADX;AAEjBC,QAAAA,QAAQ,EAAE/B,KAAK,CAAC6B,MAAN,CAAaE,QAAb,CAAsBD,KAFf;AAGjBE,QAAAA,MAAM,EAAEhC,KAAK,CAAC6B,MAAN,CAAaG,MAAb,CAAoBF,KAHX;AAIjBG,QAAAA,QAAQ,EAAEjC,KAAK,CAAC6B,MAAN,CAAaI,QAAb,CAAsBH,KAJf;AAKjBI,QAAAA,KAAK,EAAClC,KAAK,CAAC6B,MAAN,CAAaK,KAAb,CAAmBJ;AALR,OAAf;AAP+B,KAApC,CAAL,CAeKnB,IAfL,CAeUwB,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAfjB,EAgBKzB,IAhBL,CAgBWC,MAAD,IAAY;AACdlB,MAAAA,IAAI,CAAC;AACD2C,QAAAA,KAAK,EAAE,yBADN;AAEDC,QAAAA,IAAI,EAAE,SAFL;AAGDC,QAAAA,MAAM,EAAE;AAHP,OAAD,CAAJ;AAKA,WAAKtC,QAAL,CAAc;AAACI,QAAAA,iBAAiB,EAAC;AAAnB,OAAd;AACAmC,MAAAA,UAAU,CAAC,YAAW;AAClBC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,OAFQ,CAEPnC,IAFO,CAEF,IAFE,CAAD,EAEM,IAFN,CAAV;AAGH,KA1BL,EA0BQoC,KAAD,IAAW;AACV,WAAK3C,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAE,IAAhB;AAAsBE,QAAAA,WAAW,EAAE;AAAnC,OAAd;AACH,KA5BL,EAJY,CAmChB;AACH;;AAEDiB,EAAAA,QAAQ,GAAE;AACN,QAAIhB,iBAAiB,GAAG,EAAxB;;AAEA,QAAG,CAAC,KAAKF,KAAL,CAAWE,iBAAf,EAAiC;AAC7BA,MAAAA,iBAAiB,GAAG,+BAApB;AACH;;AAED,QAAGA,iBAAH,EAAqB;AACjB,WAAKJ,QAAL,CAAc;AAACI,QAAAA,iBAAiB,EAACA;AAAnB,OAAd;AACA,aAAO,KAAP;AACH;;AAED,WAAO,IAAP;AACH;;AAEDwC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BAEI,QAAC,QAAD;AAAU,QAAA,YAAY,EAAE;AAAEC,UAAAA,QAAQ,EAAE,KAAZ;AAAmBC,UAAAA,UAAU,EAAE;AAA/B,SAAxB;AACI,QAAA,IAAI,EAAE,KAAK5C,KAAL,CAAWD,YADrB;AAEI,QAAA,gBAAgB,EAAE,IAFtB;AAGI,QAAA,OAAO,EAAE,KAAKH,aAHlB;AAII,QAAA,OAAO,eAAE;AAAM,UAAA,EAAE,EAAC,YAAT;AAAA,oBAAuB,KAAKI,KAAL,CAAWC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAJb;AAKI,QAAA,MAAM,EAAE,cACJ,QAAC,UAAD;AAAwB,wBAAW,OAAnC;AAA2C,UAAA,KAAK,EAAC,QAAjD;AAA0D,UAAA,OAAO,EAAE,KAAKL;AAAxE,WAAgB,OAAhB;AAAA;AAAA;AAAA;AAAA,gBADI;AALZ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAWI,QAAC,KAAD,OACQ,KAAKD,KADb;AAEI,QAAA,IAAI,EAAC,IAFT;AAGI,2BAAgB,+BAHpB,CAIA;AAJA;AAAA,gCAMI,QAAC,KAAD,CAAO,MAAP;AAAc,UAAA,WAAW,MAAzB;AAAA,iCACI,QAAC,KAAD,CAAO,KAAP;AAAa,YAAA,EAAE,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBANJ,eAWI,QAAC,KAAD,CAAO,IAAP;AAAA,iCAEI,QAAC,GAAD;AAAA,mCACI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,QAAQ,EAAE,KAAKS,YAArB;AAAA,wCACI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,SAAS,EAAC,MAAtB;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,MAAnB;AAA0B,oBAAA,IAAI,EAAC,QAA/B;AAAwC,oBAAA,QAAQ,MAAhD;AAAiD,oBAAA,WAAW,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGM;AAAK,oBAAA,KAAK,EAAE;AAACyC,sBAAAA,UAAU,EAAC;AAAZ,qBAAZ;AAAA,8BAAqC,KAAK7C,KAAL,CAAWE;AAAhD;AAAA;AAAA;AAAA;AAAA,0BAHN;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAMI,QAAC,IAAD,CAAM,KAAN;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,EAAE,EAAC,QAAjB;AAA0B,oBAAA,QAAQ,MAAlC;AAAmC,oBAAA,IAAI,EAAC,UAAxC;AAAA,8BACC,KAAKF,KAAL,CAAWG,QAAX,CAAoB2C,GAApB,CAAyBC,CAAD,iBACrB;AAAA,gCACUA,CAAC,CAACnB;AADZ,uBAAamB,CAAC,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA,4BADH;AADD;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,eAeI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,SAAS,EAAC,MAAtB;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,MAAnB;AAA0B,oBAAA,IAAI,EAAC,QAA/B;AAAwC,oBAAA,QAAQ,MAAhD;AAAiD,oBAAA,WAAW,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGM;AAAK,oBAAA,KAAK,EAAE;AAACH,sBAAAA,UAAU,EAAC;AAAZ,qBAAZ;AAAA,8BAAqC,KAAK7C,KAAL,CAAWE;AAAhD;AAAA;AAAA;AAAA;AAAA,0BAHN;AAAA;AAAA;AAAA;AAAA;AAAA,wBAfJ,eAoBI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,SAAS,EAAC,WAAtB;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,MAAnB;AAA0B,oBAAA,IAAI,EAAC,UAA/B;AAA0C,oBAAA,QAAQ,MAAlD;AAAmD,oBAAA,WAAW,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI;AAAK,oBAAA,KAAK,EAAE;AAAC2C,sBAAAA,UAAU,EAAC;AAAZ,qBAAZ;AAAA,8BAAqC,KAAK7C,KAAL,CAAWiD;AAAhD;AAAA;AAAA;AAAA;AAAA,0BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBApBJ,eAyBI,QAAC,IAAD,CAAM,KAAN;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,EAAE,EAAC,QAAjB;AAA0B,oBAAA,QAAQ,MAAlC;AAAmC,oBAAA,IAAI,EAAC,OAAxC;AAAA,4CAEQ;AAAQ,sBAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFR,eAGQ;AAAQ,sBAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHR,eAIQ;AAAQ,sBAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJR,eAKQ;AAAQ,sBAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALR,eAMQ;AAAQ,sBAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANR,eAOQ;AAAQ,sBAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAPR,eAQQ;AAAQ,sBAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BARR,eASQ;AAAQ,sBAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BATR,eAUQ;AAAQ,sBAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAVR,eAWQ;AAAQ,sBAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAXR,eAYQ;AAAQ,sBAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAZR,eAaQ;AAAQ,sBAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAbR;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAzBJ,eA2CI;AAAA;AAAA;AAAA;AAAA,wBA3CJ,eA4CI,QAAC,IAAD,CAAM,KAAN;AAAA,yCACI,QAAC,MAAD;AAAS,oBAAA,KAAK,EAAE;AAAEC,sBAAAA,eAAe,EAAE,SAAnB;AAA8BC,sBAAAA,KAAK,EAAE;AAArC,qBAAhB;AAAgE,oBAAA,OAAO,EAAC,SAAxE;AAAkF,oBAAA,IAAI,EAAC,QAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBA5CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAqEI,QAAC,KAAD,CAAO,MAAP;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,QAAhB;AAAyB,YAAA,OAAO,EAAE,KAAKxD,KAAL,CAAWyD,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBArEJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAuFH;;AAzK0C","sourcesContent":["import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport swal from 'sweetalert';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport class AddNewBillModal extends Component {   \r\n    constructor(props) { \r\n        super(props);\r\n        this.state = {\r\n            snackbaropen: false, \r\n            snackbarmsg: '',\r\n            CategoryNameError:'',\r\n            BillType:[],\r\n             \r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios\r\n          .get(\"http://localhost:5000/api/bill-type\")\r\n          .then((result) => {\r\n            const BillType = result.data;\r\n    \r\n            this.setState({ BillType: BillType });\r\n          })\r\n          .catch((err) => console.log(err.message));\r\n      }         \r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const isValid = this.validate();\r\n        // if(isValid){\r\n            fetch('http://localhost:5000/api/bills', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'username': 'chathura'\r\n                },\r\n                body: JSON.stringify({\r\n                    billNo: event.target.billNo.value,\r\n                    billType: event.target.billType.value,\r\n                    amount: event.target.amount.value,\r\n                    billDate: event.target.billDate.value,\r\n                    month:event.target.month.value\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    swal({\r\n                        title: \"Bill  Added Succesfully\",\r\n                        icon: \"success\",\r\n                        button: \"Done\",\r\n                    }); \r\n                    this.setState({CategoryNameError:''})\r\n                    setTimeout(function() {\r\n                        window.location.reload(); \r\n                      }.bind(this), 1000);\r\n                }, (error) => {\r\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n                }\r\n\r\n                )\r\n        // }\r\n    }\r\n\r\n    validate(){\r\n        let CategoryNameError = \"\";\r\n\r\n        if(!this.state.CategoryNameError){\r\n            CategoryNameError = \"Category Name Cannot Be Blank\"\r\n        }\r\n\r\n        if(CategoryNameError){\r\n            this.setState({CategoryNameError:CategoryNameError})\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                //centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add Bill \r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Bill No</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"billNo\" required placeholder=\"Bill No\"  />\r\n                                          <div style={{background:\"#f8d7da\"}}>{this.state.CategoryNameError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Bill Type</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"billType\">\r\n                                        {this.state.BillType.map((i) => (\r\n                                            <option key={i._id}\r\n                                                    >{i.billType}</option>\r\n                                        ))}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Amount</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"amount\" required placeholder=\"Amount\"  />\r\n                                          <div style={{background:\"#f8d7da\"}}>{this.state.CategoryNameError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"startDate\">\r\n                                        <Form.Label>Date</Form.Label>\r\n                                        <Form.Control type=\"date\" name=\"billDate\" required placeholder=\"Bill Date\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.startDate}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Month</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"month\">\r\n                            \r\n                                                <option value=\"January\" >January</option>\r\n                                                <option value=\"February\" >February</option>\r\n                                                <option value=\"February\" >February</option>\r\n                                                <option value=\"April\" >April</option>\r\n                                                <option value=\"May\" >May</option>\r\n                                                <option value=\"June\" >June </option>\r\n                                                <option value=\"July\" >July</option>\r\n                                                <option value=\"August\" >August</option>\r\n                                                <option value=\"September\" >September</option>\r\n                                                <option value=\"October\" >October</option>\r\n                                                <option value=\"November\" >November</option>\r\n                                                <option value=\"December\" >December</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <br></br>\r\n                                    <Form.Group>\r\n                                        <Button  style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Add Bill\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}