{"ast":null,"code":"import { ticks } from \"d3-array\";\nimport { format } from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport { default as continuous, copy } from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a)) ? function (x) {\n    return Math.log(x / a) / b;\n  } : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0 ? function (t) {\n    return -Math.pow(-b, t) * Math.pow(-a, 1 - t);\n  } : function (t) {\n    return Math.pow(b, t) * Math.pow(a, 1 - t);\n  };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10 : base === Math.E ? Math.exp : function (x) {\n    return Math.pow(base, x);\n  };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), function (x) {\n    return Math.log(x) / base;\n  });\n}\n\nfunction reflect(f) {\n  return function (x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function (_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function (_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function (count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n    if (r = v < u) i = u, u = v, v = i;\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function (count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\n    return function (d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function () {\n    return domain(nice(domain(), {\n      floor: function (x) {\n        return pows(Math.floor(logs(x)));\n      },\n      ceil: function (x) {\n        return pows(Math.ceil(logs(x)));\n      }\n    }));\n  };\n\n  scale.copy = function () {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/node_modules/d3-scale/src/log.js"],"names":["ticks","format","constant","nice","default","continuous","copy","deinterpolate","a","b","Math","log","x","reinterpolate","t","pow","pow10","isFinite","powp","base","E","exp","logp","log10","log2","reflect","f","scale","domain","logs","pows","rescale","_","arguments","length","count","d","u","v","r","i","j","p","k","n","z","round","push","min","map","reverse","tickFormat","specifier","Infinity","max","floor","ceil"],"mappings":"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","sourcesContent":["import {ticks} from \"d3-array\";\r\nimport {format} from \"d3-format\";\r\nimport constant from \"./constant\";\r\nimport nice from \"./nice\";\r\nimport {default as continuous, copy} from \"./continuous\";\r\n\r\nfunction deinterpolate(a, b) {\r\n  return (b = Math.log(b / a))\r\n      ? function(x) { return Math.log(x / a) / b; }\r\n      : constant(b);\r\n}\r\n\r\nfunction reinterpolate(a, b) {\r\n  return a < 0\r\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\r\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\r\n}\r\n\r\nfunction pow10(x) {\r\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\r\n}\r\n\r\nfunction powp(base) {\r\n  return base === 10 ? pow10\r\n      : base === Math.E ? Math.exp\r\n      : function(x) { return Math.pow(base, x); };\r\n}\r\n\r\nfunction logp(base) {\r\n  return base === Math.E ? Math.log\r\n      : base === 10 && Math.log10\r\n      || base === 2 && Math.log2\r\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\r\n}\r\n\r\nfunction reflect(f) {\r\n  return function(x) {\r\n    return -f(-x);\r\n  };\r\n}\r\n\r\nexport default function log() {\r\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\r\n      domain = scale.domain,\r\n      base = 10,\r\n      logs = logp(10),\r\n      pows = powp(10);\r\n\r\n  function rescale() {\r\n    logs = logp(base), pows = powp(base);\r\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\r\n    return scale;\r\n  }\r\n\r\n  scale.base = function(_) {\r\n    return arguments.length ? (base = +_, rescale()) : base;\r\n  };\r\n\r\n  scale.domain = function(_) {\r\n    return arguments.length ? (domain(_), rescale()) : domain();\r\n  };\r\n\r\n  scale.ticks = function(count) {\r\n    var d = domain(),\r\n        u = d[0],\r\n        v = d[d.length - 1],\r\n        r;\r\n\r\n    if (r = v < u) i = u, u = v, v = i;\r\n\r\n    var i = logs(u),\r\n        j = logs(v),\r\n        p,\r\n        k,\r\n        t,\r\n        n = count == null ? 10 : +count,\r\n        z = [];\r\n\r\n    if (!(base % 1) && j - i < n) {\r\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\r\n      if (u > 0) for (; i < j; ++i) {\r\n        for (k = 1, p = pows(i); k < base; ++k) {\r\n          t = p * k;\r\n          if (t < u) continue;\r\n          if (t > v) break;\r\n          z.push(t);\r\n        }\r\n      } else for (; i < j; ++i) {\r\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\r\n          t = p * k;\r\n          if (t < u) continue;\r\n          if (t > v) break;\r\n          z.push(t);\r\n        }\r\n      }\r\n    } else {\r\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\r\n    }\r\n\r\n    return r ? z.reverse() : z;\r\n  };\r\n\r\n  scale.tickFormat = function(count, specifier) {\r\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\r\n    if (typeof specifier !== \"function\") specifier = format(specifier);\r\n    if (count === Infinity) return specifier;\r\n    if (count == null) count = 10;\r\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\r\n    return function(d) {\r\n      var i = d / pows(Math.round(logs(d)));\r\n      if (i * base < base - 0.5) i *= base;\r\n      return i <= k ? specifier(d) : \"\";\r\n    };\r\n  };\r\n\r\n  scale.nice = function() {\r\n    return domain(nice(domain(), {\r\n      floor: function(x) { return pows(Math.floor(logs(x))); },\r\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\r\n    }));\r\n  };\r\n\r\n  scale.copy = function() {\r\n    return copy(scale, log().base(base));\r\n  };\r\n\r\n  return scale;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}