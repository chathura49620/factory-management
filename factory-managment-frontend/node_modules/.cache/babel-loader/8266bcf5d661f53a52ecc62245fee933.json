{"ast":null,"code":"// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/**\r\n * Get unique property values from an array.\r\n * @param {Array} arr Array of data.\r\n * @param {string} propertyName Prop name.\r\n * @returns {Array} Array of unique values.\r\n */\nexport function getUniquePropertyValues(arr, accessor) {\n  var setOfValues = new Set(arr.map(accessor));\n  return Array.from(setOfValues);\n}\n/**\r\n * Add zero to the domain.\r\n * @param {Array} arr Add zero to the domain.\r\n * @param {Number} value Add zero to domain.\r\n * @returns {Array} Adjusted domain.\r\n */\n\nexport function addValueToArray(arr, value) {\n  var result = [].concat(arr);\n\n  if (result[0] > value) {\n    result[0] = value;\n  }\n\n  if (result[result.length - 1] < value) {\n    result[result.length - 1] = value;\n  }\n\n  return result;\n}\n/**\r\n * Transforms a value ( number or date ) to a string.\r\n * @param {Date | number} value The value as date or number.\r\n * @returns {string | number} The value as string.\r\n */\n\nexport function transformValueToString(value) {\n  return Object.prototype.toString.call(value) === '[object Date]' ? value.toDateString() : value;\n}","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/node_modules/react-vis/es/utils/data-utils.js"],"names":["getUniquePropertyValues","arr","accessor","setOfValues","Set","map","Array","from","addValueToArray","value","result","concat","length","transformValueToString","Object","prototype","toString","call","toDateString"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,uBAAT,CAAiCC,GAAjC,EAAsCC,QAAtC,EAAgD;AACrD,MAAIC,WAAW,GAAG,IAAIC,GAAJ,CAAQH,GAAG,CAACI,GAAJ,CAAQH,QAAR,CAAR,CAAlB;AACA,SAAOI,KAAK,CAACC,IAAN,CAAWJ,WAAX,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASK,eAAT,CAAyBP,GAAzB,EAA8BQ,KAA9B,EAAqC;AAC1C,MAAIC,MAAM,GAAG,GAAGC,MAAH,CAAUV,GAAV,CAAb;;AACA,MAAIS,MAAM,CAAC,CAAD,CAAN,GAAYD,KAAhB,EAAuB;AACrBC,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAYD,KAAZ;AACD;;AACD,MAAIC,MAAM,CAACA,MAAM,CAACE,MAAP,GAAgB,CAAjB,CAAN,GAA4BH,KAAhC,EAAuC;AACrCC,IAAAA,MAAM,CAACA,MAAM,CAACE,MAAP,GAAgB,CAAjB,CAAN,GAA4BH,KAA5B;AACD;;AACD,SAAOC,MAAP;AACD;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASG,sBAAT,CAAgCJ,KAAhC,EAAuC;AAC5C,SAAOK,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BR,KAA/B,MAA0C,eAA1C,GAA4DA,KAAK,CAACS,YAAN,EAA5D,GAAmFT,KAA1F;AACD","sourcesContent":["// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\n/**\r\n * Get unique property values from an array.\r\n * @param {Array} arr Array of data.\r\n * @param {string} propertyName Prop name.\r\n * @returns {Array} Array of unique values.\r\n */\r\nexport function getUniquePropertyValues(arr, accessor) {\r\n  var setOfValues = new Set(arr.map(accessor));\r\n  return Array.from(setOfValues);\r\n}\r\n\r\n/**\r\n * Add zero to the domain.\r\n * @param {Array} arr Add zero to the domain.\r\n * @param {Number} value Add zero to domain.\r\n * @returns {Array} Adjusted domain.\r\n */\r\nexport function addValueToArray(arr, value) {\r\n  var result = [].concat(arr);\r\n  if (result[0] > value) {\r\n    result[0] = value;\r\n  }\r\n  if (result[result.length - 1] < value) {\r\n    result[result.length - 1] = value;\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Transforms a value ( number or date ) to a string.\r\n * @param {Date | number} value The value as date or number.\r\n * @returns {string | number} The value as string.\r\n */\r\nexport function transformValueToString(value) {\r\n  return Object.prototype.toString.call(value) === '[object Date]' ? value.toDateString() : value;\r\n}"]},"metadata":{},"sourceType":"module"}