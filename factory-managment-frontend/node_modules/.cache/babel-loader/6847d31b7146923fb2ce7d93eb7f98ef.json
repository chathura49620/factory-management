{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thero\\\\OneDrive\\\\Documents\\\\factory-management\\\\factory-management\\\\factory-managment-frontend\\\\src\\\\components\\\\Employee\\\\Tables\\\\AssignmentTable.jsx\";\nimport React, { Component } from \"react\";\nimport { EditAssignmentModal } from '../Modals/EditAssignmentModal';\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\nimport swal from 'sweetalert';\nimport { ToastContainer, toast, Zoom, Bounce, Flip } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.success(\"Welcome to your assignments.\", {\n  position: toast.POSITION.TOP_RIGHT,\n  draggable: true,\n  transition: Flip,\n  autoClose: 5000,\n  closeOnClick: true\n});\nexport class AssignmentTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editModelShow: false\n    };\n  }\n\n  deleteleave(id) {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this record.\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true\n    }).then(willDelete => {\n      if (willDelete) {\n        fetch('http://localhost:5000/api/assignment-details', {\n          method: 'DELETE',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'username': 'chathura'\n          },\n          body: JSON.stringify({\n            id: id\n          })\n        }).then(res => res.json()).then(result => {\n          swal({\n            title: \"Employee assignment Deleted Succesfully\",\n            icon: \"success\",\n            button: \"Done\"\n          });\n        });\n      } else {\n        swal(\"assignment was not submitted.\");\n      }\n    });\n  }\n\n  render() {\n    const {\n      documentid,\n      supervisor,\n      description,\n      status\n    } = this.state;\n\n    let EditModelClose = () => this.setState({\n      editModalShow: false\n    });\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n        draggable: false,\n        transition: Zoom,\n        autoClose: 8000,\n        newestOnTop: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n        children: /*#__PURE__*/_jsxDEV(EditAssignmentModal, {\n          show: this.state.editModelShow,\n          onHide: EditModelClose,\n          empass: this.state.empass,\n          documentid: documentid,\n          supervisor: supervisor,\n          description: description,\n          status: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered\",\n        style: {\n          overflow: \"hidden\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: \"#7121AD\",\n              color: \"white\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Document ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Supervisor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          style: {\n            overflow: \"hidden\"\n          },\n          children: this.props.filteredItems.map(assignment => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: assignment.documentid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: assignment.supervisor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: assignment.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: assignment.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  backgroundColor: \"#7121AD\",\n                  color: \"white\"\n                },\n                className: \"btn\",\n                onClick: () => this.setState({\n                  editModelShow: true,\n                  id: assignment._id,\n                  documentid: assignment.documentid,\n                  supervisor: assignment.supervisor,\n                  description: assignment.description,\n                  status: assignment.status\n                }),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  backgroundColor: \"#BA0D32 \",\n                  color: \"white\"\n                },\n                className: \"btn\",\n                onClick: () => this.deleteleave(assignment._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 9\n            }, this)]\n          }, assignment._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 7\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n;\nexport default AssignmentTable;","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/src/components/Employee/Tables/AssignmentTable.jsx"],"names":["React","Component","EditAssignmentModal","Table","Button","ButtonToolbar","swal","ToastContainer","toast","Zoom","Bounce","Flip","success","position","POSITION","TOP_RIGHT","draggable","transition","autoClose","closeOnClick","AssignmentTable","constructor","props","state","editModelShow","deleteleave","id","title","text","icon","buttons","dangerMode","then","willDelete","fetch","method","headers","body","JSON","stringify","res","json","result","button","render","documentid","supervisor","description","status","EditModelClose","setState","editModalShow","empass","overflow","backgroundColor","color","filteredItems","map","assignment","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"; \r\nimport { EditAssignmentModal } from '../Modals/EditAssignmentModal';\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport { ToastContainer, toast, Zoom, Bounce, Flip } from \"react-toastify\"\r\nimport \"react-toastify/dist/ReactToastify.css\"\r\n\r\ntoast.success(\"Welcome to your assignments.\", {\r\n  position: toast.POSITION.TOP_RIGHT,\r\n  draggable: true,\r\n  transition: Flip,\r\n  autoClose: 5000,\r\n  closeOnClick: true\r\n});\r\n\r\n\r\nexport class AssignmentTable extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { editModelShow: false }\r\n  }\r\n\r\n  deleteleave(id){\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this record.\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    })\r\n    .then((willDelete) => {\r\n      if (willDelete) {\r\n        fetch('http://localhost:5000/api/assignment-details', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: id\r\n               \r\n            })\r\n        }).then(res => res.json())\r\n        .then((result) => {\r\n          swal({\r\n            title: \"Employee assignment Deleted Succesfully\",\r\n            icon: \"success\",\r\n            button: \"Done\",\r\n          }); \r\n      });\r\n      } else {\r\n        swal(\"assignment was not submitted.\");\r\n      }\r\n    });\r\n  }\r\n  render(){\r\n    const {documentid, supervisor, description, status } = this.state;\r\n    let EditModelClose = () => this.setState({ editModalShow: false })\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <ToastContainer draggable={false} transition={Zoom} autoClose={8000} newestOnTop />\r\n       <ButtonToolbar>\r\n                  <EditAssignmentModal\r\n                      show={this.state.editModelShow}\r\n                      onHide={EditModelClose}\r\n                      empass= {this.state.empass}\r\n                      documentid={documentid}\r\n                      supervisor={supervisor}\r\n                      description={description}\r\n                      status={status}\r\n                    \r\n                    />\r\n                    </ButtonToolbar>\r\n<table className=\"table table-bordered\" style={{overflow: \"hidden\"}}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" }}>\r\n          <th scope=\"col\">Document ID</th>\r\n          <th scope=\"col\">Supervisor</th>\r\n          <th scope=\"col\">Description</th>\r\n          <th scope=\"col\">Status</th>\r\n          <th scope=\"col\">Action</th>\r\n        </tr>\r\n      </thead>\r\n    <tbody style={{overflow: \"hidden\"}}>\r\n        {\r\n          this.props.filteredItems.map(assignment => (\r\n\r\n      <tr key={assignment._id}>\r\n        <td>{assignment.documentid}</td>\r\n        <td>{assignment.supervisor}</td>\r\n        <td>{assignment.description}</td>\r\n        <td>{assignment.status}</td>\r\n        <td>\r\n            <button \r\n                    style={{ backgroundColor: \"#7121AD\", color: \"white\" }} className=\"btn\" \r\n                    onClick={() => this.setState({ editModelShow: true, id: assignment._id, documentid: assignment.documentid, supervisor: assignment.supervisor, description: assignment.description, status : assignment.status })} >Edit</button>\r\n            <button style={{ backgroundColor: \"#BA0D32 \", color: \"white\" }} className=\"btn\" \r\n            onClick={() => this.deleteleave(assignment._id)}>Delete</button>\r\n        </td>\r\n\r\n      </tr>              \r\n            \r\n          ))\r\n        }\r\n\r\n\r\n     \r\n    </tbody>\r\n    </table>\r\n\r\n    </React.Fragment>\r\n  );\r\n      }\r\n};\r\n\r\nexport default AssignmentTable;\r\n"]},"metadata":{},"sourceType":"module"}