{"ast":null,"code":"export default function (methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\nexport function transformer(methods) {\n  return function (stream) {\n    var s = new TransformStream();\n\n    for (var key in methods) s[key] = methods[key];\n\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function (x, y) {\n    this.stream.point(x, y);\n  },\n  sphere: function () {\n    this.stream.sphere();\n  },\n  lineStart: function () {\n    this.stream.lineStart();\n  },\n  lineEnd: function () {\n    this.stream.lineEnd();\n  },\n  polygonStart: function () {\n    this.stream.polygonStart();\n  },\n  polygonEnd: function () {\n    this.stream.polygonEnd();\n  }\n};","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/node_modules/d3-geo/src/transform.js"],"names":["methods","stream","transformer","s","TransformStream","key","prototype","constructor","point","x","y","sphere","lineStart","lineEnd","polygonStart","polygonEnd"],"mappings":"AAAA,eAAe,UAASA,OAAT,EAAkB;AAC/B,SAAO;AACLC,IAAAA,MAAM,EAAEC,WAAW,CAACF,OAAD;AADd,GAAP;AAGD;AAED,OAAO,SAASE,WAAT,CAAqBF,OAArB,EAA8B;AACnC,SAAO,UAASC,MAAT,EAAiB;AACtB,QAAIE,CAAC,GAAG,IAAIC,eAAJ,EAAR;;AACA,SAAK,IAAIC,GAAT,IAAgBL,OAAhB,EAAyBG,CAAC,CAACE,GAAD,CAAD,GAASL,OAAO,CAACK,GAAD,CAAhB;;AACzBF,IAAAA,CAAC,CAACF,MAAF,GAAWA,MAAX;AACA,WAAOE,CAAP;AACD,GALD;AAMD;;AAED,SAASC,eAAT,GAA2B,CAAE;;AAE7BA,eAAe,CAACE,SAAhB,GAA4B;AAC1BC,EAAAA,WAAW,EAAEH,eADa;AAE1BI,EAAAA,KAAK,EAAE,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAAE,SAAKT,MAAL,CAAYO,KAAZ,CAAkBC,CAAlB,EAAqBC,CAArB;AAA0B,GAFxB;AAG1BC,EAAAA,MAAM,EAAE,YAAW;AAAE,SAAKV,MAAL,CAAYU,MAAZ;AAAuB,GAHlB;AAI1BC,EAAAA,SAAS,EAAE,YAAW;AAAE,SAAKX,MAAL,CAAYW,SAAZ;AAA0B,GAJxB;AAK1BC,EAAAA,OAAO,EAAE,YAAW;AAAE,SAAKZ,MAAL,CAAYY,OAAZ;AAAwB,GALpB;AAM1BC,EAAAA,YAAY,EAAE,YAAW;AAAE,SAAKb,MAAL,CAAYa,YAAZ;AAA6B,GAN9B;AAO1BC,EAAAA,UAAU,EAAE,YAAW;AAAE,SAAKd,MAAL,CAAYc,UAAZ;AAA2B;AAP1B,CAA5B","sourcesContent":["export default function(methods) {\r\n  return {\r\n    stream: transformer(methods)\r\n  };\r\n}\r\n\r\nexport function transformer(methods) {\r\n  return function(stream) {\r\n    var s = new TransformStream;\r\n    for (var key in methods) s[key] = methods[key];\r\n    s.stream = stream;\r\n    return s;\r\n  };\r\n}\r\n\r\nfunction TransformStream() {}\r\n\r\nTransformStream.prototype = {\r\n  constructor: TransformStream,\r\n  point: function(x, y) { this.stream.point(x, y); },\r\n  sphere: function() { this.stream.sphere(); },\r\n  lineStart: function() { this.stream.lineStart(); },\r\n  lineEnd: function() { this.stream.lineEnd(); },\r\n  polygonStart: function() { this.stream.polygonStart(); },\r\n  polygonEnd: function() { this.stream.polygonEnd(); }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}