{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thero\\\\OneDrive\\\\Documents\\\\factory-management\\\\factory-management\\\\factory-managment-frontend\\\\src\\\\components\\\\storeManager\\\\forms\\\\newitemform.jsx\";\nimport React, { Component } from \"react\";\nimport FormSuper from \"../reusables/formsuper\";\nimport Joi, { join } from \"joi-browser\";\nimport axios from \"axios\";\nimport ItemCodeTable from \"../tables/itemcodestable\";\nimport SearchBox from \"../reusables/searchBox\";\nimport ListGroup from \"../reusables/listgroup\";\nimport swal from \"sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewItemForm extends FormSuper {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        Code: \"\",\n        Type: \"\",\n        Category: \"\",\n        Quantity: \"\",\n        Supplier: \"\",\n        AddedDate: \"\"\n      },\n      categories: [\"category1\", \"category2\", \"category3\"],\n      types: [{\n        _id: \"123\",\n        categoryName: \"Product\"\n      }, {\n        _id: \"143\",\n        categoryName: \"Material\"\n      }],\n      iCodes: [],\n      genres: [\"All\", \"Product\", \"Material\"],\n      searchQuery: \"\",\n      errors: {},\n      selectedGenre: \"All\",\n      materialCodeObjects: [],\n      categoryObjects: []\n    };\n    this.schema = {\n      Code: Joi.string().required(),\n      Type: Joi.string().required(),\n      Category: Joi.string().required(),\n      Quantity: Joi.number().required(),\n      Supplier: Joi.string().required(),\n      AddedDate: Joi.date().required()\n    };\n\n    this.handleGenreSelect = g => {\n      this.setState({\n        selectedGenre: g,\n        searchQuery: \"\"\n      });\n    };\n\n    this.handleSearch = query => {\n      this.setState({\n        searchQuery: query,\n        selectedGenre: \"All\"\n      });\n    };\n  }\n\n  componentDidMount() {\n    //take the category set from db\n    //take the Material codes from db\n    axios.get(\"http://localhost:5000/codes/material/\").then(result => {\n      const materialCodesObjs = result.data;\n      console.log(materialCodesObjs);\n      axios.get(\"http://localhost:5000/category/\").then(result => {\n        const categoryObjs = result.data;\n        console.log(categoryObjs); //this.setState({categoryObjects: categoryObjs});\n\n        this.setState({\n          materialCodeObjects: materialCodesObjs,\n          categoryObjects: categoryObjs\n        });\n      });\n    }); //take the Product codes from db\n    //and put them into single array name iCodes after put them into codes table after set search and fiter them and put again\n  }\n\n  filteredData() {\n    const {\n      searchQuery,\n      materialCodeObjects,\n      selectedGenre\n    } = this.state;\n    let filtered = [];\n\n    if (searchQuery) {\n      filtered = materialCodeObjects.filter(m => m.materialName.toLowerCase().startsWith(searchQuery.toLowerCase()));\n    } else if (selectedGenre === \"All\") {\n      filtered = materialCodeObjects;\n    } else if (selectedGenre === \"Material\") {\n      filtered = materialCodeObjects;\n    } else {\n      filtered = [];\n    } //finish it\n\n\n    return filtered;\n  }\n\n  doSubmit() {\n    // console.log(\"submitted\", this.state.data);\n    const jsonOb = this.state.data;\n    axios.post(\"http://localhost:5000/items/add/record\", jsonOb).then(result => console.log(result.data));\n    axios.post(\"http://localhost:5000/items/add\", jsonOb).then(result => console.log(result.data));\n    swal({\n      text: \"Item added successfully.\",\n      icon: \"success\",\n      timer: \"1500\"\n    });\n    const resetOb = {\n      Code: \"\",\n      Type: \"\",\n      Category: \"\",\n      Quantity: \"\",\n      Supplier: \"\",\n      AddedDate: \"\"\n    };\n    this.setState({\n      data: resetOb\n    }); //this.props.history.push(\"/items\");\n    // window.location = \"/items\";\n  }\n\n  render() {\n    const filtered = this.filteredData();\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"New Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [this.renderInput(\"Code\", \"Item Code\"), this.renderSelect(\"Type\", \"Item Type\", this.state.types), this.renderSelect(\"Category\", \"Category\", this.state.categoryObjects), this.renderInput(\"Quantity\", \"Item Quantity\"), this.renderInput(\"Supplier\", \"Supplier Name\"), this.renderInput(\"AddedDate\", \"Received date\", \"date\"), this.renderButton(\"Add Item\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(ListGroup, {\n                genres: this.state.genres,\n                onGenreSelect: this.handleGenreSelect,\n                selectedGenre: this.state.selectedGenre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(SearchBox, {\n                onChange: this.handleSearch,\n                value: this.state.searchQuery,\n                placeHolder: \"Search codes...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ItemCodeTable, {\n            materialCodeObs: filtered\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default NewItemForm;","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/src/components/storeManager/forms/newitemform.jsx"],"names":["React","Component","FormSuper","Joi","join","axios","ItemCodeTable","SearchBox","ListGroup","swal","NewItemForm","state","data","Code","Type","Category","Quantity","Supplier","AddedDate","categories","types","_id","categoryName","iCodes","genres","searchQuery","errors","selectedGenre","materialCodeObjects","categoryObjects","schema","string","required","number","date","handleGenreSelect","g","setState","handleSearch","query","componentDidMount","get","then","result","materialCodesObjs","console","log","categoryObjs","filteredData","filtered","filter","m","materialName","toLowerCase","startsWith","doSubmit","jsonOb","post","text","icon","timer","resetOb","render","handleSubmit","renderInput","renderSelect","renderButton"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport FormSuper from \"../reusables/formsuper\";\r\nimport Joi, { join } from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport ItemCodeTable from \"../tables/itemcodestable\";\r\nimport SearchBox from \"../reusables/searchBox\";\r\nimport ListGroup from \"../reusables/listgroup\";\r\nimport swal from \"sweetalert\";\r\n\r\nclass NewItemForm extends FormSuper {\r\n  state = {\r\n    data: {\r\n      Code: \"\",\r\n      Type: \"\",\r\n      Category: \"\",\r\n      Quantity: \"\",\r\n      Supplier: \"\",\r\n      AddedDate: \"\",\r\n    },\r\n    categories: [\"category1\", \"category2\", \"category3\"],\r\n    types: [\r\n      { _id: \"123\", categoryName: \"Product\" },\r\n      { _id: \"143\", categoryName: \"Material\" },\r\n    ],\r\n    iCodes: [],\r\n    genres: [\"All\", \"Product\", \"Material\"],\r\n    searchQuery: \"\",\r\n    errors: {},\r\n    selectedGenre: \"All\",\r\n    materialCodeObjects: [],\r\n    categoryObjects: [],\r\n  };\r\n\r\n  schema = {\r\n    Code: Joi.string().required(),\r\n    Type: Joi.string().required(),\r\n    Category: Joi.string().required(),\r\n    Quantity: Joi.number().required(),\r\n    Supplier: Joi.string().required(),\r\n    AddedDate: Joi.date().required(),\r\n  };\r\n\r\n  componentDidMount() {\r\n    //take the category set from db\r\n    //take the Material codes from db\r\n    axios.get(\"http://localhost:5000/codes/material/\").then((result) => {\r\n      const materialCodesObjs = result.data;\r\n      console.log(materialCodesObjs);\r\n      axios.get(\"http://localhost:5000/category/\").then((result) => {\r\n        const categoryObjs = result.data;\r\n        console.log(categoryObjs);\r\n        //this.setState({categoryObjects: categoryObjs});\r\n        this.setState({\r\n          materialCodeObjects: materialCodesObjs,\r\n          categoryObjects: categoryObjs,\r\n        });\r\n      });\r\n    });\r\n\r\n    //take the Product codes from db\r\n    //and put them into single array name iCodes after put them into codes table after set search and fiter them and put again\r\n  }\r\n\r\n  handleGenreSelect = (g) => {\r\n    this.setState({ selectedGenre: g, searchQuery: \"\" });\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      selectedGenre: \"All\",\r\n    });\r\n  };\r\n\r\n  filteredData() {\r\n    const { searchQuery, materialCodeObjects, selectedGenre } = this.state;\r\n\r\n    let filtered = [];\r\n    if (searchQuery) {\r\n      filtered = materialCodeObjects.filter((m) =>\r\n        m.materialName.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else if (selectedGenre === \"All\") {\r\n      filtered = materialCodeObjects;\r\n    } else if (selectedGenre === \"Material\") {\r\n      filtered = materialCodeObjects;\r\n    } else {\r\n      filtered = [];\r\n    }\r\n    //finish it\r\n    return filtered;\r\n  }\r\n\r\n  doSubmit() {\r\n    // console.log(\"submitted\", this.state.data);\r\n    const jsonOb = this.state.data;\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/items/add/record\", jsonOb)\r\n      .then((result) => console.log(result.data));\r\n    axios\r\n      .post(\"http://localhost:5000/items/add\", jsonOb)\r\n      .then((result) => console.log(result.data));\r\n\r\n    swal({\r\n      text: \"Item added successfully.\",\r\n      icon: \"success\",\r\n      timer: \"1500\",\r\n    });\r\n\r\n    const resetOb = {\r\n      Code: \"\",\r\n      Type: \"\",\r\n      Category: \"\",\r\n      Quantity: \"\",\r\n      Supplier: \"\",\r\n      AddedDate: \"\",\r\n    };\r\n\r\n    this.setState({ data: resetOb });\r\n    //this.props.history.push(\"/items\");\r\n    // window.location = \"/items\";\r\n  }\r\n\r\n  render() {\r\n    const filtered = this.filteredData();\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-2\"></div>\r\n          <div className=\"col\">\r\n            <h1>New Item</h1>\r\n            <form onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"Code\", \"Item Code\")}\r\n              {this.renderSelect(\"Type\", \"Item Type\", this.state.types)}\r\n              {this.renderSelect(\r\n                \"Category\",\r\n                \"Category\",\r\n                this.state.categoryObjects\r\n              )}\r\n              {this.renderInput(\"Quantity\", \"Item Quantity\")}\r\n              {this.renderInput(\"Supplier\", \"Supplier Name\")}\r\n              {this.renderInput(\"AddedDate\", \"Received date\", \"date\")}\r\n              {this.renderButton(\"Add Item\")}\r\n            </form>\r\n          </div>\r\n\r\n          <div className=\"col\">\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <ListGroup\r\n                  genres={this.state.genres}\r\n                  onGenreSelect={this.handleGenreSelect}\r\n                  selectedGenre={this.state.selectedGenre}\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <SearchBox\r\n                  onChange={this.handleSearch}\r\n                  value={this.state.searchQuery}\r\n                  placeHolder=\"Search codes...\"\r\n                />\r\n              </div>\r\n              <div className=\"col-2\"></div>\r\n            </div>\r\n\r\n            <ItemCodeTable materialCodeObs={filtered} />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewItemForm;\r\n"]},"metadata":{},"sourceType":"module"}