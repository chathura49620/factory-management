{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thero\\\\OneDrive\\\\Documents\\\\factory-management\\\\factory-management\\\\factory-managment-frontend\\\\src\\\\pages\\\\Employee\\\\Calendar.jsx\";\n\n/* eslint-disable import/no-anonymous-default-export */\nimport React, { useRef, useState } from \"react\";\nimport FullCalendar from '@fullcalendar/react'; // must go before plugins\n\nimport dayGridPlugin from '@fullcalendar/daygrid'; // a plugin!\n\nimport AddEventModal from \"../../components/Employee/Modals/AddEventModal\";\nimport { ButtonToolbar } from 'react-bootstrap';\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [events, setEvents] = useState([]);\n  const calendarRef = useRef(null);\n\n  const onEventAdded = event => {\n    let calendarApi = calendarRef.current.getApi();\n    calendarApi.addEvent({\n      start: moment(event.start).toDate(),\n      end: moment(event.end).toDate(),\n      title: event.title\n    });\n  };\n\n  async function handleEventAdd(data) {\n    await axios.post(\"/api/calendar/create-event\", data.event);\n  }\n\n  async function handleDateSet(data) {\n    const response = await axios.get(\"/api/calendar/get-events?start=\" + moment(data.start).toISOString() + \"&end=\" + moment(data.end).toISOString());\n    setEvents(response.data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(ButtonToolbar, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: \"#7121AD\",\n          color: \"white\"\n        },\n        className: \"btn btn-lg\",\n        type: \"button\",\n        onClick: () => setModalOpen(true),\n        children: \"Add Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        zIndex: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        ref: calendarRef,\n        events: events,\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        eventAdd: event => handleEventAdd(event),\n        dateSet: date => handleDateSet(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddEventModal, {\n      isOpen: modalOpen,\n      onClose: () => setModalOpen(false),\n      onEventAdded: event => onEventAdded(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/src/pages/Employee/Calendar.jsx"],"names":["React","useRef","useState","FullCalendar","dayGridPlugin","AddEventModal","ButtonToolbar","axios","moment","modalOpen","setModalOpen","events","setEvents","calendarRef","onEventAdded","event","calendarApi","current","getApi","addEvent","start","toDate","end","title","handleEventAdd","data","post","handleDateSet","response","get","toISOString","backgroundColor","color","position","zIndex","date"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\n\r\n\r\nimport React, { useRef, useState } from \"react\";\r\nimport FullCalendar from '@fullcalendar/react' // must go before plugins\r\nimport dayGridPlugin from '@fullcalendar/daygrid' // a plugin!\r\nimport AddEventModal from \"../../components/Employee/Modals/AddEventModal\";\r\nimport { ButtonToolbar } from 'react-bootstrap';\r\nimport axios from \"axios\"\r\nimport moment from \"moment\"\r\n\r\n\r\nexport default function () {\r\n  \r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [events, setEvents] =useState([]);\r\n  const calendarRef = useRef(null);\r\n\r\n  const onEventAdded  = event => {\r\n    let calendarApi = calendarRef.current.getApi()\r\n    calendarApi.addEvent({\r\n      start: moment (event.start).toDate(),\r\n      end: moment(event.end).toDate(),\r\n      title: event.title\r\n    });\r\n  };\r\n\r\n  async function handleEventAdd(data) {\r\n    await axios.post(\"/api/calendar/create-event\", data.event);\r\n  }\r\n\r\n  async function handleDateSet(data) {\r\n    const response = await axios.get(\"/api/calendar/get-events?start=\"+moment(data.start).toISOString() + \"&end=\" +moment(data.end).toISOString());\r\n    setEvents(response.data);\r\n    \r\n  }\r\n\r\n\r\n\r\n  return (\r\n\r\n    \r\n    <section>\r\n     \r\n      \r\n     <ButtonToolbar>\r\n        <button \r\n            style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n            className=\"btn btn-lg\"\r\n            type=\"button\" \r\n            onClick={() => setModalOpen(true)}>\r\n                Add Event\r\n        </button>\r\n      </ButtonToolbar>\r\n        \r\n        <div style={{position: \"relative\", zIndex: 0}}>\r\n        <FullCalendar\r\n            ref={calendarRef}\r\n            events={events}\r\n            plugins={[ dayGridPlugin ]}\r\n            initialView=\"dayGridMonth\"\r\n            eventAdd={event => handleEventAdd(event)}\r\n            dateSet={(date) => handleDateSet(date)}\r\n        />\r\n        </div>\r\n\r\n      <AddEventModal \r\n      isOpen={modalOpen} \r\n      onClose={() => setModalOpen(false)} \r\n      onEventAdded={event => onEventAdded(event)}\r\n      />\r\n\r\n\r\n    </section>\r\n  )\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}