{"ast":null,"code":"var _jsxFileName = \"/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/storeManager/myprofile.jsx\";\nimport React, { Component } from \"react\";\nimport ProfileTable from \"../../components/storeManager/tables/profileTable\";\nimport axios from \"axios\";\nimport FormPopup from \"../../components/storeManager/reusables/formpopup\";\nimport FormProfileEdit from \"../../components/storeManager/forms/formprofileedit\";\nimport userPic from \"../../pages/assets/pem56.png\";\nimport NewDeleteProfileFeedback from \"../../components/storeManager/forms/newdeleteprofilefeedback\";\nimport swal from \"sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MyProfile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userObjectId: \"611a4e2e4710cdbb4ee14fb2\",\n      user: {\n        _id: \"\",\n        FullName: \"\",\n        BirthDate: \"\",\n        Email: \"\",\n        Contact: \"\",\n        Age: \"\",\n        Gender: \"\",\n        Address: \"\",\n        Designation: \"\",\n        BankName: \"\",\n        AccountNumber: \"\",\n        Branch: \"\",\n        BranchCode: \"\",\n        NumberOfFamilyMembers: \"\"\n      },\n      openPopup: false,\n      openReasonDeletePopup: false,\n      deleteUserName: \"\"\n    };\n\n    this.setOpenPopup = () => {\n      this.setState({\n        openPopup: true\n      });\n    };\n\n    this.closeOpenPopup = () => {\n      this.setState({\n        openPopup: false\n      });\n    };\n\n    this.closePopAndSetState = jsonOb => {\n      this.setState({\n        user: jsonOb,\n        openPopup: false\n      });\n    };\n\n    this.setReasonDeleteOpenPopup = (name, id) => {\n      swal({\n        title: \"Are you sure?\",\n        text: \"Once deleted, you will not be able to recover this!\",\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true\n      }).then(result => {\n        if (result) {\n          this.setState({\n            openReasonDeletePopup: true,\n            deleteUserName: name\n          });\n        } //end of if\n\n      });\n    };\n\n    this.closeOpenReasonDeletePopup = () => {\n      this.setState({\n        openReasonDeletePopup: false\n      });\n    };\n\n    this.closeOpenReasonDeletePopupAndLOGOut = () => {\n      const currentUserId = this.state.user._id;\n      this.setState({\n        openReasonDeletePopup: false\n      });\n      axios.get(\"http://localhost:5000/users/\" + currentUserId).then(result => {\n        localStorage.removeItem(\"user_full_name\");\n        localStorage.removeItem(\"user_email\");\n        localStorage.removeItem(\"is_login\");\n        window.location.reload();\n      }); //now log out\n    };\n  }\n\n  componentDidMount() {\n    //get user details from database and set them to the state and tableprofile\n    //use email of user session\n    axios.get(\"http://localhost:5000/users/\" + localStorage.getItem(\"user_email\")).then(result => {\n      const user = result.data;\n      const id = user._id;\n      const fName = user.fullName;\n      const bDate = user.dob;\n      const email = user.email;\n      const contact = user.contact;\n      const age = user.age;\n      const gender = user.gender;\n      const address = user.address;\n      const designation = user.designation;\n      const bName = user.bankName;\n      const accountNumber = user.accountNumber;\n      const branch = user.branch;\n      const branchCode = user.branchCode;\n      const numberOfFamily = user.numberOfFamilyMembers;\n      const ob = {\n        _id: id,\n        FullName: fName,\n        BirthDate: bDate,\n        Email: email,\n        Contact: contact,\n        Age: age,\n        Gender: gender,\n        Address: address,\n        Designation: designation,\n        BankName: bName,\n        AccountNumber: accountNumber,\n        Branch: branch,\n        BranchCode: branchCode,\n        NumberOfFamilyMembers: numberOfFamily\n      };\n      console.log(user);\n      this.setState({\n        user: ob\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"120px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"mt-3\",\n              children: \"My Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ProfileTable, {\n              userOb: this.state.user,\n              onSetPopup: this.setOpenPopup,\n              onSetReasonDeletePopup: this.setReasonDeleteOpenPopup\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormPopup, {\n          openPopup: this.state.openPopup,\n          onClose: this.closeOpenPopup,\n          title: \"Update My Profile\",\n          children: /*#__PURE__*/_jsxDEV(FormProfileEdit, {\n            userOb: this.state.user,\n            onSetAndClose: this.closePopAndSetState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormPopup, {\n          openPopup: this.state.openReasonDeletePopup,\n          onClose: this.closeOpenReasonDeletePopup,\n          title: \"Reason for delete\",\n          children: /*#__PURE__*/_jsxDEV(NewDeleteProfileFeedback, {\n            name: this.state.deleteUserName,\n            logoutAndClose: this.closeOpenReasonDeletePopupAndLOGOut\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MyProfile;","map":{"version":3,"sources":["/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/storeManager/myprofile.jsx"],"names":["React","Component","ProfileTable","axios","FormPopup","FormProfileEdit","userPic","NewDeleteProfileFeedback","swal","MyProfile","state","userObjectId","user","_id","FullName","BirthDate","Email","Contact","Age","Gender","Address","Designation","BankName","AccountNumber","Branch","BranchCode","NumberOfFamilyMembers","openPopup","openReasonDeletePopup","deleteUserName","setOpenPopup","setState","closeOpenPopup","closePopAndSetState","jsonOb","setReasonDeleteOpenPopup","name","id","title","text","icon","buttons","dangerMode","then","result","closeOpenReasonDeletePopup","closeOpenReasonDeletePopupAndLOGOut","currentUserId","get","localStorage","removeItem","window","location","reload","componentDidMount","getItem","data","fName","fullName","bDate","dob","email","contact","age","gender","address","designation","bName","bankName","accountNumber","branch","branchCode","numberOfFamily","numberOfFamilyMembers","ob","console","log","render","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,mDAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mDAAtB;AACA,OAAOC,eAAP,MAA4B,qDAA5B;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,wBAAP,MAAqC,8DAArC;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;AAEA,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCS,KADgC,GACxB;AACNC,MAAAA,YAAY,EAAE,0BADR;AAGNC,MAAAA,IAAI,EAAE;AACJC,QAAAA,GAAG,EAAE,EADD;AAEJC,QAAAA,QAAQ,EAAE,EAFN;AAGJC,QAAAA,SAAS,EAAE,EAHP;AAIJC,QAAAA,KAAK,EAAE,EAJH;AAKJC,QAAAA,OAAO,EAAE,EALL;AAMJC,QAAAA,GAAG,EAAE,EAND;AAOJC,QAAAA,MAAM,EAAE,EAPJ;AAQJC,QAAAA,OAAO,EAAE,EARL;AASJC,QAAAA,WAAW,EAAE,EATT;AAUJC,QAAAA,QAAQ,EAAE,EAVN;AAWJC,QAAAA,aAAa,EAAE,EAXX;AAYJC,QAAAA,MAAM,EAAE,EAZJ;AAaJC,QAAAA,UAAU,EAAE,EAbR;AAcJC,QAAAA,qBAAqB,EAAE;AAdnB,OAHA;AAoBNC,MAAAA,SAAS,EAAE,KApBL;AAqBNC,MAAAA,qBAAqB,EAAE,KArBjB;AAsBNC,MAAAA,cAAc,EAAE;AAtBV,KADwB;;AAAA,SAuEhCC,YAvEgC,GAuEjB,MAAM;AACnB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAzE+B;;AAAA,SA2EhCK,cA3EgC,GA2Ef,MAAM;AACrB,WAAKD,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KA7E+B;;AAAA,SA+EhCM,mBA/EgC,GA+ETC,MAAD,IAAY;AAChC,WAAKH,QAAL,CAAc;AAAEnB,QAAAA,IAAI,EAAEsB,MAAR;AAAgBP,QAAAA,SAAS,EAAE;AAA3B,OAAd;AACD,KAjF+B;;AAAA,SAmFhCQ,wBAnFgC,GAmFL,CAACC,IAAD,EAAOC,EAAP,KAAc;AACvC7B,MAAAA,IAAI,CAAC;AACH8B,QAAAA,KAAK,EAAE,eADJ;AAEHC,QAAAA,IAAI,EAAE,qDAFH;AAGHC,QAAAA,IAAI,EAAE,SAHH;AAIHC,QAAAA,OAAO,EAAE,IAJN;AAKHC,QAAAA,UAAU,EAAE;AALT,OAAD,CAAJ,CAMGC,IANH,CAMSC,MAAD,IAAY;AAClB,YAAIA,MAAJ,EAAY;AACV,eAAKb,QAAL,CAAc;AACZH,YAAAA,qBAAqB,EAAE,IADX;AAEZC,YAAAA,cAAc,EAAEO;AAFJ,WAAd;AAID,SANiB,CAMhB;;AACH,OAbD;AAcD,KAlG+B;;AAAA,SAoGhCS,0BApGgC,GAoGH,MAAM;AACjC,WAAKd,QAAL,CAAc;AAAEH,QAAAA,qBAAqB,EAAE;AAAzB,OAAd;AACD,KAtG+B;;AAAA,SAwGhCkB,mCAxGgC,GAwGM,MAAM;AAC1C,YAAMC,aAAa,GAAG,KAAKrC,KAAL,CAAWE,IAAX,CAAgBC,GAAtC;AACA,WAAKkB,QAAL,CAAc;AAAEH,QAAAA,qBAAqB,EAAE;AAAzB,OAAd;AAGEzB,MAAAA,KAAK,CAAC6C,GAAN,CAAU,iCAAiCD,aAA3C,EAA0DJ,IAA1D,CAAgEC,MAAD,IAAY;AACzEK,QAAAA,YAAY,CAACC,UAAb,CAAwB,gBAAxB;AACAD,QAAAA,YAAY,CAACC,UAAb,CAAwB,YAAxB;AACAD,QAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,OALD,EALwC,CAY1C;AAED,KAtH+B;AAAA;;AA0BhCC,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACAnD,IAAAA,KAAK,CACF6C,GADH,CACO,iCAAiCC,YAAY,CAACM,OAAb,CAAqB,YAArB,CADxC,EAEGZ,IAFH,CAESC,MAAD,IAAY;AAChB,YAAMhC,IAAI,GAAGgC,MAAM,CAACY,IAApB;AAEA,YAAMnB,EAAE,GAAGzB,IAAI,CAACC,GAAhB;AACA,YAAM4C,KAAK,GAAG7C,IAAI,CAAC8C,QAAnB;AACA,YAAMC,KAAK,GAAG/C,IAAI,CAACgD,GAAnB;AACA,YAAMC,KAAK,GAAGjD,IAAI,CAACiD,KAAnB;AACA,YAAMC,OAAO,GAAGlD,IAAI,CAACkD,OAArB;AACA,YAAMC,GAAG,GAAGnD,IAAI,CAACmD,GAAjB;AACA,YAAMC,MAAM,GAAGpD,IAAI,CAACoD,MAApB;AACA,YAAMC,OAAO,GAAGrD,IAAI,CAACqD,OAArB;AACA,YAAMC,WAAW,GAAGtD,IAAI,CAACsD,WAAzB;AACA,YAAMC,KAAK,GAAGvD,IAAI,CAACwD,QAAnB;AACA,YAAMC,aAAa,GAAGzD,IAAI,CAACyD,aAA3B;AACA,YAAMC,MAAM,GAAG1D,IAAI,CAAC0D,MAApB;AACA,YAAMC,UAAU,GAAG3D,IAAI,CAAC2D,UAAxB;AACA,YAAMC,cAAc,GAAG5D,IAAI,CAAC6D,qBAA5B;AAEA,YAAMC,EAAE,GAAG;AACT7D,QAAAA,GAAG,EAAEwB,EADI;AAETvB,QAAAA,QAAQ,EAAE2C,KAFD;AAGT1C,QAAAA,SAAS,EAAE4C,KAHF;AAIT3C,QAAAA,KAAK,EAAE6C,KAJE;AAKT5C,QAAAA,OAAO,EAAE6C,OALA;AAMT5C,QAAAA,GAAG,EAAE6C,GANI;AAOT5C,QAAAA,MAAM,EAAE6C,MAPC;AAQT5C,QAAAA,OAAO,EAAE6C,OARA;AAST5C,QAAAA,WAAW,EAAE6C,WATJ;AAUT5C,QAAAA,QAAQ,EAAE6C,KAVD;AAWT5C,QAAAA,aAAa,EAAE8C,aAXN;AAYT7C,QAAAA,MAAM,EAAE8C,MAZC;AAaT7C,QAAAA,UAAU,EAAE8C,UAbH;AAcT7C,QAAAA,qBAAqB,EAAE8C;AAdd,OAAX;AAiBAG,MAAAA,OAAO,CAACC,GAAR,CAAYhE,IAAZ;AACA,WAAKmB,QAAL,CAAc;AAAEnB,QAAAA,IAAI,EAAE8D;AAAR,OAAd;AACD,KAvCH;AAwCD;;AAmDDG,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,6BACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAAZ;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,YAAD;AACE,cAAA,MAAM,EAAE,KAAKpE,KAAL,CAAWE,IADrB;AAEE,cAAA,UAAU,EAAE,KAAKkB,YAFnB;AAGE,cAAA,sBAAsB,EAAE,KAAKK;AAH/B;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE,QAAC,SAAD;AACE,UAAA,SAAS,EAAE,KAAKzB,KAAL,CAAWiB,SADxB;AAEE,UAAA,OAAO,EAAE,KAAKK,cAFhB;AAGE,UAAA,KAAK,EAAC,mBAHR;AAAA,iCAKE,QAAC,eAAD;AACE,YAAA,MAAM,EAAE,KAAKtB,KAAL,CAAWE,IADrB;AAEE,YAAA,aAAa,EAAE,KAAKqB;AAFtB;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBAbF,eAwBE,QAAC,SAAD;AACE,UAAA,SAAS,EAAE,KAAKvB,KAAL,CAAWkB,qBADxB;AAEE,UAAA,OAAO,EAAE,KAAKiB,0BAFhB;AAGE,UAAA,KAAK,EAAC,mBAHR;AAAA,iCAKE,QAAC,wBAAD;AACE,YAAA,IAAI,EAAE,KAAKnC,KAAL,CAAWmB,cADnB;AAEE,YAAA,cAAc,EAAE,KAAKiB;AAFvB;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAuCD;;AAhK+B;;AAmKlC,eAAerC,SAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport ProfileTable from \"../../components/storeManager/tables/profileTable\";\r\nimport axios from \"axios\";\r\nimport FormPopup from \"../../components/storeManager/reusables/formpopup\";\r\nimport FormProfileEdit from \"../../components/storeManager/forms/formprofileedit\";\r\nimport userPic from \"../../pages/assets/pem56.png\";\r\nimport NewDeleteProfileFeedback from \"../../components/storeManager/forms/newdeleteprofilefeedback\";\r\nimport swal from \"sweetalert\";\r\n\r\nclass MyProfile extends Component {\r\n  state = {\r\n    userObjectId: \"611a4e2e4710cdbb4ee14fb2\",\r\n\r\n    user: {\r\n      _id: \"\",\r\n      FullName: \"\",\r\n      BirthDate: \"\",\r\n      Email: \"\",\r\n      Contact: \"\",\r\n      Age: \"\",\r\n      Gender: \"\",\r\n      Address: \"\",\r\n      Designation: \"\",\r\n      BankName: \"\",\r\n      AccountNumber: \"\",\r\n      Branch: \"\",\r\n      BranchCode: \"\",\r\n      NumberOfFamilyMembers: \"\",\r\n    },\r\n\r\n    openPopup: false,\r\n    openReasonDeletePopup: false,\r\n    deleteUserName: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    //get user details from database and set them to the state and tableprofile\r\n    //use email of user session\r\n    axios\r\n      .get(\"http://localhost:5000/users/\" + localStorage.getItem(\"user_email\"))\r\n      .then((result) => {\r\n        const user = result.data;\r\n\r\n        const id = user._id;\r\n        const fName = user.fullName;\r\n        const bDate = user.dob;\r\n        const email = user.email;\r\n        const contact = user.contact;\r\n        const age = user.age;\r\n        const gender = user.gender;\r\n        const address = user.address;\r\n        const designation = user.designation;\r\n        const bName = user.bankName;\r\n        const accountNumber = user.accountNumber;\r\n        const branch = user.branch;\r\n        const branchCode = user.branchCode;\r\n        const numberOfFamily = user.numberOfFamilyMembers;\r\n\r\n        const ob = {\r\n          _id: id,\r\n          FullName: fName,\r\n          BirthDate: bDate,\r\n          Email: email,\r\n          Contact: contact,\r\n          Age: age,\r\n          Gender: gender,\r\n          Address: address,\r\n          Designation: designation,\r\n          BankName: bName,\r\n          AccountNumber: accountNumber,\r\n          Branch: branch,\r\n          BranchCode: branchCode,\r\n          NumberOfFamilyMembers: numberOfFamily,\r\n        };\r\n\r\n        console.log(user);\r\n        this.setState({ user: ob });\r\n      });\r\n  }\r\n\r\n  setOpenPopup = () => {\r\n    this.setState({ openPopup: true });\r\n  };\r\n\r\n  closeOpenPopup = () => {\r\n    this.setState({ openPopup: false });\r\n  };\r\n\r\n  closePopAndSetState = (jsonOb) => {\r\n    this.setState({ user: jsonOb, openPopup: false });\r\n  };\r\n\r\n  setReasonDeleteOpenPopup = (name, id) => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((result) => {\r\n      if (result) {\r\n        this.setState({\r\n          openReasonDeletePopup: true,\r\n          deleteUserName: name,\r\n        });\r\n      } //end of if\r\n    });\r\n  };\r\n\r\n  closeOpenReasonDeletePopup = () => {\r\n    this.setState({ openReasonDeletePopup: false });\r\n  };\r\n\r\n  closeOpenReasonDeletePopupAndLOGOut = () => {\r\n    const currentUserId = this.state.user._id;\r\n    this.setState({ openReasonDeletePopup: false });\r\n\r\n\r\n      axios.get(\"http://localhost:5000/users/\" + currentUserId).then((result) => {\r\n        localStorage.removeItem(\"user_full_name\");\r\n        localStorage.removeItem(\"user_email\");\r\n        localStorage.removeItem(\"is_login\");\r\n        window.location.reload();\r\n      });\r\n       \r\n    //now log out\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ marginLeft: \"120px\" }}>\r\n          <div className=\"row\">\r\n            <div className=\"col-2\"></div>\r\n\r\n            <div className=\"col\">\r\n              <h2 className=\"mt-3\">My Profile</h2>\r\n              <ProfileTable\r\n                userOb={this.state.user}\r\n                onSetPopup={this.setOpenPopup}\r\n                onSetReasonDeletePopup={this.setReasonDeleteOpenPopup}\r\n              />\r\n            </div>\r\n          </div>\r\n          <FormPopup\r\n            openPopup={this.state.openPopup}\r\n            onClose={this.closeOpenPopup}\r\n            title=\"Update My Profile\"\r\n          >\r\n            <FormProfileEdit\r\n              userOb={this.state.user}\r\n              onSetAndClose={this.closePopAndSetState}\r\n            />\r\n          </FormPopup>\r\n\r\n          <FormPopup\r\n            openPopup={this.state.openReasonDeletePopup}\r\n            onClose={this.closeOpenReasonDeletePopup}\r\n            title=\"Reason for delete\"\r\n          >\r\n            <NewDeleteProfileFeedback\r\n              name={this.state.deleteUserName}\r\n              logoutAndClose={this.closeOpenReasonDeletePopupAndLOGOut}\r\n            />\r\n          </FormPopup>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyProfile;\r\n"]},"metadata":{},"sourceType":"module"}