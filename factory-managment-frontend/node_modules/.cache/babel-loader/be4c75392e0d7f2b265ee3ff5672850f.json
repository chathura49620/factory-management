{"ast":null,"code":"import classNames from 'classnames';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport Fade from './Fade';\nimport OffcanvasBody from './OffcanvasBody';\nimport OffcanvasToggling from './OffcanvasToggling';\nimport ModalContext from './ModalContext';\nimport OffcanvasHeader from './OffcanvasHeader';\nimport OffcanvasTitle from './OffcanvasTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BootstrapModalManager, { getSharedManager } from './BootstrapModalManager';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  scroll: false,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  placement: 'start'\n};\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(OffcanvasToggling, { ...props\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props\n  });\n}\n\nconst Offcanvas = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  'aria-labelledby': ariaLabelledby,\n  placement,\n\n  /* BaseModal props */\n  show,\n  backdrop,\n  keyboard,\n  scroll,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const modalManager = useRef();\n  const handleHide = useEventCallback(onHide);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  const modalBsPrefix = useBootstrapPrefix(undefined, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n\n    if (scroll) {\n      // Have to use a different modal manager since the shared\n      // one handles overflow.\n      if (!modalManager.current) modalManager.current = new BootstrapModalManager({\n        handleContainerOverflow: false\n      });\n      return modalManager.current;\n    }\n\n    return getSharedManager();\n  }\n\n  const handleEnter = (node, ...args) => {\n    if (node) node.style.visibility = 'visible';\n    onEnter == null ? void 0 : onEnter(node, ...args);\n  };\n\n  const handleExited = (node, ...args) => {\n    if (node) node.style.visibility = '';\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${modalBsPrefix}-backdrop`, backdropClassName)\n  }), [backdropClassName, modalBsPrefix]);\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    ...props,\n    className: classNames(className, bsPrefix, `${bsPrefix}-${placement}`),\n    \"aria-labelledby\": ariaLabelledby,\n    children: children\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: ref,\n      backdrop: backdrop,\n      container: container,\n      keyboard: keyboard,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus && !scroll,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: onEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: DialogTransition,\n      backdropTransition: BackdropTransition,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nOffcanvas.displayName = 'Offcanvas';\nOffcanvas.defaultProps = defaultProps;\nexport default Object.assign(Offcanvas, {\n  Body: OffcanvasBody,\n  Header: OffcanvasHeader,\n  Title: OffcanvasTitle\n});","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/node_modules/react-bootstrap/esm/Offcanvas.js"],"names":["classNames","useEventCallback","React","useCallback","useMemo","useRef","BaseModal","Fade","OffcanvasBody","OffcanvasToggling","ModalContext","OffcanvasHeader","OffcanvasTitle","useBootstrapPrefix","BootstrapModalManager","getSharedManager","jsx","_jsx","defaultProps","show","backdrop","keyboard","scroll","autoFocus","enforceFocus","restoreFocus","placement","DialogTransition","props","BackdropTransition","Offcanvas","forwardRef","bsPrefix","className","children","ariaLabelledby","onEscapeKeyDown","onShow","onHide","container","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","manager","propsManager","ref","modalManager","handleHide","modalBsPrefix","undefined","modalContext","getModalManager","current","handleContainerOverflow","handleEnter","node","args","style","visibility","handleExited","renderBackdrop","backdropProps","renderDialog","dialogProps","role","Provider","value","transition","backdropTransition","displayName","Object","assign","Body","Header","Title"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\r\nimport useEventCallback from '@restart/hooks/useEventCallback';\r\nimport * as React from 'react';\r\nimport { useCallback, useMemo, useRef } from 'react';\r\nimport BaseModal from '@restart/ui/Modal';\r\nimport Fade from './Fade';\r\nimport OffcanvasBody from './OffcanvasBody';\r\nimport OffcanvasToggling from './OffcanvasToggling';\r\nimport ModalContext from './ModalContext';\r\nimport OffcanvasHeader from './OffcanvasHeader';\r\nimport OffcanvasTitle from './OffcanvasTitle';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport BootstrapModalManager, { getSharedManager } from './BootstrapModalManager';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst defaultProps = {\r\n  show: false,\r\n  backdrop: true,\r\n  keyboard: true,\r\n  scroll: false,\r\n  autoFocus: true,\r\n  enforceFocus: true,\r\n  restoreFocus: true,\r\n  placement: 'start'\r\n};\r\n\r\nfunction DialogTransition(props) {\r\n  return /*#__PURE__*/_jsx(OffcanvasToggling, { ...props\r\n  });\r\n}\r\n\r\nfunction BackdropTransition(props) {\r\n  return /*#__PURE__*/_jsx(Fade, { ...props\r\n  });\r\n}\r\n\r\nconst Offcanvas = /*#__PURE__*/React.forwardRef(({\r\n  bsPrefix,\r\n  className,\r\n  children,\r\n  'aria-labelledby': ariaLabelledby,\r\n  placement,\r\n\r\n  /* BaseModal props */\r\n  show,\r\n  backdrop,\r\n  keyboard,\r\n  scroll,\r\n  onEscapeKeyDown,\r\n  onShow,\r\n  onHide,\r\n  container,\r\n  autoFocus,\r\n  enforceFocus,\r\n  restoreFocus,\r\n  restoreFocusOptions,\r\n  onEntered,\r\n  onExit,\r\n  onExiting,\r\n  onEnter,\r\n  onEntering,\r\n  onExited,\r\n  backdropClassName,\r\n  manager: propsManager,\r\n  ...props\r\n}, ref) => {\r\n  const modalManager = useRef();\r\n  const handleHide = useEventCallback(onHide);\r\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\r\n  const modalBsPrefix = useBootstrapPrefix(undefined, 'modal');\r\n  const modalContext = useMemo(() => ({\r\n    onHide: handleHide\r\n  }), [handleHide]);\r\n\r\n  function getModalManager() {\r\n    if (propsManager) return propsManager;\r\n\r\n    if (scroll) {\r\n      // Have to use a different modal manager since the shared\r\n      // one handles overflow.\r\n      if (!modalManager.current) modalManager.current = new BootstrapModalManager({\r\n        handleContainerOverflow: false\r\n      });\r\n      return modalManager.current;\r\n    }\r\n\r\n    return getSharedManager();\r\n  }\r\n\r\n  const handleEnter = (node, ...args) => {\r\n    if (node) node.style.visibility = 'visible';\r\n    onEnter == null ? void 0 : onEnter(node, ...args);\r\n  };\r\n\r\n  const handleExited = (node, ...args) => {\r\n    if (node) node.style.visibility = '';\r\n    onExited == null ? void 0 : onExited(...args);\r\n  };\r\n\r\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\r\n    className: classNames(`${modalBsPrefix}-backdrop`, backdropClassName)\r\n  }), [backdropClassName, modalBsPrefix]);\r\n\r\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\r\n    role: \"dialog\",\r\n    ...dialogProps,\r\n    ...props,\r\n    className: classNames(className, bsPrefix, `${bsPrefix}-${placement}`),\r\n    \"aria-labelledby\": ariaLabelledby,\r\n    children: children\r\n  });\r\n\r\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\r\n    value: modalContext,\r\n    children: /*#__PURE__*/_jsx(BaseModal, {\r\n      show: show,\r\n      ref: ref,\r\n      backdrop: backdrop,\r\n      container: container,\r\n      keyboard: keyboard,\r\n      autoFocus: autoFocus,\r\n      enforceFocus: enforceFocus && !scroll,\r\n      restoreFocus: restoreFocus,\r\n      restoreFocusOptions: restoreFocusOptions,\r\n      onEscapeKeyDown: onEscapeKeyDown,\r\n      onShow: onShow,\r\n      onHide: onHide,\r\n      onEnter: handleEnter,\r\n      onEntering: onEntering,\r\n      onEntered: onEntered,\r\n      onExit: onExit,\r\n      onExiting: onExiting,\r\n      onExited: handleExited,\r\n      manager: getModalManager(),\r\n      transition: DialogTransition,\r\n      backdropTransition: BackdropTransition,\r\n      renderBackdrop: renderBackdrop,\r\n      renderDialog: renderDialog\r\n    })\r\n  });\r\n});\r\nOffcanvas.displayName = 'Offcanvas';\r\nOffcanvas.defaultProps = defaultProps;\r\nexport default Object.assign(Offcanvas, {\r\n  Body: OffcanvasBody,\r\n  Header: OffcanvasHeader,\r\n  Title: OffcanvasTitle\r\n});"]},"metadata":{},"sourceType":"module"}