{"ast":null,"code":"import { cubehelix } from \"d3-color\";\nimport { interpolateCubehelixLong } from \"d3-interpolate\";\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\nvar rainbow = cubehelix();\nexport default function (t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/node_modules/d3-scale/src/rainbow.js"],"names":["cubehelix","interpolateCubehelixLong","warm","cool","rainbow","t","Math","floor","ts","abs","h","s","l"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,UAAxB;AACA,SAAQC,wBAAR,QAAuC,gBAAvC;AAEA,OAAO,IAAIC,IAAI,GAAGD,wBAAwB,CAACD,SAAS,CAAC,CAAC,GAAF,EAAO,IAAP,EAAa,IAAb,CAAV,EAA8BA,SAAS,CAAC,EAAD,EAAK,IAAL,EAAW,GAAX,CAAvC,CAAnC;AAEP,OAAO,IAAIG,IAAI,GAAGF,wBAAwB,CAACD,SAAS,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,CAAV,EAA6BA,SAAS,CAAC,EAAD,EAAK,IAAL,EAAW,GAAX,CAAtC,CAAnC;AAEP,IAAII,OAAO,GAAGJ,SAAS,EAAvB;AAEA,eAAe,UAASK,CAAT,EAAY;AACzB,MAAIA,CAAC,GAAG,CAAJ,IAASA,CAAC,GAAG,CAAjB,EAAoBA,CAAC,IAAIC,IAAI,CAACC,KAAL,CAAWF,CAAX,CAAL;AACpB,MAAIG,EAAE,GAAGF,IAAI,CAACG,GAAL,CAASJ,CAAC,GAAG,GAAb,CAAT;AACAD,EAAAA,OAAO,CAACM,CAAR,GAAY,MAAML,CAAN,GAAU,GAAtB;AACAD,EAAAA,OAAO,CAACO,CAAR,GAAY,MAAM,MAAMH,EAAxB;AACAJ,EAAAA,OAAO,CAACQ,CAAR,GAAY,MAAM,MAAMJ,EAAxB;AACA,SAAOJ,OAAO,GAAG,EAAjB;AACD","sourcesContent":["import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n"]},"metadata":{},"sourceType":"module"}