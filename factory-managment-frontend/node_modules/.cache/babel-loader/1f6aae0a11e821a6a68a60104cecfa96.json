{"ast":null,"code":"import _ from \"lodash\"; //paginting algo\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n\n  let pgItems = _(items).slice(startIndex).take(pageSize).value();\n\n  if (pgItems.length === 0) {\n    let nowPage = pageNumber - 1;\n    const startIndex = (nowPage - 1) * pageSize;\n    pgItems = _(items).slice(startIndex).take(pageSize).value();\n    return {\n      it: pgItems,\n      nw: nowPage\n    };\n  }\n\n  return {\n    it: pgItems,\n    nw: 0\n  };\n  /*if (pgItems === null) {\r\n   \r\n    \r\n    \r\n    return {\r\n      it: pgItems,\r\n      nw: nowPage,\r\n    };\r\n  } else {\r\n    return {\r\n      it: pgItems,\r\n      nw: 0,\r\n    };\r\n  }*/\n}","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/src/components/storeManagerComponents/utils/paginate.js"],"names":["_","paginate","items","pageNumber","pageSize","startIndex","pgItems","slice","take","value","length","nowPage","it","nw"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd,C,CAEA;;AACA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,UAAzB,EAAqCC,QAArC,EAA+C;AACpD,QAAMC,UAAU,GAAG,CAACF,UAAU,GAAG,CAAd,IAAmBC,QAAtC;;AAEA,MAAIE,OAAO,GAAGN,CAAC,CAACE,KAAD,CAAD,CAASK,KAAT,CAAeF,UAAf,EAA2BG,IAA3B,CAAgCJ,QAAhC,EAA0CK,KAA1C,EAAd;;AAEA,MAAIH,OAAO,CAACI,MAAR,KAAmB,CAAvB,EAA0B;AACxB,QAAIC,OAAO,GAAGR,UAAU,GAAG,CAA3B;AACA,UAAME,UAAU,GAAG,CAACM,OAAO,GAAG,CAAX,IAAgBP,QAAnC;AACAE,IAAAA,OAAO,GAAGN,CAAC,CAACE,KAAD,CAAD,CAASK,KAAT,CAAeF,UAAf,EAA2BG,IAA3B,CAAgCJ,QAAhC,EAA0CK,KAA1C,EAAV;AACA,WAAO;AACLG,MAAAA,EAAE,EAAEN,OADC;AAELO,MAAAA,EAAE,EAAEF;AAFC,KAAP;AAID;;AAED,SAAO;AACLC,IAAAA,EAAE,EAAEN,OADC;AAELO,IAAAA,EAAE,EAAE;AAFC,GAAP;AAKA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC","sourcesContent":["import _ from \"lodash\";\r\n\r\n//paginting algo\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n\r\n  let pgItems = _(items).slice(startIndex).take(pageSize).value();\r\n\r\n  if (pgItems.length === 0) {\r\n    let nowPage = pageNumber - 1;\r\n    const startIndex = (nowPage - 1) * pageSize;\r\n    pgItems = _(items).slice(startIndex).take(pageSize).value();\r\n    return {\r\n      it: pgItems,\r\n      nw: nowPage,\r\n    };\r\n  }\r\n\r\n  return {\r\n    it: pgItems,\r\n    nw: 0,\r\n  };\r\n\r\n  /*if (pgItems === null) {\r\n   \r\n    \r\n    \r\n    return {\r\n      it: pgItems,\r\n      nw: nowPage,\r\n    };\r\n  } else {\r\n    return {\r\n      it: pgItems,\r\n      nw: 0,\r\n    };\r\n  }*/\r\n}\r\n"]},"metadata":{},"sourceType":"module"}