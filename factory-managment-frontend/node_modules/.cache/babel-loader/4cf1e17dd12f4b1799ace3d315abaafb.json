{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thero\\\\OneDrive\\\\Documents\\\\factory-management\\\\factory-management\\\\factory-managment-frontend\\\\src\\\\components\\\\storeManagerComponents\\\\myprofile.jsx\";\nimport React, { Component } from \"react\";\nimport ProfileTable from \"./common/profileTable\";\nimport axios from \"axios\";\nimport FormPopup from \"./common/formpopup\";\nimport FormProfileEdit from \"./formprofileedit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MyProfile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userObjectId: \"611a4e2e4710cdbb4ee14fb2\",\n      user: {\n        _id: \"\",\n        FullName: \"\",\n        BirthDate: \"\",\n        Email: \"\",\n        Contact: \"\",\n        Age: \"\",\n        Gender: \"\",\n        Address: \"\",\n        Designation: \"\",\n        BankName: \"\",\n        AccountNumber: \"\",\n        Branch: \"\",\n        BranchCode: \"\",\n        NumberOfFamilyMembers: \"\"\n      },\n      openPopup: false\n    };\n\n    this.setOpenPopup = () => {\n      this.setState({\n        openPopup: true\n      });\n    };\n\n    this.closeOpenPopup = () => {\n      this.setState({\n        openPopup: false\n      });\n    };\n\n    this.closePopAndSetState = jsonOb => {\n      //console.log(\"close and set\", jsonOb);\n      this.setState({\n        user: jsonOb,\n        openPopup: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    //get user details from database and set them to the state and tableprofile\n    axios.get(\"http://localhost:5000/users/\" + this.state.userObjectId).then(result => {\n      const user = result.data;\n      const id = user._id;\n      const fName = user.fullName;\n      const bDate = user.dob;\n      const email = user.email;\n      const contact = user.contact;\n      const age = user.age;\n      const gender = user.gender;\n      const address = user.address;\n      const designation = user.designation;\n      const bName = user.bankName;\n      const accountNumber = user.accountNumber;\n      const branch = user.branch;\n      const branchCode = user.branchCode;\n      const numberOfFamily = user.numberOfFamilyMembers;\n      const ob = {\n        _id: id,\n        FullName: fName,\n        BirthDate: bDate,\n        Email: email,\n        Contact: contact,\n        Age: age,\n        Gender: gender,\n        Address: address,\n        Designation: designation,\n        BankName: bName,\n        AccountNumber: accountNumber,\n        Branch: branch,\n        BranchCode: branchCode,\n        NumberOfFamilyMembers: numberOfFamily\n      };\n      console.log(user);\n      this.setState({\n        user: ob\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(ProfileTable, {\n            userOb: this.state.user,\n            onSetPopup: this.setOpenPopup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormPopup, {\n        openPopup: this.state.openPopup,\n        onClose: this.closeOpenPopup,\n        children: /*#__PURE__*/_jsxDEV(FormProfileEdit, {\n          userOb: this.state.user,\n          onSetAndClose: this.closePopAndSetState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MyProfile;","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/src/components/storeManagerComponents/myprofile.jsx"],"names":["React","Component","ProfileTable","axios","FormPopup","FormProfileEdit","MyProfile","state","userObjectId","user","_id","FullName","BirthDate","Email","Contact","Age","Gender","Address","Designation","BankName","AccountNumber","Branch","BranchCode","NumberOfFamilyMembers","openPopup","setOpenPopup","setState","closeOpenPopup","closePopAndSetState","jsonOb","componentDidMount","get","then","result","data","id","fName","fullName","bDate","dob","email","contact","age","gender","address","designation","bName","bankName","accountNumber","branch","branchCode","numberOfFamily","numberOfFamilyMembers","ob","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ProfileTable from \"./common/profileTable\";\r\nimport axios from \"axios\";\r\nimport FormPopup from \"./common/formpopup\";\r\nimport FormProfileEdit from \"./formprofileedit\";\r\n\r\nclass MyProfile extends Component {\r\n  state = {\r\n    userObjectId: \"611a4e2e4710cdbb4ee14fb2\",\r\n\r\n    user: {\r\n      _id: \"\",\r\n      FullName: \"\",\r\n      BirthDate: \"\",\r\n      Email: \"\",\r\n      Contact: \"\",\r\n      Age: \"\",\r\n      Gender: \"\",\r\n      Address: \"\",\r\n      Designation: \"\",\r\n      BankName: \"\",\r\n      AccountNumber: \"\",\r\n      Branch: \"\",\r\n      BranchCode: \"\",\r\n      NumberOfFamilyMembers: \"\",\r\n    },\r\n\r\n    openPopup: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    //get user details from database and set them to the state and tableprofile\r\n    axios\r\n      .get(\"http://localhost:5000/users/\" + this.state.userObjectId)\r\n      .then((result) => {\r\n        const user = result.data;\r\n\r\n        const id = user._id;\r\n        const fName = user.fullName;\r\n        const bDate = user.dob;\r\n        const email = user.email;\r\n        const contact = user.contact;\r\n        const age = user.age;\r\n        const gender = user.gender;\r\n        const address = user.address;\r\n        const designation = user.designation;\r\n        const bName = user.bankName;\r\n        const accountNumber = user.accountNumber;\r\n        const branch = user.branch;\r\n        const branchCode = user.branchCode;\r\n        const numberOfFamily = user.numberOfFamilyMembers;\r\n\r\n        const ob = {\r\n          _id: id,\r\n          FullName: fName,\r\n          BirthDate: bDate,\r\n          Email: email,\r\n          Contact: contact,\r\n          Age: age,\r\n          Gender: gender,\r\n          Address: address,\r\n          Designation: designation,\r\n          BankName: bName,\r\n          AccountNumber: accountNumber,\r\n          Branch: branch,\r\n          BranchCode: branchCode,\r\n          NumberOfFamilyMembers: numberOfFamily,\r\n        };\r\n\r\n        console.log(user);\r\n        this.setState({ user: ob });\r\n      });\r\n  }\r\n\r\n  setOpenPopup = () => {\r\n    this.setState({ openPopup: true });\r\n  };\r\n\r\n  closeOpenPopup = () => {\r\n    this.setState({ openPopup: false });\r\n  };\r\n\r\n  closePopAndSetState = (jsonOb) => {\r\n    //console.log(\"close and set\", jsonOb);\r\n    this.setState({ user: jsonOb, openPopup: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-2\"></div>\r\n          <div className=\"col\">\r\n            <ProfileTable\r\n              userOb={this.state.user}\r\n              onSetPopup={this.setOpenPopup}\r\n            />\r\n          </div>\r\n        </div>\r\n        <FormPopup\r\n          openPopup={this.state.openPopup}\r\n          onClose={this.closeOpenPopup}\r\n        >\r\n          <FormProfileEdit\r\n            userOb={this.state.user}\r\n            onSetAndClose={this.closePopAndSetState}\r\n          />\r\n        </FormPopup>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyProfile;\r\n"]},"metadata":{},"sourceType":"module"}