{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thero\\\\OneDrive\\\\Documents\\\\factory-management\\\\factory-management\\\\factory-managment-frontend\\\\src\\\\components\\\\Employee\\\\Tables\\\\PaymentsTable.jsx\";\nimport React, { Component } from \"react\";\nimport { EditPaymentsModal } from '../Modals/EditPaymentsModal';\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\nimport swal from 'sweetalert';\nimport { ToastContainer, toast, Zoom, Bounce, Flip } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class PaymentsTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editModelShow: false\n    };\n  }\n\n  deletepayments(id) {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this record.\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true\n    }).then(willDelete => {\n      if (willDelete) {\n        fetch('http://localhost:5000/api/payment-details/', {\n          method: 'DELETE',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'username': 'chathura'\n          },\n          body: JSON.stringify({\n            id: id\n          })\n        }).then(res => res.json()).then(result => {\n          swal({\n            title: \"Bank Details Deleted Succesfully\",\n            icon: \"success\",\n            button: \"Done\"\n          });\n        });\n      } else {\n        swal(\"Record was not submitted.\");\n      }\n    });\n  }\n\n  render() {\n    const {\n      id,\n      name,\n      bankname,\n      accountnumber,\n      branch\n    } = this.state;\n\n    let EditModelClose = () => this.setState({\n      editModalShow: false\n    });\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n        draggable: false,\n        transition: Zoom,\n        autoClose: 8000,\n        newestOnTop: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n        children: /*#__PURE__*/_jsxDEV(EditPaymentsModal, {\n          show: this.state.editModelShow,\n          onHide: EditModelClose,\n          empPayments: this.state.empPayments,\n          id: id,\n          name: name,\n          bankname: bankname,\n          accountnumber: accountnumber,\n          branch: branch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered\",\n        style: {\n          overflow: \"hidden\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: \"#7121AD\",\n              color: \"white\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Name of Bank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Account Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Branch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          style: {\n            overflow: \"hidden\"\n          },\n          children: this.props.filteredItems.map(payments => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: payments.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: payments.bankname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: payments.accountnumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: payments.branch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  backgroundColor: \"#7121AD\",\n                  color: \"white\"\n                },\n                className: \"btn\",\n                onClick: () => this.setState({\n                  editModelShow: true,\n                  id: payments._id,\n                  name: payments.name,\n                  bankname: payments.bankname,\n                  accountnumber: payments.accountnumber,\n                  branch: payments.branch\n                }),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  backgroundColor: \"#BA0D32 \",\n                  color: \"white\"\n                },\n                className: \"btn\",\n                onClick: () => this.deletepayments(payments._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 9\n            }, this)]\n          }, payments._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 7\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n;\nexport default PaymentsTable;","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/src/components/Employee/Tables/PaymentsTable.jsx"],"names":["React","Component","EditPaymentsModal","Table","Button","ButtonToolbar","swal","ToastContainer","toast","Zoom","Bounce","Flip","PaymentsTable","constructor","props","state","editModelShow","deletepayments","id","title","text","icon","buttons","dangerMode","then","willDelete","fetch","method","headers","body","JSON","stringify","res","json","result","button","render","name","bankname","accountnumber","branch","EditModelClose","setState","editModalShow","empPayments","overflow","backgroundColor","color","filteredItems","map","payments","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"; \r\nimport { EditPaymentsModal } from '../Modals/EditPaymentsModal';\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport { ToastContainer, toast, Zoom, Bounce, Flip } from \"react-toastify\"\r\nimport \"react-toastify/dist/ReactToastify.css\"\r\n\r\n\r\nexport class PaymentsTable extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { editModelShow: false }\r\n  }\r\n\r\n  deletepayments(id){\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this record.\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    })\r\n    .then((willDelete) => {\r\n      if (willDelete) {\r\n        fetch('http://localhost:5000/api/payment-details/', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: id\r\n               \r\n            })\r\n        }).then(res => res.json())\r\n        .then((result) => {\r\n          swal({\r\n            title: \"Bank Details Deleted Succesfully\",\r\n            icon: \"success\",\r\n            button: \"Done\",\r\n          }); \r\n      });\r\n      } else {\r\n        swal(\"Record was not submitted.\");\r\n      }\r\n    });\r\n  }\r\n  render(){\r\n    const {id, name, bankname, accountnumber, branch } = this.state;\r\n    let EditModelClose = () => this.setState({ editModalShow: false })\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <ToastContainer draggable={false} transition={Zoom} autoClose={8000} newestOnTop />\r\n       <ButtonToolbar>\r\n                  <EditPaymentsModal\r\n                      show={this.state.editModelShow}\r\n                      onHide={EditModelClose}\r\n                      empPayments= {this.state.empPayments}\r\n                      id={id}\r\n                      name={name}\r\n                      bankname={bankname}\r\n                      accountnumber={accountnumber}\r\n                      branch={branch}\r\n                    />\r\n        </ButtonToolbar>\r\n<table className=\"table table-bordered\" style={{overflow: \"hidden\"}}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" }}>\r\n          <th scope=\"col\">Full Name</th>\r\n          <th scope=\"col\">Name of Bank</th>\r\n          <th scope=\"col\">Account Number</th>\r\n          <th scope=\"col\">Branch</th>\r\n          <th scope=\"col\">Action</th>\r\n        </tr>\r\n      </thead>\r\n    <tbody style={{overflow: \"hidden\"}}>\r\n        {\r\n          this.props.filteredItems.map(payments => (\r\n\r\n      <tr key={payments._id}>\r\n        <td>{payments.name}</td>\r\n        <td>{payments.bankname}</td>\r\n        <td>{payments.accountnumber}</td>\r\n        <td>{payments.branch}</td>\r\n        <td>\r\n            <button \r\n                    style={{ backgroundColor: \"#7121AD\", color: \"white\" }} className=\"btn\" \r\n                    onClick={() => this.setState({ editModelShow: true, id: payments._id, name: payments.name, bankname: payments.bankname, accountnumber: payments.accountnumber, branch: payments.branch })} >Edit</button>\r\n            <button \r\n                    style={{ backgroundColor: \"#BA0D32 \", color: \"white\" }} className=\"btn\" \r\n                    onClick={() => this.deletepayments(payments._id)}>Delete</button>\r\n\r\n            \r\n        </td>\r\n\r\n      </tr>              \r\n            \r\n          ))\r\n        }\r\n     \r\n    </tbody>\r\n</table>\r\n\r\n    </React.Fragment>\r\n  );\r\n      }\r\n};\r\n\r\nexport default PaymentsTable;\r\n"]},"metadata":{},"sourceType":"module"}