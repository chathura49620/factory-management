{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thero\\\\OneDrive\\\\Documents\\\\factory-management\\\\factory-management\\\\factory-managment-frontend\\\\src\\\\components\\\\storeManager\\\\forms\\\\itemrequestform.jsx\";\nimport React, { Component } from \"react\";\nimport FormSuper from \"../reusables/formsuper\";\nimport Joi, { join } from \"joi-browser\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ItemRequestForm extends FormSuper {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        Code: \"\",\n        Type: \"\",\n        Category: \"\",\n        Quantity: \"\",\n        RequestDate: \"\",\n        Status: \"pending\"\n      },\n      types: [{\n        _id: \"123\",\n        categoryName: \"Product\"\n      }, {\n        _id: \"143\",\n        categoryName: \"Material\"\n      }],\n      iCodes: [],\n      genres: [\"All\", \"Product\", \"Material\"],\n      searchQuery: \"\",\n      errors: {},\n      selectedGenre: \"All\",\n      materialCodeObjects: [],\n      categoryObjects: []\n    };\n    this.schema = {\n      Code: Joi.string().required(),\n      Type: Joi.string().required(),\n      Category: Joi.string().required(),\n      Quantity: Joi.number().required(),\n      RequestDate: Joi.date().required(),\n      Status: Joi.string()\n    };\n  }\n\n  componentDidMount() {\n    //take the category set from db\n    //take the Material codes from db\n    axios.get(\"http://localhost:5000/codes/material/\").then(result => {\n      const materialCodesObjs = result.data;\n      console.log(materialCodesObjs);\n      axios.get(\"http://localhost:5000/category/\").then(result => {\n        const categoryObjs = result.data;\n        console.log(categoryObjs); //this.setState({categoryObjects: categoryObjs});\n\n        this.setState({\n          materialCodeObjects: materialCodesObjs,\n          categoryObjects: categoryObjs\n        });\n      });\n    }); //take the Product codes from db\n    //and put them into single array name iCodes after put them into codes table after set search and fiter them and put again\n  }\n\n  doSubmit() {\n    const {\n      data\n    } = this.state;\n    console.log(data); // const jsonOb = {\n    //   reqCode: data.Code,\n    //   reqType: data.Type,\n    //   reqCategory: data.Category,\n    //   reqQuantity: data.Quantity,\n    //   reqDate: data.RequestDate,\n    // };\n    //add in database\n\n    axios.post(\"http://localhost:5000/requests/add/\", data).then(result => {\n      axios.get(\"http://localhost:5000/requests/\").then(result => {\n        const requests = result.data;\n        this.props.onSetRequest(requests);\n      });\n    });\n    swal({\n      text: \"Request added successfully.\",\n      icon: \"success\",\n      timer: \"1500\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [this.renderInput(\"Code\", \"Item Code\"), this.renderSelect(\"Type\", \"Item Type\", this.state.types), this.renderSelect(\"Category\", \"Category\", this.state.categoryObjects), this.renderInput(\"Quantity\", \"Item Quantity\"), this.renderInput(\"RequestDate\", \"Request date\", \"date\"), this.renderButton(\"add request\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ItemRequestForm;","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/src/components/storeManager/forms/itemrequestform.jsx"],"names":["React","Component","FormSuper","Joi","join","axios","swal","Link","ItemRequestForm","state","data","Code","Type","Category","Quantity","RequestDate","Status","types","_id","categoryName","iCodes","genres","searchQuery","errors","selectedGenre","materialCodeObjects","categoryObjects","schema","string","required","number","date","componentDidMount","get","then","result","materialCodesObjs","console","log","categoryObjs","setState","doSubmit","post","requests","props","onSetRequest","text","icon","timer","render","handleSubmit","renderInput","renderSelect","renderButton"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport FormSuper from \"../reusables/formsuper\";\r\nimport Joi, { join } from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ItemRequestForm extends FormSuper {\r\n  state = {\r\n    data: {\r\n      Code: \"\",\r\n      Type: \"\",\r\n      Category: \"\",\r\n      Quantity: \"\",\r\n      RequestDate: \"\",\r\n      Status: \"pending\",\r\n    },\r\n\r\n    types: [\r\n      { _id: \"123\", categoryName: \"Product\" },\r\n      { _id: \"143\", categoryName: \"Material\" },\r\n    ],\r\n    iCodes: [],\r\n    genres: [\"All\", \"Product\", \"Material\"],\r\n    searchQuery: \"\",\r\n    errors: {},\r\n    selectedGenre: \"All\",\r\n    materialCodeObjects: [],\r\n    categoryObjects: [],\r\n  };\r\n\r\n  schema = {\r\n    Code: Joi.string().required(),\r\n    Type: Joi.string().required(),\r\n    Category: Joi.string().required(),\r\n    Quantity: Joi.number().required(),\r\n    RequestDate: Joi.date().required(),\r\n    Status: Joi.string(),\r\n  };\r\n\r\n  componentDidMount() {\r\n    //take the category set from db\r\n    //take the Material codes from db\r\n\r\n    axios.get(\"http://localhost:5000/codes/material/\").then((result) => {\r\n      const materialCodesObjs = result.data;\r\n      console.log(materialCodesObjs);\r\n      axios.get(\"http://localhost:5000/category/\").then((result) => {\r\n        const categoryObjs = result.data;\r\n        console.log(categoryObjs);\r\n        //this.setState({categoryObjects: categoryObjs});\r\n        this.setState({\r\n          materialCodeObjects: materialCodesObjs,\r\n          categoryObjects: categoryObjs,\r\n        });\r\n      });\r\n    });\r\n\r\n    //take the Product codes from db\r\n    //and put them into single array name iCodes after put them into codes table after set search and fiter them and put again\r\n  }\r\n\r\n  doSubmit() {\r\n    const { data } = this.state;\r\n    console.log(data);\r\n\r\n    // const jsonOb = {\r\n    //   reqCode: data.Code,\r\n    //   reqType: data.Type,\r\n    //   reqCategory: data.Category,\r\n    //   reqQuantity: data.Quantity,\r\n    //   reqDate: data.RequestDate,\r\n    // };\r\n\r\n    //add in database\r\n    axios.post(\"http://localhost:5000/requests/add/\", data).then((result) => {\r\n      axios.get(\"http://localhost:5000/requests/\").then((result) => {\r\n        const requests = result.data;\r\n\r\n        this.props.onSetRequest(requests);\r\n      });\r\n    });\r\n\r\n    swal({\r\n      text: \"Request added successfully.\",\r\n      icon: \"success\",\r\n      timer: \"1500\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"Code\", \"Item Code\")}\r\n              {this.renderSelect(\"Type\", \"Item Type\", this.state.types)}\r\n              {this.renderSelect(\r\n                \"Category\",\r\n                \"Category\",\r\n                this.state.categoryObjects\r\n              )}\r\n              {this.renderInput(\"Quantity\", \"Item Quantity\")}\r\n              {this.renderInput(\"RequestDate\", \"Request date\", \"date\")}\r\n              {this.renderButton(\"add request\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemRequestForm;\r\n"]},"metadata":{},"sourceType":"module"}