{"ast":null,"code":"import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\r\n * @name isPast\r\n * @category Common Helpers\r\n * @summary Is the given date in the past?\r\n * @pure false\r\n *\r\n * @description\r\n * Is the given date in the past?\r\n *\r\n * > ⚠️ Please note that this function is not present in the FP submodule as\r\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the date to check\r\n * @returns {Boolean} the date is in the past\r\n * @throws {TypeError} 1 argument required\r\n *\r\n * @example\r\n * // If today is 6 October 2014, is 2 July 2014 in the past?\r\n * var result = isPast(new Date(2014, 6, 2))\r\n * //=> true\r\n */\n\nexport default function isPast(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getTime() < Date.now();\n}","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/node_modules/date-fns/esm/isPast/index.js"],"names":["toDate","requiredArgs","isPast","dirtyDate","arguments","getTime","Date","now"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,MAAT,CAAgBC,SAAhB,EAA2B;AACxCF,EAAAA,YAAY,CAAC,CAAD,EAAIG,SAAJ,CAAZ;AACA,SAAOJ,MAAM,CAACG,SAAD,CAAN,CAAkBE,OAAlB,KAA8BC,IAAI,CAACC,GAAL,EAArC;AACD","sourcesContent":["import toDate from \"../toDate/index.js\";\r\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\r\n/**\r\n * @name isPast\r\n * @category Common Helpers\r\n * @summary Is the given date in the past?\r\n * @pure false\r\n *\r\n * @description\r\n * Is the given date in the past?\r\n *\r\n * > ⚠️ Please note that this function is not present in the FP submodule as\r\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the date to check\r\n * @returns {Boolean} the date is in the past\r\n * @throws {TypeError} 1 argument required\r\n *\r\n * @example\r\n * // If today is 6 October 2014, is 2 July 2014 in the past?\r\n * var result = isPast(new Date(2014, 6, 2))\r\n * //=> true\r\n */\r\n\r\nexport default function isPast(dirtyDate) {\r\n  requiredArgs(1, arguments);\r\n  return toDate(dirtyDate).getTime() < Date.now();\r\n}"]},"metadata":{},"sourceType":"module"}