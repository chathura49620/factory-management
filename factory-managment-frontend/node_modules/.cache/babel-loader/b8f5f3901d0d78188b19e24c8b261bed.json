{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thero\\\\OneDrive\\\\Documents\\\\factory-management\\\\factory-management\\\\factory-managment-frontend\\\\src\\\\pages\\\\ProductionManager\\\\AddNewProductionRound.jsx\";\nimport React, { Component } from \"react\";\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\nimport swal from 'sweetalert';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddNewProductionRound extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      snackbaropen: false,\n      snackbarmsg: '',\n      categories: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/api/categories\").then(result => {\n      const categories = result.data;\n      this.setState({\n        categories: categories\n      });\n    }).catch(err => console.log(err.message));\n  }\n\n  handleSubmit(event, props) {\n    console.log(event);\n    event.preventDefault(); //alert(event.target.name.value);\n\n    fetch('http://localhost:5000/api/newProRound-details', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'username': 'thirnaya'\n      },\n      body: JSON.stringify({\n        productId: event.target.proId.value,\n        productCategory: event.target.productCategory.value,\n        quantity: event.target.quntity.value,\n        esDays: event.target.estDays.value,\n        esEmployees: event.target.estEmp.value,\n        status: event.target.status.value\n      })\n    }).then(res => res.json()).then(result => {\n      swal({\n        title: \"New Production Round Details Added Succesfully\",\n        icon: \"success\",\n        button: \"Done\"\n      });\n    }, error => {\n      this.setState({\n        snackbaropen: true,\n        snackbarmsg: 'Failed'\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Basic Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"proId\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Product Id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"proId\",\n                  required: true,\n                  placeholder: \"PRoduct Id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Product Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                required: true,\n                name: \"productCategory\",\n                children: this.state.categories.map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: i.categoryName\n                }, i._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"quntity\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Quntity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"quntity\",\n                required: true,\n                placeholder: \"Quntity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"estDays\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Estimated Days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"estDays\",\n                required: true,\n                placeholder: \"Estimated Days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"estEmp\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Estimated Employees\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"estEmp\",\n                required: true,\n                placeholder: \"Estimated Employees\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                required: true,\n                name: \"status\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: true,\n                  children: \"PENDING\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"ACTIVE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                children: \"Add New Production Round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default AddNewProductionRound;","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/src/pages/ProductionManager/AddNewProductionRound.jsx"],"names":["React","Component","Modal","Button","Row","Col","Form","FormGroup","swal","axios","AddNewProductionRound","constructor","props","state","snackbaropen","snackbarmsg","categories","handleSubmit","bind","componentDidMount","get","then","result","data","setState","catch","err","console","log","message","event","preventDefault","fetch","method","headers","body","JSON","stringify","productId","target","proId","value","productCategory","quantity","quntity","esDays","estDays","esEmployees","estEmp","status","res","json","title","icon","button","error","render","map","i","categoryName","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport axios from \"axios\";\r\n\r\nclass AddNewProductionRound extends Component  {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { snackbaropen: false, snackbarmsg: '',  categories: [], };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\ncomponentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/categories\")\r\n      .then((result) => {\r\n        const categories = result.data;\r\n\r\n        this.setState({ categories: categories });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n\r\n  handleSubmit(event, props) {\r\n      console.log(event);\r\n    event.preventDefault();\r\n    //alert(event.target.name.value);\r\n\r\n    fetch('http://localhost:5000/api/newProRound-details', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'username': 'thirnaya'\r\n        },\r\n        body: JSON.stringify({\r\n            productId: event.target.proId.value,\r\n            productCategory: event.target.productCategory.value,\r\n            quantity: event.target.quntity.value,\r\n            esDays: event.target.estDays.value,\r\n            esEmployees: event.target.estEmp.value,\r\n            status: event.target.status.value,\r\n        })\r\n    })\r\n        .then(res => res.json())\r\n        .then((result) => {\r\n            swal({\r\n                title: \"New Production Round Details Added Succesfully\",\r\n                icon: \"success\",\r\n                button: \"Done\",\r\n              });\r\n        }, (error) => {\r\n            this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n        }\r\n\r\n        )\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <h1>Basic Info</h1>\r\n        \r\n            <Form onSubmit={this.handleSubmit} >\r\n                                    <Form.Group>\r\n                                    <Form.Group controlId=\"proId\">\r\n                                        <Form.Label>Product Id</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"proId\" required placeholder=\"PRoduct Id\"  />\r\n                                    </Form.Group>\r\n                                        <Form.Label>Product Category</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"productCategory\">\r\n                                        {this.state.categories.map((i) => (\r\n                                            <option key={i._id}\r\n                                                    >{i.categoryName}</option>\r\n                                        ))}\r\n                                        </Form.Control>  \r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"quntity\">\r\n                                        <Form.Label>Quntity</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"quntity\" required placeholder=\"Quntity\"  />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"estDays\">\r\n                                        <Form.Label>Estimated Days</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"estDays\" required placeholder=\"Estimated Days\" />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"estEmp\">\r\n                                        <Form.Label>Estimated Employees</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"estEmp\" required placeholder=\"Estimated Employees\"  />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"status\">\r\n                                            <option selected>PENDING</option>\r\n                                            <option>ACTIVE</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Button  variant=\"primary\" type=\"submit\" >\r\n                                            Add New Production Round\r\n                                        </Button>\r\n                                    </Form.Group>\r\n              </Form>\r\n\r\n          </div>\r\n\r\n          \r\n\r\n            \r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default AddNewProductionRound;\r\n"]},"metadata":{},"sourceType":"module"}