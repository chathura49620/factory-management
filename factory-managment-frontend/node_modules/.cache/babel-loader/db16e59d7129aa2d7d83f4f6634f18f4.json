{"ast":null,"code":"import subDays from \"../subDays/index.js\";\nimport subMonths from \"../subMonths/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\r\n * @name sub\r\n * @category Common Helpers\r\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\r\n *\r\n * @description\r\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\r\n *\r\n * @param {Date|Number} date - the date to be changed\r\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\r\n *\r\n * | Key     | Description                        |\r\n * |---------|------------------------------------|\r\n * | years   | Amount of years to be subtracted   |\r\n * | months  | Amount of months to be subtracted  |\r\n * | weeks   | Amount of weeks to be subtracted   |\r\n * | days    | Amount of days to be subtracted    |\r\n * | hours   | Amount of hours to be subtracted   |\r\n * | minutes | Amount of minutes to be subtracted |\r\n * | seconds | Amount of seconds to be subtracted |\r\n *\r\n * All values default to 0\r\n *\r\n * @returns {Date} the new date with the seconds subtracted\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Subtract the following duration from 15 June 2017 15:29:20\r\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\r\n *   years: 2,\r\n *   months: 9,\r\n *   weeks: 1,\r\n *   days: 7,\r\n *   hours: 5,\r\n *   minutes: 9,\r\n *   seconds: 30\r\n * })\r\n * //=> Mon Sep 1 2014 10:19:50\r\n */\n\nexport default function sub(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0; // Subtract years and months\n\n  var dateWithoutMonths = subMonths(toDate(dirtyDate), months + years * 12); // Subtract weeks and days\n\n  var dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7); // Subtract hours, minutes and seconds\n\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n}","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/node_modules/date-fns/esm/sub/index.js"],"names":["subDays","subMonths","toDate","requiredArgs","toInteger","sub","dirtyDate","duration","arguments","Date","NaN","years","months","weeks","days","hours","minutes","seconds","dateWithoutMonths","dateWithoutDays","minutestoSub","secondstoSub","mstoSub","finalDate","getTime"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,qBAApB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,GAAT,CAAaC,SAAb,EAAwBC,QAAxB,EAAkC;AAC/CJ,EAAAA,YAAY,CAAC,CAAD,EAAIK,SAAJ,CAAZ;AACA,MAAI,CAACD,QAAD,IAAa,OAAOA,QAAP,KAAoB,QAArC,EAA+C,OAAO,IAAIE,IAAJ,CAASC,GAAT,CAAP;AAC/C,MAAIC,KAAK,GAAGJ,QAAQ,CAACI,KAAT,GAAiBP,SAAS,CAACG,QAAQ,CAACI,KAAV,CAA1B,GAA6C,CAAzD;AACA,MAAIC,MAAM,GAAGL,QAAQ,CAACK,MAAT,GAAkBR,SAAS,CAACG,QAAQ,CAACK,MAAV,CAA3B,GAA+C,CAA5D;AACA,MAAIC,KAAK,GAAGN,QAAQ,CAACM,KAAT,GAAiBT,SAAS,CAACG,QAAQ,CAACM,KAAV,CAA1B,GAA6C,CAAzD;AACA,MAAIC,IAAI,GAAGP,QAAQ,CAACO,IAAT,GAAgBV,SAAS,CAACG,QAAQ,CAACO,IAAV,CAAzB,GAA2C,CAAtD;AACA,MAAIC,KAAK,GAAGR,QAAQ,CAACQ,KAAT,GAAiBX,SAAS,CAACG,QAAQ,CAACQ,KAAV,CAA1B,GAA6C,CAAzD;AACA,MAAIC,OAAO,GAAGT,QAAQ,CAACS,OAAT,GAAmBZ,SAAS,CAACG,QAAQ,CAACS,OAAV,CAA5B,GAAiD,CAA/D;AACA,MAAIC,OAAO,GAAGV,QAAQ,CAACU,OAAT,GAAmBb,SAAS,CAACG,QAAQ,CAACU,OAAV,CAA5B,GAAiD,CAA/D,CAT+C,CASmB;;AAElE,MAAIC,iBAAiB,GAAGjB,SAAS,CAACC,MAAM,CAACI,SAAD,CAAP,EAAoBM,MAAM,GAAGD,KAAK,GAAG,EAArC,CAAjC,CAX+C,CAW4B;;AAE3E,MAAIQ,eAAe,GAAGnB,OAAO,CAACkB,iBAAD,EAAoBJ,IAAI,GAAGD,KAAK,GAAG,CAAnC,CAA7B,CAb+C,CAaqB;;AAEpE,MAAIO,YAAY,GAAGJ,OAAO,GAAGD,KAAK,GAAG,EAArC;AACA,MAAIM,YAAY,GAAGJ,OAAO,GAAGG,YAAY,GAAG,EAA5C;AACA,MAAIE,OAAO,GAAGD,YAAY,GAAG,IAA7B;AACA,MAAIE,SAAS,GAAG,IAAId,IAAJ,CAASU,eAAe,CAACK,OAAhB,KAA4BF,OAArC,CAAhB;AACA,SAAOC,SAAP;AACD","sourcesContent":["import subDays from \"../subDays/index.js\";\r\nimport subMonths from \"../subMonths/index.js\";\r\nimport toDate from \"../toDate/index.js\";\r\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\r\nimport toInteger from \"../_lib/toInteger/index.js\";\r\n/**\r\n * @name sub\r\n * @category Common Helpers\r\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\r\n *\r\n * @description\r\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\r\n *\r\n * @param {Date|Number} date - the date to be changed\r\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\r\n *\r\n * | Key     | Description                        |\r\n * |---------|------------------------------------|\r\n * | years   | Amount of years to be subtracted   |\r\n * | months  | Amount of months to be subtracted  |\r\n * | weeks   | Amount of weeks to be subtracted   |\r\n * | days    | Amount of days to be subtracted    |\r\n * | hours   | Amount of hours to be subtracted   |\r\n * | minutes | Amount of minutes to be subtracted |\r\n * | seconds | Amount of seconds to be subtracted |\r\n *\r\n * All values default to 0\r\n *\r\n * @returns {Date} the new date with the seconds subtracted\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Subtract the following duration from 15 June 2017 15:29:20\r\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\r\n *   years: 2,\r\n *   months: 9,\r\n *   weeks: 1,\r\n *   days: 7,\r\n *   hours: 5,\r\n *   minutes: 9,\r\n *   seconds: 30\r\n * })\r\n * //=> Mon Sep 1 2014 10:19:50\r\n */\r\n\r\nexport default function sub(dirtyDate, duration) {\r\n  requiredArgs(2, arguments);\r\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\r\n  var years = duration.years ? toInteger(duration.years) : 0;\r\n  var months = duration.months ? toInteger(duration.months) : 0;\r\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\r\n  var days = duration.days ? toInteger(duration.days) : 0;\r\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\r\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\r\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0; // Subtract years and months\r\n\r\n  var dateWithoutMonths = subMonths(toDate(dirtyDate), months + years * 12); // Subtract weeks and days\r\n\r\n  var dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7); // Subtract hours, minutes and seconds\r\n\r\n  var minutestoSub = minutes + hours * 60;\r\n  var secondstoSub = seconds + minutestoSub * 60;\r\n  var mstoSub = secondstoSub * 1000;\r\n  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\r\n  return finalDate;\r\n}"]},"metadata":{},"sourceType":"module"}