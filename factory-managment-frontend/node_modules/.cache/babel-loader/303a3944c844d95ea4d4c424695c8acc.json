{"ast":null,"code":"var _jsxFileName = \"/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/SuperAdmin/Modals/AddFactoryDetailsModal.jsx\";\nimport React, { Component } from 'react';\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport swal from 'sweetalert';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class AddFactoryDetailsModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.snackbarClose = event => {\n      this.setState({\n        snackbaropen: false\n      });\n    };\n\n    this.state = {\n      snackbaropen: false,\n      snackbarmsg: '',\n      companyNameError: '',\n      companyAddressError: '',\n      ownerNameError: '',\n      mainProductError: '',\n      startDateError: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const isValid = this.validate(event);\n\n    if (isValid) {\n      fetch('http://localhost:5000/api/factory-details', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'username': 'chathura'\n        },\n        body: JSON.stringify({\n          companyName: event.target.companyName.value,\n          companyAddress: event.target.companyAddress.value,\n          ownerName: event.target.ownerName.value,\n          mainProduct: event.target.mainProduct.value,\n          startDate: event.target.startDate.value,\n          is_added: 1 // companyName: event.target.companyName.value,\n          // companyName: event.target.companyName.value,\n\n        })\n      }).then(res => res.json()).then(result => {\n        console.log(result);\n        swal({\n          title: \"Factory Details Added Succesfully\",\n          icon: \"success\",\n          button: \"Done\"\n        });\n        this.setState({\n          companyNameError: '',\n          companyAddressError: '',\n          ownerNameError: '',\n          mainProductError: '',\n          startDateError: ''\n        });\n        setTimeout(function () {\n          window.location.reload();\n        }.bind(this), 1500);\n      }, error => {\n        this.setState({\n          snackbaropen: true,\n          snackbarmsg: 'Failed'\n        });\n      });\n    }\n  }\n\n  validate(event) {\n    let companyNameError = \"\";\n    let companyAddressError = \"\";\n    let ownerNameError = \"\";\n    let mainProductError = \"\";\n    let startDateError = \"\";\n\n    if (!event.target.companyName.value) {\n      companyNameError = \"Company Name  Cannot Be Blank\";\n    }\n\n    if (!event.target.companyAddress.value) {\n      companyAddressError = \"Company Address  Cannot Be Blank\";\n    }\n\n    if (!event.target.ownerName.value) {\n      ownerNameError = \"Owner Name  Cannot Be Blank\";\n    }\n\n    if (!event.target.mainProduct.value) {\n      mainProductError = \"Main Product  Cannot Be Blank\";\n    }\n\n    if (!event.target.startDate.value) {\n      startDateError = \"start Date  Cannot Be Blank\";\n    }\n\n    if (companyNameError || companyAddressError || ownerNameError || mainProductError || startDateError) {\n      this.setState({\n        companyNameError: companyNameError,\n        companyAddressError: companyAddressError,\n        ownerNameError: ownerNameError,\n        mainProductError: mainProductError,\n        startDateError: startDateError\n      });\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'center'\n        },\n        open: this.state.snackbaropen,\n        autoHideDuration: 6000,\n        onClose: this.snackbarClose,\n        message: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"message-id\",\n          children: this.state.snackbarmsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 30\n        }, this),\n        action: [/*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"Close\",\n          color: \"danger\",\n          onClick: this.snackbarClose\n        }, \"close\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, { ...this.props,\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\" //centered\n        ,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"contained-modal-title-vcenter\",\n            children: \"Add Factory Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: this.handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"companyName\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Company Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    name: \"companyName\",\n                    required: true,\n                    placeholder: \"Company Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      background: \"#f8d7da\"\n                    },\n                    children: this.state.companyNameError\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"companyAddress\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Company Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    name: \"companyAddress\",\n                    required: true,\n                    placeholder: \"Company Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      background: \"#f8d7da\"\n                    },\n                    children: this.state.companyAddressError\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"ownerName\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Owner Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    name: \"ownerName\",\n                    required: true,\n                    placeholder: \"Owner Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      background: \"#f8d7da\"\n                    },\n                    children: this.state.ownerNameError\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"mainProduct\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Main Product\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    name: \"mainProduct\",\n                    required: true,\n                    placeholder: \"Main Product\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      background: \"#f8d7da\"\n                    },\n                    children: this.state.mainProduct\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"startDate\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"startDate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"date\",\n                    name: \"startDate\",\n                    required: true,\n                    placeholder: \"Start Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      background: \"#f8d7da\"\n                    },\n                    children: this.state.startDate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      backgroundColor: \"#7121AD\",\n                      color: \"white\"\n                    },\n                    variant: \"primary\",\n                    type: \"submit\",\n                    children: \"Add Factory Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: this.props.onHide,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/SuperAdmin/Modals/AddFactoryDetailsModal.jsx"],"names":["React","Component","Modal","Button","Row","Col","Form","FormGroup","Snackbar","IconButton","swal","Redirect","AddFactoryDetailsModal","constructor","props","snackbarClose","event","setState","snackbaropen","state","snackbarmsg","companyNameError","companyAddressError","ownerNameError","mainProductError","startDateError","handleSubmit","bind","preventDefault","isValid","validate","fetch","method","headers","body","JSON","stringify","companyName","target","value","companyAddress","ownerName","mainProduct","startDate","is_added","then","res","json","result","console","log","title","icon","button","setTimeout","window","location","reload","error","render","vertical","horizontal","background","backgroundColor","color","onHide"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport swal from 'sweetalert';\nimport { Redirect } from 'react-router-dom';\n\n\nexport class AddFactoryDetailsModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            snackbaropen: false, \n            snackbarmsg: '',\n            companyNameError:'', \n            companyAddressError:'',\n            ownerNameError:'',\n            mainProductError:'',\n            startDateError:''\n\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    snackbarClose = (event) => {\n        this.setState({ snackbaropen: false });\n    };\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const isValid = this.validate(event);\n            if(isValid){\n                fetch('http://localhost:5000/api/factory-details', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'username': 'chathura'\n                },\n                body: JSON.stringify({\n                    companyName: event.target.companyName.value,\n                    companyAddress: event.target.companyAddress.value,\n                    ownerName: event.target.ownerName.value,\n                    mainProduct: event.target.mainProduct.value,\n                    startDate: event.target.startDate.value,\n                    is_added:1\n                    // companyName: event.target.companyName.value,\n                    // companyName: event.target.companyName.value,\n                })\n            })\n                .then(res => res.json())\n                .then((result) => {\n                    console.log(result);\n                    swal({\n                        title: \"Factory Details Added Succesfully\",\n                        icon: \"success\",\n                        button: \"Done\",\n                    }); \n                    this.setState({\n                        companyNameError:'',\n                        companyAddressError:'',\n                        ownerNameError:'',\n                        mainProductError:'',\n                        startDateError:'',\n                    })\n                    setTimeout(function() {\n                        window.location.reload(); \n                      }.bind(this), 1500);\n                }, (error) => {\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\n                }\n\n                )\n        }\n    }\n\n    validate(event){\n        let companyNameError = \"\";\n        let companyAddressError = \"\";\n        let ownerNameError = \"\";\n        let mainProductError = \"\";\n        let startDateError = \"\";\n\n        if(!event.target.companyName.value){\n            companyNameError = \"Company Name  Cannot Be Blank\"\n        }\n        if(!event.target.companyAddress.value){\n            companyAddressError = \"Company Address  Cannot Be Blank\"\n        }\n        if(!event.target.ownerName.value){\n            ownerNameError = \"Owner Name  Cannot Be Blank\"\n        }\n        if(!event.target.mainProduct.value){\n            mainProductError = \"Main Product  Cannot Be Blank\"\n        }\n        if(!event.target.startDate.value){\n            startDateError = \"start Date  Cannot Be Blank\"\n        }\n\n        if(companyNameError || companyAddressError || ownerNameError || mainProductError || startDateError){\n            this.setState({\n                companyNameError:companyNameError,\n                companyAddressError:companyAddressError,\n                ownerNameError:ownerNameError,\n                mainProductError:mainProductError,\n                startDateError:startDateError,\n            })\n            return false;\n        }\n\n        return true;\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                    open={this.state.snackbaropen}\n                    autoHideDuration={6000}\n                    onClose={this.snackbarClose}\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\n                    action={[\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\n                    ]}\n                />\n                <Modal\n                    {...this.props}\n                    size=\"lg\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                //centered\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Add Factory Details\n              </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <Row>\n                            <Col sm={6}>\n                                <Form onSubmit={this.handleSubmit}>\n                                    <Form.Group controlId=\"companyName\">\n                                        <Form.Label>Company Name</Form.Label>\n                                        <Form.Control type=\"text\" name=\"companyName\" required placeholder=\"Company Name\" />\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.companyNameError}</div>\n                                    </Form.Group>\n                                    <Form.Group controlId=\"companyAddress\">\n                                        <Form.Label>Company Address</Form.Label>\n                                        <Form.Control type=\"text\" name=\"companyAddress\" required placeholder=\"Company Address\" />\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.companyAddressError}</div>\n                                    </Form.Group>\n                                    <Form.Group controlId=\"ownerName\">\n                                        <Form.Label>Owner Name</Form.Label>\n                                        <Form.Control type=\"text\" name=\"ownerName\" required placeholder=\"Owner Name\" />\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.ownerNameError}</div>\n                                    </Form.Group>\n                                    {/* <Form.Group controlId=\"companyLogo\">\n                                        <Form.Label>Company Logo</Form.Label>\n                                        <Form.Control type=\"file\" name=\"companyLogo\" required placeholder=\"Category Name\" />\n                                    </Form.Group> */}\n                                    <Form.Group controlId=\"mainProduct\">\n                                        <Form.Label>Main Product</Form.Label>\n                                        <Form.Control type=\"text\" name=\"mainProduct\" required placeholder=\"Main Product\" />\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.mainProduct}</div>\n                                    </Form.Group>\n                                    {/* <Form.Group controlId=\"br\">\n                                        <Form.Label>br</Form.Label>\n                                        <Form.Control type=\"file\" name=\"br\" required placeholder=\"Category Name\" />\n                                    </Form.Group> */}\n                                    <Form.Group controlId=\"startDate\">\n                                        <Form.Label>startDate</Form.Label>\n                                        <Form.Control type=\"date\" name=\"startDate\" required placeholder=\"Start Date\" />\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.startDate}</div>\n                                    </Form.Group>\n                                    <br />\n                                    <Form.Group>\n                                        <Button  style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\n                                            Add Factory Details\n                                        </Button>\n                                    </Form.Group>\n                                </Form>\n                            </Col>\n                        </Row>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}