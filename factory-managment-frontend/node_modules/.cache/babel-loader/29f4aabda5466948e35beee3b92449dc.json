{"ast":null,"code":"import { bisect } from \"d3-array\";\nimport { slice } from \"./array\";\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function (_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function (_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function (y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function () {\n    return threshold().domain(domain).range(range);\n  };\n\n  return scale;\n}","map":{"version":3,"sources":["/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/node_modules/d3-scale/src/threshold.js"],"names":["bisect","slice","threshold","domain","range","n","scale","x","_","arguments","length","call","Math","min","invertExtent","y","i","indexOf","copy"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,UAArB;AACA,SAAQC,KAAR,QAAoB,SAApB;AAEA,eAAe,SAASC,SAAT,GAAqB;AAClC,MAAIC,MAAM,GAAG,CAAC,GAAD,CAAb;AAAA,MACIC,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,CADZ;AAAA,MAEIC,CAAC,GAAG,CAFR;;AAIA,WAASC,KAAT,CAAeC,CAAf,EAAkB;AAChB,QAAIA,CAAC,IAAIA,CAAT,EAAY,OAAOH,KAAK,CAACJ,MAAM,CAACG,MAAD,EAASI,CAAT,EAAY,CAAZ,EAAeF,CAAf,CAAP,CAAZ;AACb;;AAEDC,EAAAA,KAAK,CAACH,MAAN,GAAe,UAASK,CAAT,EAAY;AACzB,WAAOC,SAAS,CAACC,MAAV,IAAoBP,MAAM,GAAGF,KAAK,CAACU,IAAN,CAAWH,CAAX,CAAT,EAAwBH,CAAC,GAAGO,IAAI,CAACC,GAAL,CAASV,MAAM,CAACO,MAAhB,EAAwBN,KAAK,CAACM,MAAN,GAAe,CAAvC,CAA5B,EAAuEJ,KAA3F,IAAoGH,MAAM,CAACF,KAAP,EAA3G;AACD,GAFD;;AAIAK,EAAAA,KAAK,CAACF,KAAN,GAAc,UAASI,CAAT,EAAY;AACxB,WAAOC,SAAS,CAACC,MAAV,IAAoBN,KAAK,GAAGH,KAAK,CAACU,IAAN,CAAWH,CAAX,CAAR,EAAuBH,CAAC,GAAGO,IAAI,CAACC,GAAL,CAASV,MAAM,CAACO,MAAhB,EAAwBN,KAAK,CAACM,MAAN,GAAe,CAAvC,CAA3B,EAAsEJ,KAA1F,IAAmGF,KAAK,CAACH,KAAN,EAA1G;AACD,GAFD;;AAIAK,EAAAA,KAAK,CAACQ,YAAN,GAAqB,UAASC,CAAT,EAAY;AAC/B,QAAIC,CAAC,GAAGZ,KAAK,CAACa,OAAN,CAAcF,CAAd,CAAR;AACA,WAAO,CAACZ,MAAM,CAACa,CAAC,GAAG,CAAL,CAAP,EAAgBb,MAAM,CAACa,CAAD,CAAtB,CAAP;AACD,GAHD;;AAKAV,EAAAA,KAAK,CAACY,IAAN,GAAa,YAAW;AACtB,WAAOhB,SAAS,GACXC,MADE,CACKA,MADL,EAEFC,KAFE,CAEIA,KAFJ,CAAP;AAGD,GAJD;;AAMA,SAAOE,KAAP;AACD","sourcesContent":["import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n"]},"metadata":{},"sourceType":"module"}