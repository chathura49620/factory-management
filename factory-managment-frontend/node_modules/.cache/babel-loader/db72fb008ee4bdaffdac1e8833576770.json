{"ast":null,"code":"var _jsxFileName = \"/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/FinanceTeamMember/Profit.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Table, Button, ButtonToolbar, Form } from 'react-bootstrap';\nimport { AddNewBillTypeModal } from '../../components/FinanceTeamMember/Modals/AddNewBillTypeModal';\nimport { SalariesTable } from \"../../components/FinanceTeamMember/Tables/SalariesTable\";\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Profit extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Salaries: '0',\n      bill: '0',\n      materialCost: '0',\n      totalProfit: 0,\n      graphdata: {\n        labels: ['January', 'February', 'March', 'April', 'May'],\n        datasets: [{\n          label: 'Profit',\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data: [150000, 200000, 160000, 250000, 3000000]\n        }]\n      },\n      addModalShow: false\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/api/material-cost/\").then(result => {\n      const materialCost = result.data;\n      materialCost.forEach(matCost => {\n        // this.setState({ materialCost: matCost.amount });\n        this.setState(prevState => ({\n          materialCost: parseFloat(prevState.materialCost) + parseFloat(matCost.amount)\n        }));\n      }); // console.log(this.state.materialCost);\n    }).catch(err => console.log(err.message));\n    axios.get(\"http://localhost:5000/api/temp-salaries/\").then(result => {\n      const Salaries = result.data;\n      Salaries.forEach(sal => {\n        this.setState(prevState => ({\n          Salaries: parseFloat(prevState.Salaries) + parseFloat(sal.amount)\n        }));\n      }); // console.log(this.state.Salaries);\n    }).catch(err => console.log(err.message));\n    axios.get(\"http://localhost:5000/api/bills\").then(result => {\n      const bill = result.data;\n      bill.forEach(bills => {\n        this.setState(prevState => ({\n          bill: parseFloat(prevState.bill) + parseFloat(bills.amount)\n        }));\n      }); // console.log(this.state.bill);\n    }).catch(err => console.log(err.message));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"heading\",\n              children: \"Profit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"heading\",\n              children: [\"Profit For the Last Month : Rs. \", this.state.Salaries + this.state.materialCost - this.state.bill, \"/= \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              data: this.state.graphdata,\n              options: {\n                title: {\n                  display: true,\n                  text: 'Average Rainfall per month',\n                  fontSize: 20\n                },\n                legend: {\n                  display: true,\n                  position: 'right'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default Profit;","map":{"version":3,"sources":["/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/FinanceTeamMember/Profit.jsx"],"names":["React","Component","axios","Table","Button","ButtonToolbar","Form","AddNewBillTypeModal","SalariesTable","Line","Profit","state","Salaries","bill","materialCost","totalProfit","graphdata","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","data","addModalShow","componentDidMount","get","then","result","forEach","matCost","setState","prevState","parseFloat","amount","catch","err","console","log","message","sal","bills","render","title","display","text","fontSize","legend","position"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Table, Button, ButtonToolbar, Form } from 'react-bootstrap';\nimport { AddNewBillTypeModal } from '../../components/FinanceTeamMember/Modals/AddNewBillTypeModal';\nimport {SalariesTable} from \"../../components/FinanceTeamMember/Tables/SalariesTable\";\nimport {Line} from 'react-chartjs-2';\n\n\nclass Profit extends Component {\n  state = {\n    Salaries: '0',\n    bill:'0',\n    materialCost:'0',\n    totalProfit: 0,\n    graphdata:{\n      labels: ['January', 'February', 'March',\n      'April', 'May'],\n      datasets: [\n      {\n        label: 'Profit',\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: [150000,200000,160000,250000,3000000]\n      }\n      ]\n    },\n    addModalShow: false \n  };\n\n  componentDidMount(){\n    axios\n      .get(\"http://localhost:5000/api/material-cost/\")\n      .then((result) => {\n        const materialCost = result.data;\n       \n        materialCost.forEach(matCost => {\n          // this.setState({ materialCost: matCost.amount });\n          this.setState(prevState => ({\n            materialCost: parseFloat(prevState.materialCost) + parseFloat(matCost.amount)\n          }));\n        });\n        // console.log(this.state.materialCost);\n      })  \n      .catch((err) => console.log(err.message));\n  \n      axios\n      .get(\"http://localhost:5000/api/temp-salaries/\")\n      .then((result) => {\n        const Salaries = result.data;\n        \n        Salaries.forEach(sal => {\n          this.setState(prevState => ({\n            Salaries: parseFloat(prevState.Salaries) + parseFloat(sal.amount)\n          }));\n        });\n        // console.log(this.state.Salaries);\n      })  \n      .catch((err) => console.log(err.message));\n\n      axios\n      .get(\"http://localhost:5000/api/bills\")\n      .then((result) => {\n        const bill = result.data;\n        bill.forEach(bills => {\n          this.setState(prevState => ({\n            bill: parseFloat(prevState.bill) + parseFloat(bills.amount)\n          }));\n        });\n        // console.log(this.state.bill);\n      })\n      .catch((err) => console.log(err.message));\n  }\n    \n\n  render() {\n    return (\n      <div>\n      <React.Fragment>\n      <div className=\"row\">\n          <div className=\"col-3\"></div>\n\n        <div className=\"col\">\n        <h1 className=\"heading\">Profit</h1>\n        \n        <div className=\"heading\">Profit For the Last Month : Rs. {(this.state.Salaries + this.state.materialCost) - this.state.bill}/= </div>\n\n        <Line\n          data={this.state.graphdata}\n          options={{\n            title:{\n              display:true,\n              text:'Average Rainfall per month',\n              fontSize:20\n            },\n            legend:{\n              display:true,\n              position:'right'\n            }\n          }}\n        />\n        </div>\n        </div>\n      </React.Fragment>\n      \n      </div>\n    );\n  }\n};\n\nexport default Profit;\n"]},"metadata":{},"sourceType":"module"}