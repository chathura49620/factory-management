{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}; // Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\nimport React from 'react';\nimport { generatePoints, getAxisAngle } from '../../utils/axis-utils';\n/**\n * Generate the actual polygons to be plotted\n * @param {Object} props\n - props.animation {Boolean}\n - props.axisDomain {Array} a pair of values specifying the domain of the axis\n - props.numberOfTicks{Number} the number of ticks on the axis\n - props.axisStart {Object} a object specify in cartesian space the start of the axis\n example: {x: 0, y: 0}\n - props.axisEnd {Object} a object specify in cartesian space the start of the axis\n - props.tickValue {Func} a formatting function for the tick values\n - props.tickSize {Number} a pixel size of the axis\n - props.style {Object} The style object for the axis\n * @return {Component} the plotted axis\n */\n\nexport default function decorativeAxisTick(props) {\n  var axisDomain = props.axisDomain,\n      numberOfTicks = props.numberOfTicks,\n      axisStart = props.axisStart,\n      axisEnd = props.axisEnd,\n      tickValue = props.tickValue,\n      tickSize = props.tickSize,\n      style = props.style;\n\n  var _generatePoints = generatePoints({\n    axisStart: axisStart,\n    axisEnd: axisEnd,\n    numberOfTicks: numberOfTicks,\n    axisDomain: axisDomain\n  }),\n      points = _generatePoints.points; // add a quarter rotation to make ticks orthogonal to axis\n\n\n  var tickAngle = getAxisAngle(axisStart, axisEnd) + Math.PI / 2;\n  return points.map(function (point, index) {\n    var tickProps = _extends({\n      x1: 0,\n      y1: 0,\n      x2: tickSize * Math.cos(tickAngle),\n      y2: tickSize * Math.sin(tickAngle)\n    }, style.ticks);\n\n    var textProps = _extends({\n      x: tickSize * Math.cos(tickAngle),\n      y: tickSize * Math.sin(tickAngle),\n      textAnchor: 'start'\n    }, style.text);\n\n    return React.createElement('g', {\n      key: index,\n      transform: 'translate(' + point.x + ', ' + point.y + ')',\n      className: 'rv-xy-plot__axis__tick'\n    }, React.createElement('line', _extends({}, tickProps, {\n      className: 'rv-xy-plot__axis__tick__line'\n    })), React.createElement('text', _extends({}, textProps, {\n      className: 'rv-xy-plot__axis__tick__text'\n    }), tickValue(point.text)));\n  });\n}","map":{"version":3,"sources":["C:/Users/thero/OneDrive/Documents/factory-management/factory-management/factory-managment-frontend/node_modules/react-vis/es/plot/axis/decorative-axis-ticks.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","React","generatePoints","getAxisAngle","decorativeAxisTick","props","axisDomain","numberOfTicks","axisStart","axisEnd","tickValue","tickSize","style","_generatePoints","points","tickAngle","Math","PI","map","point","index","tickProps","x1","y1","x2","cos","y2","sin","ticks","textProps","x","y","textAnchor","text","createElement","transform","className"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,SAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,SAAOL,MAAP;AAAgB,CAAhQ,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAOS,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,wBAA7C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAChD,MAAIC,UAAU,GAAGD,KAAK,CAACC,UAAvB;AAAA,MACIC,aAAa,GAAGF,KAAK,CAACE,aAD1B;AAAA,MAEIC,SAAS,GAAGH,KAAK,CAACG,SAFtB;AAAA,MAGIC,OAAO,GAAGJ,KAAK,CAACI,OAHpB;AAAA,MAIIC,SAAS,GAAGL,KAAK,CAACK,SAJtB;AAAA,MAKIC,QAAQ,GAAGN,KAAK,CAACM,QALrB;AAAA,MAMIC,KAAK,GAAGP,KAAK,CAACO,KANlB;;AAQA,MAAIC,eAAe,GAAGX,cAAc,CAAC;AACnCM,IAAAA,SAAS,EAAEA,SADwB;AAEnCC,IAAAA,OAAO,EAAEA,OAF0B;AAGnCF,IAAAA,aAAa,EAAEA,aAHoB;AAInCD,IAAAA,UAAU,EAAEA;AAJuB,GAAD,CAApC;AAAA,MAMIQ,MAAM,GAAGD,eAAe,CAACC,MAN7B,CATgD,CAgBhD;;;AAGA,MAAIC,SAAS,GAAGZ,YAAY,CAACK,SAAD,EAAYC,OAAZ,CAAZ,GAAmCO,IAAI,CAACC,EAAL,GAAU,CAA7D;AACA,SAAOH,MAAM,CAACI,GAAP,CAAW,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AACxC,QAAIC,SAAS,GAAGhC,QAAQ,CAAC;AACvBiC,MAAAA,EAAE,EAAE,CADmB;AAEvBC,MAAAA,EAAE,EAAE,CAFmB;AAGvBC,MAAAA,EAAE,EAAEb,QAAQ,GAAGK,IAAI,CAACS,GAAL,CAASV,SAAT,CAHQ;AAIvBW,MAAAA,EAAE,EAAEf,QAAQ,GAAGK,IAAI,CAACW,GAAL,CAASZ,SAAT;AAJQ,KAAD,EAKrBH,KAAK,CAACgB,KALe,CAAxB;;AAOA,QAAIC,SAAS,GAAGxC,QAAQ,CAAC;AACvByC,MAAAA,CAAC,EAAEnB,QAAQ,GAAGK,IAAI,CAACS,GAAL,CAASV,SAAT,CADS;AAEvBgB,MAAAA,CAAC,EAAEpB,QAAQ,GAAGK,IAAI,CAACW,GAAL,CAASZ,SAAT,CAFS;AAGvBiB,MAAAA,UAAU,EAAE;AAHW,KAAD,EAIrBpB,KAAK,CAACqB,IAJe,CAAxB;;AAKA,WAAOhC,KAAK,CAACiC,aAAN,CACL,GADK,EAEL;AACErC,MAAAA,GAAG,EAAEuB,KADP;AAEEe,MAAAA,SAAS,EAAE,eAAehB,KAAK,CAACW,CAArB,GAAyB,IAAzB,GAAgCX,KAAK,CAACY,CAAtC,GAA0C,GAFvD;AAGEK,MAAAA,SAAS,EAAE;AAHb,KAFK,EAOLnC,KAAK,CAACiC,aAAN,CAAoB,MAApB,EAA4B7C,QAAQ,CAAC,EAAD,EAAKgC,SAAL,EAAgB;AAAEe,MAAAA,SAAS,EAAE;AAAb,KAAhB,CAApC,CAPK,EAQLnC,KAAK,CAACiC,aAAN,CACE,MADF,EAEE7C,QAAQ,CAAC,EAAD,EAAKwC,SAAL,EAAgB;AAAEO,MAAAA,SAAS,EAAE;AAAb,KAAhB,CAFV,EAGE1B,SAAS,CAACS,KAAK,CAACc,IAAP,CAHX,CARK,CAAP;AAcD,GA3BM,CAAP;AA4BD","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React from 'react';\nimport { generatePoints, getAxisAngle } from '../../utils/axis-utils';\n\n/**\n * Generate the actual polygons to be plotted\n * @param {Object} props\n - props.animation {Boolean}\n - props.axisDomain {Array} a pair of values specifying the domain of the axis\n - props.numberOfTicks{Number} the number of ticks on the axis\n - props.axisStart {Object} a object specify in cartesian space the start of the axis\n example: {x: 0, y: 0}\n - props.axisEnd {Object} a object specify in cartesian space the start of the axis\n - props.tickValue {Func} a formatting function for the tick values\n - props.tickSize {Number} a pixel size of the axis\n - props.style {Object} The style object for the axis\n * @return {Component} the plotted axis\n */\nexport default function decorativeAxisTick(props) {\n  var axisDomain = props.axisDomain,\n      numberOfTicks = props.numberOfTicks,\n      axisStart = props.axisStart,\n      axisEnd = props.axisEnd,\n      tickValue = props.tickValue,\n      tickSize = props.tickSize,\n      style = props.style;\n\n  var _generatePoints = generatePoints({\n    axisStart: axisStart,\n    axisEnd: axisEnd,\n    numberOfTicks: numberOfTicks,\n    axisDomain: axisDomain\n  }),\n      points = _generatePoints.points;\n  // add a quarter rotation to make ticks orthogonal to axis\n\n\n  var tickAngle = getAxisAngle(axisStart, axisEnd) + Math.PI / 2;\n  return points.map(function (point, index) {\n    var tickProps = _extends({\n      x1: 0,\n      y1: 0,\n      x2: tickSize * Math.cos(tickAngle),\n      y2: tickSize * Math.sin(tickAngle)\n    }, style.ticks);\n\n    var textProps = _extends({\n      x: tickSize * Math.cos(tickAngle),\n      y: tickSize * Math.sin(tickAngle),\n      textAnchor: 'start'\n    }, style.text);\n    return React.createElement(\n      'g',\n      {\n        key: index,\n        transform: 'translate(' + point.x + ', ' + point.y + ')',\n        className: 'rv-xy-plot__axis__tick'\n      },\n      React.createElement('line', _extends({}, tickProps, { className: 'rv-xy-plot__axis__tick__line' })),\n      React.createElement(\n        'text',\n        _extends({}, textProps, { className: 'rv-xy-plot__axis__tick__text' }),\n        tickValue(point.text)\n      )\n    );\n  });\n}"]},"metadata":{},"sourceType":"module"}