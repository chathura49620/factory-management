{"ast":null,"code":"var _jsxFileName = \"/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/storeManager/reusables/formsuper.jsx\";\nimport React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Select from \"./select\";\nimport TextArea from \"./textarea\";\nimport Radio from \"./radio\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FormSuper extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = ({\n      currentTarget\n    }) => {\n      const errors = { ...this.state.errors\n      };\n      const errorMessage = this.validateProperty(currentTarget);\n      if (errorMessage) errors[currentTarget.name] = errorMessage;else delete errors[currentTarget.name];\n      const data = { ...this.state.data\n      };\n      data[currentTarget.name] = currentTarget.value;\n      this.setState({\n        data: data,\n        errors: errors\n      });\n    };\n\n    this.validateProperty = input => {\n      const obj = {\n        [input.name]: input.value\n      };\n      const schema = {\n        [input.name]: this.schema[input.name]\n      };\n      const {\n        error\n      } = Joi.validate(obj, schema);\n      return error ? error.details[0].message : null;\n    };\n\n    this.validate = () => {\n      const result = Joi.validate(this.state.data, this.schema, {\n        abortEarly: false\n      });\n      console.log(result);\n      if (!result.error) return null;\n      const errors = {};\n\n      for (let item of result.error.details) {\n        errors[item.path[0]] = item.message;\n      }\n\n      return errors;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const errors = this.validate();\n      console.log(errors);\n      this.setState({\n        errors: errors || {}\n      });\n      if (errors) return;\n      this.doSubmit();\n    };\n  }\n\n  renderButton(label) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn my-2\",\n      style: {\n        backgroundColor: \"#7121AD\",\n        color: \"white\"\n      },\n      type: \"submit\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderInput(name, label, type = \"text\") {\n    return /*#__PURE__*/_jsxDEV(Input, {\n      type: type,\n      name: name,\n      label: label,\n      value: this.state.data[name],\n      onChange: this.handleChange,\n      error: this.state.errors[name]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderTextArea(name, label) {\n    return /*#__PURE__*/_jsxDEV(TextArea, {\n      name: name,\n      label: label,\n      value: this.state.data[name],\n      onChange: this.handleChange,\n      error: this.state.errors[name]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderSelect(name, label, options) {\n    const {\n      data\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Select, {\n      name: name,\n      value: data[name],\n      label: label,\n      options: options,\n      onChange: this.handleChange,\n      error: this.state.errors[name]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FormSuper;","map":{"version":3,"sources":["/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/storeManager/reusables/formsuper.jsx"],"names":["React","Component","Joi","Input","Select","TextArea","Radio","FormSuper","handleChange","currentTarget","errors","state","errorMessage","validateProperty","name","data","value","setState","input","obj","schema","error","validate","details","message","result","abortEarly","console","log","item","path","handleSubmit","e","preventDefault","doSubmit","renderButton","label","backgroundColor","color","renderInput","type","renderTextArea","renderSelect","options"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\nimport TextArea from \"./textarea\";\r\nimport Radio from \"./radio\";\r\n\r\nclass FormSuper extends Component {\r\n  handleChange = ({ currentTarget }) => {\r\n    const errors = { ...this.state.errors };\r\n\r\n    const errorMessage = this.validateProperty(currentTarget);\r\n\r\n    if (errorMessage) errors[currentTarget.name] = errorMessage;\r\n    else delete errors[currentTarget.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[currentTarget.name] = currentTarget.value;\r\n    this.setState({ data: data, errors: errors });\r\n  };\r\n\r\n  validateProperty = (input) => {\r\n    const obj = { [input.name]: input.value };\r\n    const schema = { [input.name]: this.schema[input.name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  validate = () => {\r\n    const result = Joi.validate(this.state.data, this.schema, {\r\n      abortEarly: false,\r\n    });\r\n    console.log(result);\r\n    if (!result.error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of result.error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n    console.log(errors);\r\n    this.setState({ errors: errors || {} });\r\n\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button\r\n        className=\"btn my-2\"\r\n        style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n        type=\"submit\"\r\n      >\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        label={label}\r\n        value={this.state.data[name]}\r\n        onChange={this.handleChange}\r\n        error={this.state.errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderTextArea(name, label) {\r\n    return (\r\n      <TextArea\r\n        name={name}\r\n        label={label}\r\n        value={this.state.data[name]}\r\n        onChange={this.handleChange}\r\n        error={this.state.errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={this.state.errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormSuper;\r\n"]},"metadata":{},"sourceType":"module"}