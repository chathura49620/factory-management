{"ast":null,"code":"var _jsxFileName = \"/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/Modals/EditProductionRoundDetailsModal.jsx\";\nimport React, { Component } from \"react\";\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class EditProductionRoundDetailsModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.snackbarClose = event => {\n      this.setState({\n        snackbaropen: false\n      });\n    };\n\n    this.state = {\n      snackbaropen: false,\n      snackbarmsg: \"\",\n      categories: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/api/categories\").then(result => {\n      const categories = result.data;\n      this.setState({\n        categories: categories\n      });\n    }).catch(err => console.log(err.message));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    fetch(\"http://localhost:5000/api/newProRound-details\", {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        username: \"thiranya\"\n      },\n      body: JSON.stringify({\n        id: event.target.id.value,\n        productCategory: event.target.productCategory.value,\n        quantity: event.target.quantity.value,\n        esDays: event.target.esDays.value,\n        esEmployees: event.target.esEmployees.value\n      })\n    }).then(res => res.json()).then(result => {\n      swal({\n        title: \"Details Updated Succesfully\",\n        icon: \"success\",\n        button: \"Done\"\n      });\n      setTimeout(function () {\n        window.location.reload();\n      }.bind(this), 1500);\n    }, error => {\n      this.setState({\n        snackbaropen: true,\n        snackbarmsg: \"Failed\"\n      });\n    });\n  } //   handleSubmit = (event) => {\n  //       return <Redirect to='/login' />\n  //   }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        },\n        open: this.state.snackbaropen,\n        autoHideDuration: 6000,\n        onClose: this.snackbarClose,\n        message: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"message-id\",\n          children: this.state.snackbarmsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 20\n        }, this),\n        action: [/*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"Close\",\n          color: \"danger\",\n          onClick: this.snackbarClose\n        }, \"close\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, { ...this.props,\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\" //centered\n        ,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"contained-modal-title-vcenter\",\n            children: \"Update Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: this.handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    controlId: \"proId\",\n                    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      name: \"id\",\n                      required: true,\n                      placeholder: \"id\",\n                      defaultValue: this.props.id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Product Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    required: true,\n                    name: \"productCategory\",\n                    defaultValue: this.props.productCategory,\n                    children: this.state.categories.map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: i.categoryName\n                    }, i._id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"quantity\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Quntity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    name: \"quantity\",\n                    required: true,\n                    placeholder: \"Quntity\",\n                    defaultValue: this.props.quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"esDays\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Estimated Days\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    name: \"esDays\",\n                    required: true,\n                    placeholder: \"Estimated Days\",\n                    defaultValue: this.props.esDays\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"esEmployees\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Estimated Employees\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    name: \"esEmployees\",\n                    required: true,\n                    placeholder: \"Estimated Employees\",\n                    defaultValue: this.props.esEmployees\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    type: \"submit\",\n                    children: \"Update Production Round\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: this.props.onHide,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/Modals/EditProductionRoundDetailsModal.jsx"],"names":["React","Component","Modal","Button","Row","Col","Form","FormGroup","Snackbar","IconButton","swal","axios","Redirect","EditProductionRoundDetailsModal","constructor","props","snackbarClose","event","setState","snackbaropen","state","snackbarmsg","categories","handleSubmit","bind","componentDidMount","get","then","result","data","catch","err","console","log","message","preventDefault","fetch","method","headers","Accept","username","body","JSON","stringify","id","target","value","productCategory","quantity","esDays","esEmployees","res","json","title","icon","button","setTimeout","window","location","reload","error","render","vertical","horizontal","map","i","categoryName","_id","onHide"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nexport class EditProductionRoundDetailsModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { snackbaropen: false, snackbarmsg: \"\", categories: [] };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  snackbarClose = (event) => {\n    this.setState({ snackbaropen: false });\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/categories\")\n      .then((result) => {   \n        const categories = result.data;\n\n        this.setState({ categories: categories });\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    fetch(\"http://localhost:5000/api/newProRound-details\", {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        username: \"thiranya\",\n      },\n      body: JSON.stringify({\n        id: event.target.id.value,\n        productCategory: event.target.productCategory.value,\n        quantity: event.target.quantity.value,\n        esDays: event.target.esDays.value,\n        esEmployees: event.target.esEmployees.value,\n      }),\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          swal({\n            title: \"Details Updated Succesfully\",\n            icon: \"success\",\n            button: \"Done\",\n          });\n          setTimeout(\n            function () {\n              window.location.reload();\n            }.bind(this),\n            1500\n          );\n        },\n        (error) => {\n          this.setState({ snackbaropen: true, snackbarmsg: \"Failed\" });\n        }\n      );\n  }\n\n  //   handleSubmit = (event) => {\n\n  //       return <Redirect to='/login' />\n\n  //   }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={this.state.snackbaropen}\n          autoHideDuration={6000}\n          onClose={this.snackbarClose}\n          message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"danger\"\n              onClick={this.snackbarClose}\n            ></IconButton>,\n          ]}\n        />\n        <Modal\n          {...this.props}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          //centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              Update Details\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Row>\n              <Col sm={6}>\n                <Form onSubmit={this.handleSubmit}>\n                  <Form.Group>\n                    <Form.Group controlId=\"proId\">\n                      <Form.Control\n                        type=\"text\"\n                        name=\"id\"\n                        required\n                        placeholder=\"id\"\n                        defaultValue={this.props.id}\n                      />\n                    </Form.Group>\n                    <Form.Label>Product Category</Form.Label>\n                    <Form.Control\n                      as=\"select\"\n                      required\n                      name=\"productCategory\"\n                      defaultValue={this.props.productCategory}\n                    >\n                      {this.state.categories.map((i) => (\n                        <option key={i._id}>{i.categoryName}</option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                  <Form.Group controlId=\"quantity\">\n                    <Form.Label>Quntity</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"quantity\"\n                      required\n                      placeholder=\"Quntity\"\n                      defaultValue={this.props.quantity}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"esDays\">\n                    <Form.Label>Estimated Days</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"esDays\"\n                      required\n                      placeholder=\"Estimated Days\"\n                      defaultValue={this.props.esDays}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"esEmployees\">\n                    <Form.Label>Estimated Employees</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"esEmployees\"\n                      required\n                      placeholder=\"Estimated Employees\"\n                      defaultValue={this.props.esEmployees}\n                    />\n                  </Form.Group>\n                  <Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">\n                      Update Production Round\n                    </Button>\n                  </Form.Group>\n                </Form>\n              </Col>\n            </Row>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"danger\" onClick={this.props.onHide}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}