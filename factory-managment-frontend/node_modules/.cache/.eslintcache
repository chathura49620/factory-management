[{"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\index.js":"1","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\App.js":"2","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\Dashboard.jsx":"3","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\Employee\\Calendar.jsx":"4","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\Employee\\Assignments.jsx":"5","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\Employee\\Profile.jsx":"6","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\Employee\\Leave.jsx":"7","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\Employee\\Payments.jsx":"8","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\SuperAdmin\\Dashboard.jsx":"9","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\SuperAdmin\\UserRoles.jsx":"10","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\SuperAdmin\\BasicInfo.jsx":"11","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\SuperAdmin\\Categories.jsx":"12","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\SuperAdmin\\ProductCodes.jsx":"13","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\SuperAdmin\\UserList.jsx":"14","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\Employee\\EmployeeDashboard.jsx":"15","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\SuperAdmin\\MaterialCodes.jsx":"16","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\storeManager\\itemsrecords.jsx":"17","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\storeManager\\sm_dashboard.jsx":"18","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\storeManager\\myprofile.jsx":"19","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\storeManager\\items.jsx":"20","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\storeManager\\wasteditems.jsx":"21","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\storeManager\\itemrequests.jsx":"22","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\storeManager\\returnedproducts.jsx":"23","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\ProductionManager\\VIewNewProductionRound.jsx":"24","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\ProductionManager\\AddNewProductionRound.jsx":"25","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\ProductionManager\\ViewProductList.jsx":"26","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\ProductionManager\\AddPreviousProductionRound.jsx":"27","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\ProductionManager\\AddStockDetails.jsx":"28","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\ProductionManager\\VIewPreviousProductionRound.jsx":"29","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\ProductionManager\\ViewFeedback.jsx":"30","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\ProductionManager\\ViewOrderDetails.jsx":"31","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\ProductionManager\\ProManagerDashboard.jsx":"32","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\WholesaleBuyer\\wholesalBuyerDashboard.jsx":"33","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\WholesaleBuyer\\FeedbackPage.jsx":"34","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\SuperAdmin\\login.jsx":"35","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\WholesaleBuyer\\ReturnOrder.jsx":"36","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\WholesaleBuyer\\ViewPlacedOrderDetails.jsx":"37","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\WholesaleBuyer\\AddOrder.jsx":"38","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\FinanceTeamMember\\BillType.jsx":"39","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\FinanceTeamMember\\Dashboard.jsx":"40","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\FinanceTeamMember\\Salaries.jsx":"41","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\FinanceTeamMember\\Bills.jsx":"42","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\FinanceTeamMember\\MaterialCost.jsx":"43","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\FinanceTeamMember\\SalesReports.jsx":"44","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\FinanceTeamMember\\Profit.jsx":"45","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\WholesaleBuyer\\ViewStockDetails.jsx":"46","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\EmpsideNav\\EmpSidebar.jsx":"47","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\sideNav\\Sidebar.jsx":"48","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\sideNavigation\\Sidebar.jsx":"49","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\sideNav\\Sidebar.jsx":"50","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\ProManagersideNav\\EmpSidebar.jsx":"51","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\WholeSaleBuyer\\wholesaleBuyerSideNav\\EmpSidebar.jsx":"52","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\forms\\newreturnedproductform.jsx":"53","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\forms\\newitemform.jsx":"54","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\Employee\\UserHeader.js":"55","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\utills\\reportGenerator.js":"56","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\charts\\chart.js":"57","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\utills\\reportGeneratorAssignments.js":"58","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\FinanceTeamMember\\services\\GenarateSalesReport.js":"59","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\Modals\\AddAssignmentModal.jsx":"60","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\Tables\\AssignmentTable.jsx":"61","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\Modals\\EditAssignmentModal.jsx":"62","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\Tables\\LeaveTable.jsx":"63","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\Tables\\PaymentsTable.jsx":"64","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\Modals\\AddEventModal.jsx":"65","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\Modals\\AddEmployeeModal.jsx":"66","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\Modals\\AddPaymentsModal.jsx":"67","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\SuperAdmin\\clock.jsx":"68","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Modals\\AddFactoryDetailsModal.jsx":"69","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\WholeSaleBuyer\\common\\searchBox.jsx":"70","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\WholeSaleBuyer\\Tabales\\ProductStockTable.jsx":"71","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\Tables\\SalariesTable.jsx":"72","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\Tables\\MaterialCostTable.jsx":"73","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\Tables\\BillTables.jsx":"74","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\Modals\\AddNewBillTypeModal.jsx":"75","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\Modals\\AddNewMaterialCostBill.jsx":"76","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\Modals\\AddNewBillModal.jsx":"77","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\Common\\searchBox.jsx":"78","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\reusables\\listgroup.jsx":"79","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\reusables\\searchBox.jsx":"80","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\reusables\\formsuper.jsx":"81","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\tables\\itemcodestable.jsx":"82","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\WholeSaleBuyer\\wholesaleBuyerSideNav\\EmpSidebarData.js":"83","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\ProManagersideNav\\EmpSidebarData.js":"84","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\sideNav\\SidebarData.js":"85","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\WholeSaleBuyer\\wholesaleBuyerSideNav\\SubMenu.jsx":"86","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\ProManagersideNav\\SubMenu.jsx":"87","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\sideNavigation\\SidebarData.js":"88","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\sideNav\\SidebarData.js":"89","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\EmpsideNav\\EmpSidebarData.js":"90","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\sideNav\\SubMenu.jsx":"91","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\sideNavigation\\SubMenu.jsx":"92","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\sideNav\\SubMenu.jsx":"93","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\EmpsideNav\\SubMenu.jsx":"94","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\FinanceTeamMember\\clock.jsx":"95","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\Modals\\EditPaymentsModal.jsx":"96","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\Modals\\EditEmployeeModal.jsx":"97","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\WholeSaleBuyer\\util\\acceprtedreportGenerator.js":"98","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\util\\reportGenerator.js":"99","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\util\\acceprtedreportGenerator.js":"100","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\Modals\\EditMaterialCostBillModal.jsx":"101","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\Modals\\EditBillModal.jsx":"102","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\Tables\\BillTypesTable.jsx":"103","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\WholeSaleBuyer\\Tabales\\OrderDetailsTable.jsx":"104","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\common\\clock.jsx":"105","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\reusables\\radio.jsx":"106","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\reusables\\textarea.jsx":"107","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\reusables\\select.jsx":"108","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\reusables\\input.jsx":"109","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\Modals\\EditBillTypeModal.jsx":"110","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\WholeSaleBuyer\\Modals\\EditOrderDetailsMoadal.jsx":"111","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\common\\searchBox.jsx":"112","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\Tabales\\OrderDetailsTable.jsx":"113","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\Tabales\\FeedbackTable.jsx":"114","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\Tabales\\PreviousProductionRoundTable.jsx":"115","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\utils\\paginate.js":"116","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\utils\\reportGenerator.js":"117","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\Tabales\\ProductListTable.jsx":"118","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\Tabales\\ProductonRoundTable.jsx":"119","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\tables\\returnedproductstable.jsx":"120","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\forms\\editreturnedproductform.jsx":"121","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\reusables\\formpopup.jsx":"122","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\reusables\\selectsearch.jsx":"123","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\reusables\\dialogbox.jsx":"124","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\forms\\edititemrequestform.jsx":"125","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\tables\\table.jsx":"126","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\tables\\wasteditemtable.jsx":"127","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\forms\\editWastedItemForm.jsx":"128","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\forms\\itemrequestform.jsx":"129","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\forms\\newWastedItemForm.jsx":"130","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\forms\\edititemform.jsx":"131","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\reusables\\pagination.jsx":"132","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\forms\\newdeleteprofilefeedback.jsx":"133","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\tables\\itemrequeststable.jsx":"134","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\forms\\formprofileedit.jsx":"135","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\tables\\profileTable.jsx":"136","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\forms\\edititemrecordform.jsx":"137","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\reusables\\notice.jsx":"138","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\tables\\tableverticle.jsx":"139","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Modals\\AddMaterialCodeModal.jsx":"140","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Tables\\MaterialCodeTable.jsx":"141","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Modals\\AddNewUserModal.jsx":"142","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Tables\\RejectUsersTable.jsx":"143","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Tables\\ProductCodesTable.jsx":"144","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Tables\\UserListTable.jsx":"145","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Modals\\AddProductCodeModal.jsx":"146","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Tables\\CategoriesTable.jsx":"147","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Modals\\AddCategoryModal.jsx":"148","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Tables\\UserRolesTable.jsx":"149","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\Modals\\EditProductStockDetailsMoadal.jsx":"150","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\Modals\\EditPreviousProductionRoundDetailsModal.jsx":"151","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\Modals\\EditProductionRoundDetailsModal.jsx":"152","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Modals\\EditMaterialCodeModal.jsx":"153","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Modals\\EditProductCodeModal.jsx":"154","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Modals\\EditCategoryModal.jsx":"155"},{"size":386,"mtime":1633190825316,"results":"156","hashOfConfig":"157"},{"size":152,"mtime":1633190819259,"results":"158","hashOfConfig":"157"},{"size":13009,"mtime":1633190825320,"results":"159","hashOfConfig":"157"},{"size":2533,"mtime":1633190825412,"results":"160","hashOfConfig":"157"},{"size":3811,"mtime":1633200962960,"results":"161","hashOfConfig":"157"},{"size":11392,"mtime":1633190825433,"results":"162","hashOfConfig":"157"},{"size":3532,"mtime":1633200642515,"results":"163","hashOfConfig":"157"},{"size":3144,"mtime":1633201136904,"results":"164","hashOfConfig":"157"},{"size":9062,"mtime":1633190827807,"results":"165","hashOfConfig":"157"},{"size":2662,"mtime":1633190827814,"results":"166","hashOfConfig":"157"},{"size":5672,"mtime":1633190827803,"results":"167","hashOfConfig":"157"},{"size":2680,"mtime":1633190827805,"results":"168","hashOfConfig":"157"},{"size":2868,"mtime":1633190827811,"results":"169","hashOfConfig":"157"},{"size":2032,"mtime":1633190827813,"results":"170","hashOfConfig":"157"},{"size":5337,"mtime":1633190825414,"results":"171","hashOfConfig":"157"},{"size":2877,"mtime":1633190827809,"results":"172","hashOfConfig":"157"},{"size":8178,"mtime":1633190833331,"results":"173","hashOfConfig":"157"},{"size":8260,"mtime":1633190833335,"results":"174","hashOfConfig":"157"},{"size":5019,"mtime":1633190833333,"results":"175","hashOfConfig":"157"},{"size":10133,"mtime":1633190833328,"results":"176","hashOfConfig":"157"},{"size":9349,"mtime":1633190833337,"results":"177","hashOfConfig":"157"},{"size":4288,"mtime":1633190833294,"results":"178","hashOfConfig":"157"},{"size":9522,"mtime":1633190833334,"results":"179","hashOfConfig":"157"},{"size":2321,"mtime":1633190827789,"results":"180","hashOfConfig":"157"},{"size":7883,"mtime":1633190827717,"results":"181","hashOfConfig":"157"},{"size":1205,"mtime":1633190827799,"results":"182","hashOfConfig":"157"},{"size":6963,"mtime":1633190827764,"results":"183","hashOfConfig":"157"},{"size":6222,"mtime":1633190827783,"results":"184","hashOfConfig":"157"},{"size":2388,"mtime":1633190827792,"results":"185","hashOfConfig":"157"},{"size":1200,"mtime":1633190827794,"results":"186","hashOfConfig":"157"},{"size":2257,"mtime":1633190827797,"results":"187","hashOfConfig":"157"},{"size":6492,"mtime":1633190827786,"results":"188","hashOfConfig":"157"},{"size":6124,"mtime":1633190830905,"results":"189","hashOfConfig":"157"},{"size":4741,"mtime":1633190830402,"results":"190","hashOfConfig":"157"},{"size":4067,"mtime":1633190829532,"results":"191","hashOfConfig":"157"},{"size":4663,"mtime":1633190830870,"results":"192","hashOfConfig":"157"},{"size":2263,"mtime":1633190830882,"results":"193","hashOfConfig":"157"},{"size":7446,"mtime":1633190830393,"results":"194","hashOfConfig":"157"},{"size":1834,"mtime":1633190825727,"results":"195","hashOfConfig":"157"},{"size":8565,"mtime":1633190825733,"results":"196","hashOfConfig":"157"},{"size":1275,"mtime":1633190825845,"results":"197","hashOfConfig":"157"},{"size":2628,"mtime":1633190825730,"results":"198","hashOfConfig":"157"},{"size":2745,"mtime":1633190825839,"results":"199","hashOfConfig":"157"},{"size":8350,"mtime":1633190825846,"results":"200","hashOfConfig":"157"},{"size":3156,"mtime":1633190825843,"results":"201","hashOfConfig":"157"},{"size":2130,"mtime":1633190830890,"results":"202","hashOfConfig":"157"},{"size":1916,"mtime":1633190819382,"results":"203","hashOfConfig":"157"},{"size":1894,"mtime":1633190823729,"results":"204","hashOfConfig":"157"},{"size":1894,"mtime":1633190825011,"results":"205","hashOfConfig":"157"},{"size":1894,"mtime":1633190821546,"results":"206","hashOfConfig":"157"},{"size":1904,"mtime":1633190822329,"results":"207","hashOfConfig":"157"},{"size":1904,"mtime":1633190824328,"results":"208","hashOfConfig":"157"},{"size":4887,"mtime":1633190824586,"results":"209","hashOfConfig":"157"},{"size":5139,"mtime":1633190824582,"results":"210","hashOfConfig":"157"},{"size":973,"mtime":1633190825435,"results":"211","hashOfConfig":"157"},{"size":1390,"mtime":1633248151915,"results":"212","hashOfConfig":"157"},{"size":852,"mtime":1630997025950,"results":"213","hashOfConfig":"157"},{"size":1457,"mtime":1633190819995,"results":"214","hashOfConfig":"157"},{"size":1488,"mtime":1633190827699,"results":"215","hashOfConfig":"157"},{"size":6312,"mtime":1633201430981,"results":"216","hashOfConfig":"157"},{"size":3730,"mtime":1633190819986,"results":"217","hashOfConfig":"157"},{"size":5468,"mtime":1633201712986,"results":"218","hashOfConfig":"157"},{"size":3509,"mtime":1633190819988,"results":"219","hashOfConfig":"157"},{"size":3633,"mtime":1633190819990,"results":"220","hashOfConfig":"157"},{"size":2284,"mtime":1633190819969,"results":"221","hashOfConfig":"157"},{"size":6000,"mtime":1633200178180,"results":"222","hashOfConfig":"157"},{"size":7641,"mtime":1633201554295,"results":"223","hashOfConfig":"157"},{"size":541,"mtime":1633190828658,"results":"224","hashOfConfig":"157"},{"size":8922,"mtime":1633190823332,"results":"225","hashOfConfig":"157"},{"size":433,"mtime":1633190824295,"results":"226","hashOfConfig":"157"},{"size":1128,"mtime":1633190824144,"results":"227","hashOfConfig":"157"},{"size":927,"mtime":1633190821529,"results":"228","hashOfConfig":"157"},{"size":3300,"mtime":1633190821468,"results":"229","hashOfConfig":"157"},{"size":3230,"mtime":1633190821228,"results":"230","hashOfConfig":"157"},{"size":5228,"mtime":1633190820004,"results":"231","hashOfConfig":"157"},{"size":6765,"mtime":1633190820005,"results":"232","hashOfConfig":"157"},{"size":8132,"mtime":1633190820001,"results":"233","hashOfConfig":"157"},{"size":431,"mtime":1633190819998,"results":"234","hashOfConfig":"157"},{"size":602,"mtime":1633190824730,"results":"235","hashOfConfig":"157"},{"size":433,"mtime":1633190824847,"results":"236","hashOfConfig":"157"},{"size":2579,"mtime":1633190824728,"results":"237","hashOfConfig":"157"},{"size":646,"mtime":1633190825082,"results":"238","hashOfConfig":"157"},{"size":1640,"mtime":1633190824330,"results":"239","hashOfConfig":"157"},{"size":2176,"mtime":1633190822335,"results":"240","hashOfConfig":"157"},{"size":1696,"mtime":1633190821552,"results":"241","hashOfConfig":"157"},{"size":1673,"mtime":1633190824333,"results":"242","hashOfConfig":"157"},{"size":1667,"mtime":1633190822342,"results":"243","hashOfConfig":"157"},{"size":1535,"mtime":1633190825026,"results":"244","hashOfConfig":"157"},{"size":1712,"mtime":1633190823731,"results":"245","hashOfConfig":"157"},{"size":1488,"mtime":1633194150331,"results":"246","hashOfConfig":"157"},{"size":1668,"mtime":1633190821560,"results":"247","hashOfConfig":"157"},{"size":1668,"mtime":1633190825037,"results":"248","hashOfConfig":"157"},{"size":1668,"mtime":1633190823733,"results":"249","hashOfConfig":"157"},{"size":1667,"mtime":1633190819480,"results":"250","hashOfConfig":"157"},{"size":541,"mtime":1633190827683,"results":"251","hashOfConfig":"157"},{"size":5507,"mtime":1633201647614,"results":"252","hashOfConfig":"157"},{"size":5050,"mtime":1633201704117,"results":"253","hashOfConfig":"157"},{"size":1534,"mtime":1633190824296,"results":"254","hashOfConfig":"157"},{"size":1558,"mtime":1633190823328,"results":"255","hashOfConfig":"157"},{"size":1534,"mtime":1633190823323,"results":"256","hashOfConfig":"157"},{"size":5931,"mtime":1633190821019,"results":"257","hashOfConfig":"157"},{"size":6100,"mtime":1633190820007,"results":"258","hashOfConfig":"157"},{"size":2927,"mtime":1633190821234,"results":"259","hashOfConfig":"157"},{"size":4163,"mtime":1633190824012,"results":"260","hashOfConfig":"157"},{"size":541,"mtime":1633190823003,"results":"261","hashOfConfig":"157"},{"size":958,"mtime":1633190824846,"results":"262","hashOfConfig":"157"},{"size":693,"mtime":1633190824879,"results":"263","hashOfConfig":"157"},{"size":807,"mtime":1633190824848,"results":"264","hashOfConfig":"157"},{"size":686,"mtime":1633190824729,"results":"265","hashOfConfig":"157"},{"size":4611,"mtime":1633190820010,"results":"266","hashOfConfig":"157"},{"size":5654,"mtime":1633190824010,"results":"267","hashOfConfig":"157"},{"size":433,"mtime":1633190823004,"results":"268","hashOfConfig":"157"},{"size":4186,"mtime":1633190822994,"results":"269","hashOfConfig":"157"},{"size":945,"mtime":1633190822993,"results":"270","hashOfConfig":"157"},{"size":4366,"mtime":1633190822995,"results":"271","hashOfConfig":"157"},{"size":712,"mtime":1633190825112,"results":"272","hashOfConfig":"157"},{"size":1455,"mtime":1633190825114,"results":"273","hashOfConfig":"157"},{"size":969,"mtime":1633190822999,"results":"274","hashOfConfig":"157"},{"size":4136,"mtime":1633190823002,"results":"275","hashOfConfig":"157"},{"size":2096,"mtime":1633190825099,"results":"276","hashOfConfig":"157"},{"size":3577,"mtime":1633190824471,"results":"277","hashOfConfig":"157"},{"size":1456,"mtime":1633190824672,"results":"278","hashOfConfig":"157"},{"size":645,"mtime":1633190824878,"results":"279","hashOfConfig":"157"},{"size":1018,"mtime":1633190824671,"results":"280","hashOfConfig":"157"},{"size":3391,"mtime":1633190824470,"results":"281","hashOfConfig":"157"},{"size":2258,"mtime":1633190825102,"results":"282","hashOfConfig":"157"},{"size":2088,"mtime":1633190825105,"results":"283","hashOfConfig":"157"},{"size":3704,"mtime":1633190824350,"results":"284","hashOfConfig":"157"},{"size":3246,"mtime":1633190824475,"results":"285","hashOfConfig":"157"},{"size":2117,"mtime":1633190824570,"results":"286","hashOfConfig":"157"},{"size":3373,"mtime":1633190824351,"results":"287","hashOfConfig":"157"},{"size":1005,"mtime":1633190824844,"results":"288","hashOfConfig":"157"},{"size":1351,"mtime":1633190824578,"results":"289","hashOfConfig":"157"},{"size":2139,"mtime":1633190825084,"results":"290","hashOfConfig":"157"},{"size":3335,"mtime":1633190824472,"results":"291","hashOfConfig":"157"},{"size":3136,"mtime":1633190825097,"results":"292","hashOfConfig":"157"},{"size":4003,"mtime":1633190824380,"results":"293","hashOfConfig":"157"},{"size":610,"mtime":1633190824732,"results":"294","hashOfConfig":"157"},{"size":2961,"mtime":1633190825104,"results":"295","hashOfConfig":"157"},{"size":6183,"mtime":1633190823333,"results":"296","hashOfConfig":"157"},{"size":3110,"mtime":1633190823346,"results":"297","hashOfConfig":"157"},{"size":6810,"mtime":1633190823335,"results":"298","hashOfConfig":"157"},{"size":1023,"mtime":1633190823349,"results":"299","hashOfConfig":"157"},{"size":3123,"mtime":1633190823348,"results":"300","hashOfConfig":"157"},{"size":958,"mtime":1633190823350,"results":"301","hashOfConfig":"157"},{"size":6861,"mtime":1633190823336,"results":"302","hashOfConfig":"157"},{"size":2930,"mtime":1633190823345,"results":"303","hashOfConfig":"157"},{"size":5219,"mtime":1633190823331,"results":"304","hashOfConfig":"157"},{"size":747,"mtime":1633190823352,"results":"305","hashOfConfig":"157"},{"size":4688,"mtime":1633190822305,"results":"306","hashOfConfig":"157"},{"size":5161,"mtime":1633190821911,"results":"307","hashOfConfig":"157"},{"size":5841,"mtime":1633190822322,"results":"308","hashOfConfig":"157"},{"size":5298,"mtime":1633190823339,"results":"309","hashOfConfig":"157"},{"size":5827,"mtime":1633190823342,"results":"310","hashOfConfig":"157"},{"size":4603,"mtime":1633190823338,"results":"311","hashOfConfig":"157"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},"1e0og56",{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"314"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"314"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"314"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"314"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"314"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"314"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"314"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"314"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"314"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"314"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"314"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"314"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"314"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"314"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"371","usedDeprecatedRules":"314"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"374","usedDeprecatedRules":"314"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"314"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"380","usedDeprecatedRules":"314"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"314"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"386","usedDeprecatedRules":"314"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"389","usedDeprecatedRules":"314"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"314"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"314"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"314"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"314"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"314"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"407","usedDeprecatedRules":"314"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"314"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"413","usedDeprecatedRules":"314"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"314"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"419","usedDeprecatedRules":"314"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"314"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"314"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"314"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"314"},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"314"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"314"},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"314"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"314"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"314"},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"314"},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"314"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"314"},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"314"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"314"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"314"},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"314"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"314"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"314"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"314"},{"filePath":"479","messages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"314"},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"314"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"314"},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"314"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"314"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"314"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"314"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"506","usedDeprecatedRules":"314"},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"314"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"512","messages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514","usedDeprecatedRules":"314"},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"517","usedDeprecatedRules":"314"},{"filePath":"518","messages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"520","usedDeprecatedRules":"314"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"523","usedDeprecatedRules":"314"},{"filePath":"524","messages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"526","usedDeprecatedRules":"314"},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"529","usedDeprecatedRules":"314"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"314"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"314"},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"314"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"314"},{"filePath":"542","messages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"314"},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"549","messages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"555","messages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557","usedDeprecatedRules":"314"},{"filePath":"558","messages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"560","messages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562","usedDeprecatedRules":"314"},{"filePath":"563","messages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"569","messages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"314"},{"filePath":"576","messages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"314"},{"filePath":"579","messages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"314"},{"filePath":"582","messages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"314"},{"filePath":"585","messages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"314"},{"filePath":"587","messages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"314"},{"filePath":"590","messages":"591","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592","usedDeprecatedRules":"314"},{"filePath":"593","messages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"595","usedDeprecatedRules":"314"},{"filePath":"596","messages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"598","usedDeprecatedRules":"314"},{"filePath":"599","messages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"601","messages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"314"},{"filePath":"604","messages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"314"},{"filePath":"607","messages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"314"},{"filePath":"610","messages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"314"},{"filePath":"613","messages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"615","usedDeprecatedRules":"314"},{"filePath":"616","messages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"618","usedDeprecatedRules":"314"},{"filePath":"619","messages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"314"},{"filePath":"621","messages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"623","usedDeprecatedRules":"314"},{"filePath":"624","messages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"626","messages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"628","usedDeprecatedRules":"314"},{"filePath":"629","messages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"631","messages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"633","messages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"637","usedDeprecatedRules":"314"},{"filePath":"638","messages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"640","usedDeprecatedRules":"314"},{"filePath":"641","messages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"314"},{"filePath":"644","messages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"646","usedDeprecatedRules":"314"},{"filePath":"647","messages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"649","usedDeprecatedRules":"314"},{"filePath":"650","messages":"651","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652","usedDeprecatedRules":"314"},{"filePath":"653","messages":"654","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"655","usedDeprecatedRules":"314"},{"filePath":"656","messages":"657","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"658","usedDeprecatedRules":"314"},{"filePath":"659","messages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"661","usedDeprecatedRules":"314"},{"filePath":"662","messages":"663","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"664","usedDeprecatedRules":"314"},{"filePath":"665","messages":"666","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"667","usedDeprecatedRules":"314"},{"filePath":"668","messages":"669","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"670","usedDeprecatedRules":"314"},{"filePath":"671","messages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"673","usedDeprecatedRules":"314"},{"filePath":"674","messages":"675","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"676","usedDeprecatedRules":"314"},{"filePath":"677","messages":"678","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679","usedDeprecatedRules":"314"},{"filePath":"680","messages":"681","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682","usedDeprecatedRules":"314"},{"filePath":"683","messages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"685","usedDeprecatedRules":"314"},{"filePath":"686","messages":"687","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"688","usedDeprecatedRules":"314"},{"filePath":"689","messages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"691","usedDeprecatedRules":"314"},{"filePath":"692","messages":"693","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"694","usedDeprecatedRules":"314"},{"filePath":"695","messages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"697","usedDeprecatedRules":"314"},{"filePath":"698","messages":"699","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"700","usedDeprecatedRules":"314"},{"filePath":"701","messages":"702","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"703","usedDeprecatedRules":"314"},{"filePath":"704","messages":"705","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"706","usedDeprecatedRules":"314"},{"filePath":"707","messages":"708","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"709","messages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"711","usedDeprecatedRules":"314"},{"filePath":"712","messages":"713","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"714","messages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"716","usedDeprecatedRules":"314"},{"filePath":"717","messages":"718","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"719","usedDeprecatedRules":"314"},{"filePath":"720","messages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"722","usedDeprecatedRules":"314"},{"filePath":"723","messages":"724","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"725","usedDeprecatedRules":"314"},{"filePath":"726","messages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"728","usedDeprecatedRules":"314"},{"filePath":"729","messages":"730","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"731","usedDeprecatedRules":"314"},{"filePath":"732","messages":"733","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"734","usedDeprecatedRules":"314"},{"filePath":"735","messages":"736","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"737","usedDeprecatedRules":"314"},{"filePath":"738","messages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"740","usedDeprecatedRules":"314"},{"filePath":"741","messages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"743","usedDeprecatedRules":"314"},"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\index.js",[],["744","745"],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\App.js",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\Dashboard.jsx",["746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761"],"import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport SuperAdminSideNav from '../components/SuperAdmin/sideNav/Sidebar';\r\n// import EmpsideNav from '../components/Employee/EmpsideNav/EmpSidebar';\r\n// import ProManagerNav from '../components/ProductionManager/ProManagersideNav/EmpSidebar';\r\nimport FinanceTeamMemberSideNav from '../components/FinanceTeamMember/sideNav/Sidebar';\r\n\r\n// import ProductionManagerDashboard from './ProductionManager/ProManagerDashboard'\r\n \r\n// import Sidebar from \"../components/storeManagerComponents/sideNavigation/Sidebar\";\r\n \r\n\r\nimport SuperAdminDashboard from './SuperAdmin/Dashboard'\r\n// import EmployeeDashboard from './Employee/EmployeeDashboard'\r\n \r\n//super admin routers\r\nimport BasicInfo from './SuperAdmin/BasicInfo';\r\nimport UserRoles from './SuperAdmin/UserRoles';\r\nimport UserList from './SuperAdmin/UserList';\r\nimport Categories from './SuperAdmin/Categories';   \r\nimport ProductCodes from './SuperAdmin/ProductCodes';\r\nimport MaterialCodes from './SuperAdmin/MaterialCodes';\r\nimport  login  from './SuperAdmin/login';\r\n\r\nimport EmployeeSideNav from '../components/Employee/EmpsideNav/EmpSidebar';\r\n\r\n// //employee routes\r\nimport EmployeeDashboard from './Employee/EmployeeDashboard';\r\nimport Assignments from './Employee/Assignments';\r\nimport Calendar from './Employee/Calendar';\r\nimport Leave from './Employee/Leave';\r\nimport Payments from './Employee/Payments';\r\nimport Profile from './Employee/Profile';\r\n\r\n\r\n\r\nimport Sidebar from \"../components/storeManager/sideNavigation/Sidebar\";\r\n\r\n//stock manager routers\r\nimport SMDashBoard from \"./storeManager/sm_dashboard\";\r\nimport NewItemForm from \"../components/storeManager/forms/newitemform\";\r\nimport ItemRecord from \"./storeManager/itemsrecords\";\r\nimport MyProfile from \"./storeManager/myprofile\";\r\nimport Item from \"./storeManager/items\";\r\nimport WastedItem from \"./storeManager/wasteditems\";\r\nimport ReturnedProduct from \"./storeManager/returnedproducts\";\r\nimport NewReturnedProductForm from \"./../components/storeManager/forms/newreturnedproductform\";\r\nimport ItemRequest from \"./storeManager/itemrequests\";\r\n\r\n\r\n//production manager routes\r\nimport AddNewProductionRound from \"./ProductionManager/AddNewProductionRound\";\r\nimport VIewNewProductionRound from \"./ProductionManager/VIewNewProductionRound\";\r\nimport ViewProductList from \"./ProductionManager/ViewProductList\";\r\nimport AddPreviousProductionRound from \"./ProductionManager/AddPreviousProductionRound\";\r\nimport VIewPreviousProductionRound from \"./ProductionManager/VIewPreviousProductionRound\";\r\nimport AddStockDetails from \"./ProductionManager/AddStockDetails\";\r\nimport ViewOrderDetails from \"./ProductionManager/ViewOrderDetails\";\r\nimport ViewFeedback from \"./ProductionManager/ViewFeedback\";\r\n\r\n//wholesale buyer routes\r\nimport WholesaleDashboard from \"./WholesaleBuyer/wholesalBuyerDashboard\";\r\nimport FeedbackPage from \"./WholesaleBuyer/FeedbackPage\";\r\nimport ViewStockDetails from \"./WholesaleBuyer/ViewStockDetails\";\r\nimport ReturnOrder from \"./WholesaleBuyer/ReturnOrder\";\r\nimport ViewPlacedOrderDetails from \"./WholesaleBuyer/ViewPlacedOrderDetails\";\r\nimport AddOrder from \"./WholesaleBuyer/AddOrder\";\r\n\r\n\r\n//finance team member routers\r\nimport BillType from \"./FinanceTeamMember/BillType\";\r\nimport FinancialAdminDashboard from \"./FinanceTeamMember/Dashboard\";\r\nimport Salaries from \"./FinanceTeamMember/Salaries\";\r\nimport Bills from \"./FinanceTeamMember/Bills\";\r\nimport MaterialCost from \"./FinanceTeamMember/MaterialCost\";\r\nimport SalesReports from \"./FinanceTeamMember/SalesReports\";\r\nimport Profit from \"./FinanceTeamMember/Profit\";\r\n\r\nimport ProManagerNav from \"../components/ProductionManager/ProManagersideNav/EmpSidebar\";\r\nimport WholesaleBuyerNav from \"../components/WholeSaleBuyer/wholesaleBuyerSideNav/EmpSidebar\";\r\n\r\nimport ProductionManagerDashboard from \"./ProductionManager/ProManagerDashboard\";\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);   \r\n        this.state = {\r\n            superAdmin: false\r\n        }\r\n        this.renderSideNavigation = this.renderSideNavigation.bind(this);\r\n        this.renderDashboard = this.renderDashboard.bind(this);\r\n    }\r\n\r\n    renderSideNavigation(){\r\n        const user_role = localStorage.getItem('user_role');\r\n        const is_login = localStorage.getItem('is_login');\r\n        if(is_login != '1'){\r\n                return false;\r\n        }else{\r\n            if(user_role == 'employee'){\r\n                return (\r\n                    <EmployeeSideNav />\r\n                );\r\n            }\r\n            if(user_role == 'stock member'){\r\n                return (\r\n                    <Sidebar />\r\n                );\r\n            }\r\n            if(user_role == 'production team member'){\r\n                return (\r\n                    <ProManagerNav />\r\n                );\r\n            }\r\n            if(user_role == 'Super Admin'){\r\n                return (\r\n                    <SuperAdminSideNav/> \r\n                );\r\n            }\r\n            if(user_role == 'finance team member'){\r\n                return (\r\n                    <FinanceTeamMemberSideNav/>   \r\n                );\r\n            }\r\n            if(user_role == 'Whole Sale Buyer'){\r\n                return (\r\n                    <WholesaleBuyerNav/>   \r\n                );\r\n            }\r\n            else{\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderDashboard(){\r\n        const user_role = localStorage.getItem('user_role')\r\n        const is_login = localStorage.getItem('is_login')\r\n        if(is_login != '1'){\r\n            return (\r\n                <div>\r\n                    <Route path= '/' exact component={login} />\r\n                </div>\r\n            );\r\n        }else{\r\n            if(user_role == 'employee'){\r\n                return (\r\n                    <div>\r\n                        <Route path=\"/myprofile\" component={MyProfile}></Route>\r\n                        <Route path= '/' exact component={EmployeeDashboard} />\r\n                        <Route path= '/assignments' exact component={Assignments}/>\r\n                        <Route path=\"/calendar\" exact component={Calendar}/>\r\n                        <Route path= '/profile' exact component={Profile}/>\r\n                        <Route path= '/payments' exact component={Payments}/>\r\n                        <Route path= '/leave' exact component={Leave}/>\r\n                    </div>\r\n                );\r\n            }\r\n            if(user_role == 'Super Admin'){\r\n                return (\r\n                    <div>\r\n                        <Route path=\"/myprofile\" component={MyProfile}></Route>\r\n                        <Route path='/' exact component={SuperAdminDashboard} />\r\n                        <Route path='/basic-info' exact component={BasicInfo} />\r\n                        <Route path='/user-roles' exact component={UserRoles} />\r\n                        <Route path='/user-list' exact component={UserList} />\r\n                        <Route path='/categories' exact component={Categories} />\r\n                        <Route path='/product-codes' exact component={ProductCodes} />\r\n                        <Route path='/metirial-codes' exact component={MaterialCodes} />\r\n                    </div>\r\n                );\r\n                }\r\n                if(user_role == 'finance team member'){\r\n                    return (\r\n                        <div>\r\n                            <Route path=\"/myprofile\" component={MyProfile}></Route>\r\n                            <Route path='/' exact component={FinancialAdminDashboard} />\r\n                            <Route path='/salaries' exact component={Salaries} />\r\n                            <Route path='/sales-reports' exact component={SalesReports} />\r\n                            <Route path='/profits' exact component={Profit} />\r\n                            <Route path='/material-cost' exact component={MaterialCost} />\r\n                            <Route path='/bill-types' exact component={BillType} />\r\n                            <Route path='/bills' exact component={Bills} />\r\n                           \r\n                        </div>\r\n                    ); \r\n                }\r\n                if(user_role == 'production team member'){\r\n                return (\r\n                    <div>\r\n                        <div>\r\n                        <Route path=\"/myprofile\" component={MyProfile}></Route>\r\n                        <Route path=\"/\" exact component={ProductionManagerDashboard} />\r\n                        <Route\r\n                            path=\"/add-new-production-round\"\r\n                            exact\r\n                            component={AddNewProductionRound}\r\n                        />\r\n                        <Route\r\n                            path=\"/view-production-rounds\"\r\n                            exact\r\n                            component={VIewNewProductionRound}\r\n                        />\r\n                        <Route\r\n                            path=\"/add-pre-production-round\"\r\n                            exact\r\n                            component={AddPreviousProductionRound}\r\n                        />\r\n                        <Route\r\n                            path=\"/view-preproduction-rounds\"\r\n                            exact\r\n                            component={VIewPreviousProductionRound}\r\n                        />\r\n                        <Route\r\n                            path=\"/view-product-list\"\r\n                            exact\r\n                            component={ViewProductList}\r\n                        />\r\n                        <Route\r\n                            path=\"/add-stock-details\"\r\n                            exact\r\n                            component={AddStockDetails}\r\n                        />\r\n                        <Route\r\n                            path=\"/view-order-details\"\r\n                            exact\r\n                            component={ViewOrderDetails}\r\n                        />\r\n                        <Route path=\"/view-feedback\" exact component={ViewFeedback} />\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }if(user_role == 'stock member'){\r\n                return (\r\n                    <div>\r\n                        <div>\r\n                        <Route path=\"/\" exact component={SMDashBoard}></Route>\r\n                        <Route path=\"/myprofile\" component={MyProfile}></Route>\r\n                        <Route\r\n                            path=\"/it/new/myItem\"\r\n                            exact\r\n                            component={NewItemForm}\r\n                        ></Route>\r\n                        <Route\r\n                            path=\"/it/new/product/returned\"\r\n                            exact\r\n                            component={NewReturnedProductForm}\r\n                        ></Route>\r\n                        <Route path=\"/items/:id\" component={NewItemForm}></Route>\r\n                        <Route path=\"/it/new/wasted/item\" component={WastedItem} />\r\n                        <Route\r\n                            path=\"/it/new/returned/product\"\r\n                            component={ReturnedProduct}\r\n                        />\r\n                        <Route path=\"/requests/for/items\" component={ItemRequest}></Route>\r\n                        <Route path=\"/items\" component={Item}></Route>\r\n                        <Route path=\"/itemsrecords\" component={ItemRecord}></Route>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }if(user_role == 'Whole Sale Buyer'){\r\n                return (\r\n                    <div>\r\n                        <div>\r\n                        <Route path=\"/myprofile\" component={MyProfile}></Route>\r\n                        <Route path= '/' exact component={ProductionManagerDashboard}/>\r\n                        <Route path=\"/\" exact component={WholesaleDashboard} />\r\n                        <Route path=\"/add-order\" exact component={ViewStockDetails} />\r\n                        <Route path=\"/add-order-details\" exact component={AddOrder} />\r\n                        <Route path=\"/add-feedback\" exact component={FeedbackPage} />\r\n                        <Route path=\"/return-order\" exact component={ReturnOrder} />\r\n                        <Route\r\n                            path=\"/placed-order\"\r\n                            exact\r\n                            component={ViewPlacedOrderDetails}\r\n                        />\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            else{\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n       return(\r\n           <div>\r\n                 {this.renderSideNavigation()}\r\n                 {this.renderDashboard()}\r\n           </div> \r\n       );\r\n    }\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\Employee\\Calendar.jsx",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\Employee\\Assignments.jsx",["762","763","764","765"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AddAssignmentModal } from \"../../components/Employee/Modals/AddAssignmentModal\";\r\nimport { EditAssignmentModal } from \"../../components/Employee/Modals/EditAssignmentModal\";\r\nimport { AssignmentTable } from \"../../components/Employee/Tables/AssignmentTable\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport { computeStyles } from \"@popperjs/core\";\r\nimport \"./styles.css\"\r\nimport assignmentpic from \"../../pages/assets/assignmentpic.jpg\"\r\nimport generatePDF from \"../../components/Employee/utills/reportGeneratorAssignments\";\r\nimport SearchBox from \"../../components/FinanceTeamMember/Common/searchBox\";\r\n\r\n\r\nclass Assignment extends Component {\r\n  state = {\r\n    Assignment: [],\r\n    addModalShow: false,\r\n    editModelShow: false,\r\n    empass:{}, \r\n    id: \"\",\r\n    searchQuery: \"\"\r\n  };\r\n  \r\n  componentDidMount()  {\r\n\r\n    axios\r\n      .get(\"http://localhost:5000/api/assignment-details\")\r\n      .then((result) => {\r\n        const Assignment = result.data;\r\n        console.log(Assignment);\r\n\r\n        this.setState({ Assignment: Assignment });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n    });\r\n  };\r\n\r\n  filteredData() {\r\n    const { searchQuery, Assignment } = this.state;\r\n\r\n    let filtered = [];\r\n\r\n    if (searchQuery) {\r\n      filtered = Assignment.filter((r) =>\r\n        r.supervisor.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else {\r\n      filtered = Assignment;\r\n    }\r\n    return filtered;\r\n  }\r\n\r\n\r\nsetNewDetails = (assignment) => {  \r\n  \r\n  this.setState({addModalShow: true, empass: assignment});\r\n\r\n}\r\n\r\nsetEditPopup = (assignment) => {\r\n\r\n  console.log(assignment);\r\n  this.setState({editModelShow: true, empass: assignment});\r\n\r\n}\r\n\r\nhandleAssignmentDelete = (assignment) => {\r\n  // console.log(\"Delete\");\r\n  const Assignment = this.state.Assignment.filter(l => l._id !== assignment._id );\r\n  this.setState({Assignment:Assignment});\r\n\r\n}\r\n\r\n  render(){\r\n    let filtered = this.filteredData();\r\n    let AddModelClose = () => this.setState({ addModalShow: false })\r\n  return (\r\n    <React.Fragment>\r\n\r\n        <br></br>\r\n\r\n        <h2 className=\"heading\">My Submitted Assignments</h2>\r\n\r\n        <div className=\"center\">\r\n            <img src={assignmentpic} alt=\"assignmentpic\"/>\r\n         </div>\r\n\r\n          <ButtonToolbar>\r\n                    <button style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                    className=\"btn btn-lg\"\r\n                    onClick={() => this.setState({ addModalShow: true })}\r\n                    >Add a Complete Assignment \r\n                    </button>\r\n                    <AddAssignmentModal\r\n                        show={this.state.addModalShow}\r\n                        onHide={AddModelClose}\r\n                        \r\n                    />\r\n          </ButtonToolbar>\r\n\r\n            <br></br>\r\n\r\n            <ButtonToolbar>\r\n              <button \r\n                  style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                  className=\"btn btn-lg\"\r\n                  onClick={() => generatePDF(this.state.Assignment)}> \r\n                        Generate Monthly Report\r\n              </button>\r\n        </ButtonToolbar>\r\n\r\n        <br></br>\r\n\r\n        <div className=\"col-md-5\">\r\n                <SearchBox onChange={this.handleSearch} placeHolder=\"Search by Supervisor...\" />\r\n            </div>\r\n\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-1\"></div>\r\n              <div className=\"col\">\r\n            <AssignmentTable filteredItems={filtered}  />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n  );\r\n  }\r\n};\r\n\r\nexport default Assignment;","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\Employee\\Profile.jsx",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\Employee\\Leave.jsx",["766"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AddEmployeeModal } from \"../../components/Employee/Modals/AddEmployeeModal\";\r\nimport { LeaveTable } from \"../../components/Employee/Tables/LeaveTable\";\r\nimport { ButtonToolbar } from 'react-bootstrap';\r\nimport leavepic from \"../../pages/assets/leavepic.jpg\"\r\nimport \"./styles.css\"\r\nimport generatePDF from \"../../components/Employee/utills/reportGenerator\";\r\nimport SearchBox from \"../../components/FinanceTeamMember/Common/searchBox\";\r\n\r\nclass Leave extends Component {\r\n  state = {\r\n    Leave: [],\r\n    addModalShow: false,\r\n    editModelShow: false,\r\n    empLeave:{}, \r\n    id: \"\",\r\n    searchQuery: \"\"\r\n  };\r\n\r\n  componentDidMount()  {\r\n\r\n    axios\r\n      .get(\"http://localhost:5000/api/leave-details\")\r\n      .then((result) => {\r\n        const Leave = result.data;\r\n        console.log(Leave);\r\n\r\n        this.setState({ Leave: Leave });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n    });\r\n  };\r\n\r\n  filteredData() {\r\n    const { searchQuery, Leave } = this.state;\r\n\r\n    let filtered = [];\r\n\r\n    if (searchQuery) {\r\n      filtered = Leave.filter((r) =>\r\n        r.refno.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else {\r\n      filtered = Leave;\r\n    }\r\n    return filtered;\r\n  }\r\n\r\n\r\nsetNewDetails = (leave) => {\r\n  this.setState({addModalShow: true, empLeave: leave});\r\n}\r\n\r\nsetEditPopup = (leave) => {\r\n\r\n  console.log(leave);\r\n  this.setState({editModelShow: true, empLeave: leave});\r\n\r\n}\r\n\r\nhandleLeaveDelete = (leave) => {\r\n  // console.log(\"Delete\");\r\n  const Leave = this.state.Leave.filter(l => l._id !== leave._id );\r\n  this.setState({Leave:Leave});\r\n}\r\n\r\n\r\n\r\n  render(){\r\n    let filtered = this.filteredData();\r\n    let AddModelClose = () => this.setState({ addModalShow: false })\r\n    const {Leave} = this.state;\r\n  return (\r\n    <React.Fragment>\r\n\r\n        \r\n\r\n        <br></br>\r\n        <h2 className=\"heading\">My Leave Requests</h2>\r\n\r\n        <div className=\"center\">\r\n            <img src={leavepic} alt=\"leavepic\"/>\r\n         </div>\r\n        \r\n        <ButtonToolbar>\r\n                    <button style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                            className=\"btn btn-lg\"\r\n                            onClick={() => this.setState({ addModalShow: true })}\r\n                    >       Add your Leave Request\r\n                    </button>\r\n                    <AddEmployeeModal\r\n                        show={this.state.addModalShow}\r\n                        onHide={AddModelClose}\r\n                        \r\n                    />\r\n        </ButtonToolbar>\r\n        <br></br>\r\n\r\n\r\n        <ButtonToolbar>\r\n              <button \r\n                  style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                  className=\"btn btn-lg\"\r\n                  onClick={() => generatePDF(this.state.Leave)}> \r\n                        Generate Monthly Report\r\n              </button>\r\n        </ButtonToolbar>\r\n            <br></br>\r\n\r\n            <div className=\"col-md-5\">\r\n                <SearchBox onChange={this.handleSearch} placeHolder=\"Search by Reference Number...\" />\r\n            </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-1\"></div>\r\n              <div className=\"col\">\r\n            <LeaveTable filteredItems={filtered}  />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n  );\r\n  }\r\n};\r\n\r\nexport default Leave;","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\Employee\\Payments.jsx",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\SuperAdmin\\Dashboard.jsx",["767","768","769","770","771","772"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport Chart from \"../charts/chart\";\r\nimport \"./dashboard.css\";\r\nimport hello from \"../assets/hello.png\";\r\nimport clock from \"../assets/clock.png\";\r\nimport { AddFactoryDetailsModal } from '../../components/SuperAdmin/Modals/AddFactoryDetailsModal';\r\nimport Clock from \"./clock\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n   \r\nclass Dashboard extends Component {    \r\n  state = {\r\n    factoryDetails: [],\r\n    category:[],\r\n    matCode:[],\r\n    proCode:[],\r\n    users:[],\r\n    user_name:'',\r\n    addModalShow: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n    .get(\"http://localhost:5000/api/factory-details\")\r\n    .then((result) => {\r\n      const factoryDetails = result.data;\r\n\r\n      this.setState({ factoryDetails: factoryDetails });\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n\r\n    const user_name = localStorage.getItem(\"user_full_name\");\r\n    this.setState({ user_name: user_name });\r\n   \r\n    axios\r\n    .get(\"http://localhost:5000/api/categories\")\r\n    .then((result) => {\r\n      const category = result.data;\r\n\r\n      this.setState({ category: category });\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n\r\n    axios\r\n    .get(\"http://localhost:5000/api/meterial-code\")\r\n    .then((result) => {\r\n      const matCode = result.data;\r\n\r\n      this.setState({ matCode: matCode });\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n   \r\n    axios\r\n    .get(\"http://localhost:5000/api/product-code\")\r\n    .then((result) => {\r\n      const proCode = result.data;\r\n\r\n      this.setState({ proCode: proCode });\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n\r\n    axios\r\n    .get(\"http://localhost:5000/users\")\r\n    .then((result) => {\r\n      const users = result.data;\r\n\r\n      this.setState({ users: users });\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n\r\n  }\r\n\r\n   \r\n  logout(){\r\n    localStorage.removeItem('user_full_name');\r\n    localStorage.removeItem('user_email');\r\n    localStorage.removeItem('is_login');\r\n    window.location.reload();\r\n  }\r\n\r\n  genarateUserReport(){\r\n    const doc = new jsPDF();\r\n    const tableColumn = [ \"fullName\", \"email\", \"contact\", \"userRole\"];\r\n    const tableRows = [];\r\n    axios\r\n    .get(\"http://localhost:5000/api/users\")\r\n    .then((result) => {\r\n      const User = result.data;\r\n            User.forEach(ticket => {\r\n              const ticketData = [\r\n                ticket.fullName,\r\n                ticket.email,\r\n                ticket.contact,\r\n                ticket.userRole,\r\n                // called date-fns to format the date on the ticket\r\n              //   format(new Date(), \"yyyy-MM-dd\")\r\n              ];\r\n              // push each tickcet's info into a row\r\n              tableRows.push(ticketData);\r\n              \r\n            });\r\n            // startY is basically margin-top\r\n            doc.autoTable(tableColumn, tableRows, { startY: 20 });\r\n            const date = Date().split(\" \");\r\n            // we use a date string to generate our filename.\r\n            const dateStr = date[0] + date[1] + date[2] + date[3] + date[4];\r\n            // ticket title. and margin-top + margin-left\r\n            doc.text(\"User List \", 14, 15);\r\n            // we define the name of our PDF file.\r\n            doc.save(`report_user_list.pdf`);\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n  }\r\n\r\n\r\n  genarateCostReport(){\r\n    const doc = new jsPDF();\r\n    const tableColumn = [ \"matirial Code\", \"matirial BillNo\", \"date\", \"amount\"];\r\n    const tableRows = [];\r\n    axios\r\n    .get(\"http://localhost:5000/api/material-cost/\")\r\n    .then((result) => {\r\n      const matCost = result.data;\r\n            matCost.forEach(ticket => {\r\n              const ticketData = [\r\n                ticket.matirialCode,\r\n                ticket.matirialBillNo,\r\n                ticket.date,\r\n                ticket.amount,\r\n                // called date-fns to format the date on the ticket\r\n              //   format(new Date(), \"yyyy-MM-dd\")\r\n              ];\r\n              // push each tickcet's info into a row\r\n              tableRows.push(ticketData);\r\n              \r\n            });\r\n            // startY is basically margin-top\r\n            doc.autoTable(tableColumn, tableRows, { startY: 20 });\r\n            const date = Date().split(\" \");\r\n            // we use a date string to generate our filename.\r\n            \r\n            // ticket title. and margin-top + margin-left\r\n            doc.text(\"Material Cost Report \", 14, 15);\r\n            // we define the name of our PDF file.\r\n            doc.save(`report_cost.pdf`);\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n  }\r\n \r\n  render() {\r\n    let AddModelClose = () => this.setState({ addModalShow: false })\r\n    return (\r\n      <React.Fragment>\r\n           <ButtonToolbar>\r\n                    <AddFactoryDetailsModal\r\n                        show={this.state.addModalShow && this.state.factoryDetails.length == 0}\r\n                        onHide={AddModelClose}\r\n                    />\r\n          </ButtonToolbar>\r\n          <main>\r\n            <div className=\"main__container\">\r\n              {/* <!-- MAIN TITLE STARTS HERE --> */}\r\n\r\n              <div className=\"main__title\">\r\n              <img src={hello} alt=\"hello\" />\r\n                <div className=\"main__greeting\">\r\n                  <h1>Hello, {this.state.user_name}</h1>\r\n                  <p>Welcome to your profile.</p>\r\n                </div>\r\n                <button style={{ backgroundColor: \"#7121AD\", color: \"white\" ,width:\"100px\"}} onClick={this.logout}>Log Out</button>\r\n              </div>\r\n\r\n              <div className=\"charts\">\r\n                <div className=\"charts__left\">\r\n                  <div className=\"charts__left__title\">\r\n                    <div>\r\n                      <h1>Date and Time</h1>\r\n                    </div>\r\n                    <i className=\"fa fa-usd\" aria-hidden=\"true\"></i>\r\n                  </div>\r\n                  <div className=\"row mt-5\">\r\n                    <div className=\"col-md-6\">\r\n                      <img src={clock} alt=\"clock\" />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <Clock />\r\n                    </div>\r\n                  </div>\r\n                 \r\n                </div>\r\n\r\n                <div className=\"charts__right\">\r\n                  <div className=\"charts__right__title\">\r\n                    <div>\r\n                      <h1>Report Genaration</h1>\r\n                    </div>\r\n                    <i className=\"fa fa-usd\" aria-hidden=\"true\"></i>\r\n                  </div>\r\n\r\n                  <div className=\"charts__right__cards\">\r\n              \r\n                      <div className=\"card2\">\r\n                      <button onClick={() => this.genarateUserReport()}>User Report</button>\r\n                    </div>\r\n                     \r\n                     \r\n                        <div className=\"card3\">\r\n                        <button onClick={() => this.genarateCostReport()}>Cost Report</button>\r\n                        </div>\r\n                       \r\n                  \r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* <!-- MAIN TITLE ENDS HERE --> */}\r\n\r\n              {/* <!-- MAIN CARDS STARTS HERE --> */}\r\n              <div className=\"main__cards\">\r\n\r\n                \r\n                <div className=\"carda\">\r\n                  <div className=\"card_inner\">\r\n                    <p className=\"text-primary-p\">Number of Users</p>\r\n                    <span className=\"font-bold text-title\">{this.state.users.length}</span>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"cardd\">\r\n                  <div className=\"card_inner\">\r\n                    <p className=\"text-primary-p\">No of Categories</p>\r\n                    <span className=\"font-bold text-title\">{this.state.category.length}</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"carda\">\r\n                  <div className=\"card_inner\">\r\n                    <p className=\"text-primary-p\">Number of Product Codes</p>\r\n                    <span className=\"font-bold text-title\">{this.state.proCode.length}</span>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"cardd\">\r\n                  <div className=\"card_inner\">\r\n                    <p className=\"text-primary-p\">No of Metirial Codes</p>\r\n                    <span className=\"font-bold text-title\">{this.state.matCode.length}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* <!-- MAIN CARDS ENDS HERE --> */}\r\n\r\n              {/* <!-- CHARTS STARTS HERE --> */}\r\n              \r\n              {/* <!-- CHARTS ENDS HERE --> */}\r\n            </div>\r\n          </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\SuperAdmin\\UserRoles.jsx",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\SuperAdmin\\BasicInfo.jsx",["773","774","775","776"],"import React, { Component } from \"react\";\r\n\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport axios from \"axios\";\r\nimport \"./styles.css\";\r\nimport BillsImg from \"./assert/img12.jpeg\";\r\n\r\n\r\nclass BasicInfo extends Component  {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { snackbaropen: false, snackbarmsg: '',  factoryDetails: [], };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n}  \r\n\r\n  componentDidMount() { \r\n    axios\r\n    .get(\"http://localhost:5000/api/factory-details\")  \r\n    .then((result) => {\r\n      const factoryDetails = result.data;\r\n      console.log(factoryDetails)\r\n  \r\n      this.setState({ factoryDetails: factoryDetails });\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  handleSubmit(event, props) {\r\n    event.preventDefault();\r\n    //alert(event.target.name.value);\r\n\r\n    fetch('http://localhost:5000/api/factory-details', {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'username': 'chathura'\r\n        },\r\n        body: JSON.stringify({\r\n            id: event.target.id.value,\r\n            companyName: event.target.companyName.value,\r\n            companyAddress: event.target.companyAddress.value,\r\n            ownerName: event.target.ownerName.value,\r\n            mainProduct: event.target.mainProduct.value,\r\n            startDate: event.target.startDate.value,\r\n            is_added:1\r\n        })\r\n    })\r\n        .then(res => res.json())\r\n        .then((result) => {\r\n            swal({\r\n                title: \"Factory Details Updated Succesfully\",\r\n                icon: \"success\",\r\n                button: \"Done\",\r\n              });\r\n        }, (error) => {\r\n            this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n        }\r\n\r\n        )\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n         <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n\r\n        <div className=\"col\">\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <h1 className=\"heading\">Basic Info</h1>\r\n            <div className=\"center\">\r\n              <img src={BillsImg} alt=\"billsPic\" />\r\n            </div>\r\n            {this.state.factoryDetails.map((i) => (\r\n            <Form onSubmit={this.handleSubmit}  key={i._id}>\r\n                                      <Form.Group controlId=\"id\">\r\n                                        {/* <Form.Label>ID</Form.Label> */}\r\n                                        <Form.Control type=\"text\" name=\"id\" required disabled defaultValue={i._id} hidden/>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"companyName\">\r\n                                        <Form.Label>Company Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"companyName\" required placeholder=\"Company Name\" defaultValue={i.companyName} />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"companyAddress\">\r\n                                        <Form.Label>Company Address</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"companyAddress\" required placeholder=\"Company Address\" defaultValue={i.companyAddress} />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"ownerName\">\r\n                                        <Form.Label>Owner Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"ownerName\" required placeholder=\"Owner Name\" defaultValue={i.ownerName} />\r\n                                    </Form.Group>\r\n                                    {/* <Form.Group controlId=\"companyLogo\">\r\n                                        <Form.Label>Company Logo</Form.Label>\r\n                                        <Form.Control type=\"file\" name=\"companyLogo\" required placeholder=\"Category Name\" />\r\n                                    </Form.Group> */}\r\n                                    <Form.Group controlId=\"mainProduct\">\r\n                                        <Form.Label>Main Product</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"mainProduct\" required placeholder=\"Main Product\" defaultValue={i.mainProduct} />\r\n                                    </Form.Group>\r\n                                    {/* <Form.Group controlId=\"br\">\r\n                                        <Form.Label>br</Form.Label>\r\n                                        <Form.Control type=\"file\" name=\"br\" required placeholder=\"Category Name\" />\r\n                                    </Form.Group> */}\r\n                                    <Form.Group controlId=\"startDate\">\r\n                                        <Form.Label>startDate</Form.Label>\r\n                                        <Form.Control type=\"date\" name=\"startDate\" required placeholder=\"Start Date\" defaultValue={i.startDate} />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Button  variant=\"primary\" type=\"submit\" >\r\n                                            Update Factory Details\r\n                                        </Button>\r\n                                    </Form.Group>\r\n              </Form>\r\n            ))}\r\n          </div>\r\n\r\n          \r\n\r\n          </div>\r\n        </div>\r\n        </div>\r\n        \r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default BasicInfo;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\SuperAdmin\\Categories.jsx",["777"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport { AddCategoryModal } from '../../components/SuperAdmin/Modals/AddCategoryModal';\r\nimport {CategoriesTable} from \"../../components/SuperAdmin/Tables/CategoriesTable\";\r\nimport SearchBox from \"../../components/FinanceTeamMember/Common/searchBox\";\r\nimport \"./styles.css\";\r\nimport BillsImg from \"./assert/img11.jpeg\";\r\n\r\n\r\nclass Categories extends Component {\r\n  state = {\r\n    categories: [],\r\n    searchQuery: \"\",\r\n    addModalShow: false\r\n  };    \r\n    \r\n  componentDidMount() { \r\n    axios\r\n      .get(\"http://localhost:5000/api/categories\")\r\n      .then((result) => {\r\n        const categories = result.data;\r\n\r\n        this.setState({ categories: categories });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n  handleSearch = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n    });\r\n  };\r\n\r\n  filteredData() {\r\n    const { searchQuery, categories } = this.state;\r\n\r\n    let filtered = [];\r\n\r\n    if (searchQuery) {\r\n      filtered = categories.filter((r) =>\r\n        r.categoryName.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else {\r\n      filtered = categories;\r\n    }\r\n\r\n    return filtered;\r\n  }\r\n\r\n  render() {\r\n    let filtered = this.filteredData();\r\n    let AddModelClose = () => this.setState({ addModalShow: false })\r\n    return (\r\n      <React.Fragment>\r\n         <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n\r\n        <div className=\"col\">\r\n        <h1 className=\"heading\">Categories</h1>\r\n            <div className=\"center\">\r\n              <img src={BillsImg} alt=\"billsPic\" />\r\n            </div>\r\n        <ButtonToolbar>\r\n                    <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                    className=\"btn btn-lg\"\r\n                        onClick={() => this.setState({ addModalShow: true })}\r\n                    >Add Category\r\n                    </Button>\r\n                    <AddCategoryModal\r\n                        show={this.state.addModalShow}\r\n                        onHide={AddModelClose}\r\n                    />\r\n          </ButtonToolbar>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n                <SearchBox onChange={this.handleSearch} placeHolder=\"Search\" />\r\n            </div>\r\n            <div className=\"col-md-3\"></div>\r\n        </div>\r\n            <CategoriesTable filteredItems={filtered} />\r\n      </div>\r\n      </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Categories;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\SuperAdmin\\ProductCodes.jsx",["778"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport { AddProductCodeModal } from '../../components/SuperAdmin/Modals/AddProductCodeModal';\r\nimport {ProductCodesTable} from \"../../components/SuperAdmin/Tables/ProductCodesTable\";\r\nimport SearchBox from \"../../components/FinanceTeamMember/Common/searchBox\";  \r\nimport \"./styles.css\";\r\nimport BillsImg from \"./assert/img9.jpeg\";\r\n\r\n\r\nclass ProductCodes extends Component {   \r\n  state = {\r\n    ProductCodes: [],\r\n    searchQuery: \"\",\r\n    addModalShow: false\r\n  };\r\n\r\n  \r\n    \r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/product-code\")\r\n      .then((result) => {\r\n        const ProductCodes = result.data;\r\n\r\n        this.setState({ ProductCodes: ProductCodes });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n  handleSearch = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n    });\r\n  };\r\n\r\n  filteredData() {\r\n    const { searchQuery, ProductCodes } = this.state;\r\n\r\n    let filtered = [];\r\n\r\n    if (searchQuery) {\r\n      filtered = ProductCodes.filter((r) =>\r\n        r.productCategory.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else {\r\n      filtered = ProductCodes;\r\n    }\r\n\r\n    return filtered;\r\n  }\r\n\r\n  render(){\r\n    let filtered = this.filteredData();\r\n    let AddModelClose = () => this.setState({ addModalShow: false })\r\n  return (\r\n    <React.Fragment>\r\n       <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n\r\n        <div className=\"col\">\r\n        <h1 className=\"heading\">Product Codes</h1>\r\n        <div className=\"center\">\r\n              <img src={BillsImg} alt=\"billsPic\" />\r\n            </div>\r\n        <ButtonToolbar>\r\n                    <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                    className=\"btn btn-lg\"\r\n                        onClick={() => this.setState({ addModalShow: true })}\r\n                    >Add Product Code\r\n                    </Button>\r\n                    <AddProductCodeModal\r\n                        show={this.state.addModalShow}\r\n                        onHide={AddModelClose}\r\n                    />\r\n        </ButtonToolbar>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n                <SearchBox onChange={this.handleSearch} placeHolder=\"Search\" />\r\n            </div>\r\n            <div className=\"col-md-3\"></div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-1\"></div>\r\n          <div className=\"col\">\r\n            <ProductCodesTable filteredItems={filtered} />\r\n          </div>\r\n        </div> \r\n        </div>\r\n        </div>\r\n      </React.Fragment>\r\n      \r\n  );\r\n  }\r\n}; \r\n  \r\nexport default ProductCodes;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\SuperAdmin\\UserList.jsx",["779","780"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport UserListTable from \"../../components/SuperAdmin/Tables/UserListTable\";\r\nimport AddNewUserModal from \"../../components/SuperAdmin/Modals/AddNewUserModal\";\r\nimport RejectUsersTable from \"../../components/SuperAdmin/Tables/RejectUsersTable\";\r\nimport \"./styles.css\";\r\nimport BillsImg from \"./assert/img8.jpeg\";\r\n\r\n\r\nclass UserList extends Component {\r\n  state = {\r\n    Users: [],\r\n    addModalShow: false,\r\n  };\r\n \r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/users\")\r\n      .then((result) => {\r\n        const Users = result.data;\r\n\r\n        this.setState({ Users: Users });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  render(){\r\n    let AddModelClose = () => this.setState({ addModalShow: false })\r\n    \r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n\r\n        <div className=\"col\">\r\n         <h1 className=\"heading\">User Lists</h1>\r\n         <div className=\"center\">\r\n              <img src={BillsImg} alt=\"billsPic\" />\r\n            </div>\r\n         <ButtonToolbar>\r\n                    <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                    className=\"btn btn-lg\"\r\n                        onClick={() => this.setState({ addModalShow: true })}\r\n                    >Add User\r\n                    </Button>\r\n                    <AddNewUserModal\r\n                        show={this.state.addModalShow}\r\n                        onHide={AddModelClose}\r\n                    />\r\n          </ButtonToolbar>\r\n          <div className=\"row\">\r\n            <div className=\"col-1\"></div>\r\n            <div className=\"col\">\r\n            <h1>User List</h1>\r\n              <UserListTable filteredItems={this.state.Users} />\r\n            </div>\r\n          </div>\r\n          </div>\r\n          </div>\r\n      </React.Fragment>\r\n  );\r\n  }\r\n};\r\n\r\nexport default UserList;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\Employee\\EmployeeDashboard.jsx",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\SuperAdmin\\MaterialCodes.jsx",["781"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport { AddMaterialCodeModal } from '../../components/SuperAdmin/Modals/AddMaterialCodeModal';\r\nimport {MaterialCodeTable} from \"../../components/SuperAdmin/Tables/MaterialCodeTable\";\r\nimport SearchBox from \"../../components/FinanceTeamMember/Common/searchBox\";  \r\nimport \"./styles.css\";\r\nimport BillsImg from \"./assert/img10.jpeg\";\r\n\r\nclass MaterialCodes extends Component {\r\n  state = {\r\n    MaterialCodes: [],\r\n    searchQuery: \"\",\r\n    addModalShow: false\r\n  }; \r\n      \r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/meterial-code\")\r\n      .then((result) => {\r\n        const MaterialCodes = result.data;\r\n\r\n        this.setState({ MaterialCodes: MaterialCodes });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n  handleSearch = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n    });\r\n  };\r\n\r\n  filteredData() {\r\n    const { searchQuery, MaterialCodes } = this.state;\r\n\r\n    let filtered = [];\r\n\r\n    if (searchQuery) {\r\n      filtered = MaterialCodes.filter((r) =>\r\n        r.materialName.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else {\r\n      filtered = MaterialCodes;\r\n    }\r\n\r\n    return filtered;\r\n  }\r\n    \r\n  render(){\r\n    let filtered = this.filteredData();\r\n    let AddModelClose = () => this.setState({ addModalShow: false })\r\n  return (\r\n    <React.Fragment>\r\n       <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n\r\n        <div className=\"col\">\r\n        <h1 className=\"heading\">Material Codes</h1>\r\n        <div className=\"center\">\r\n              <img src={BillsImg} alt=\"billsPic\" />\r\n            </div>\r\n        <ButtonToolbar>\r\n                    <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                    className=\"btn btn-lg\"\r\n                        onClick={() => this.setState({ addModalShow: true })}\r\n                    >Add Material Code\r\n                    </Button>\r\n                    <AddMaterialCodeModal\r\n                        show={this.state.addModalShow}\r\n                        onHide={AddModelClose}\r\n                    />\r\n          </ButtonToolbar>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n                <SearchBox onChange={this.handleSearch} placeHolder=\"Search\" />\r\n            </div>\r\n            <div className=\"col-md-3\"></div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-1\"></div>\r\n          <div className=\"col\">\r\n            <MaterialCodeTable filteredItems={filtered} />\r\n          </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n      </React.Fragment>\r\n  );\r\n  }   \r\n};\r\n     \r\nexport default MaterialCodes;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\storeManager\\itemsrecords.jsx",["782","783","784","785","786","787","788"],"import React, { Component } from \"react\";\r\nimport TableVertilcle from \"../../components/storeManager/tables/tableverticle\";\r\nimport SearchBox from \"../../components/storeManager/reusables/searchBox\";\r\nimport axios from \"axios\";\r\nimport { result } from \"lodash\";\r\nimport DialogBox from \"../../components/storeManager/reusables/dialogbox\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Notice from \"../../components/storeManager/reusables/notice\";\r\nimport { Link } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport Pagination from \"../../components/storeManager/reusables/pagination\";\r\nimport { paginate } from \"../../components/storeManager/utils/paginate\";\r\nimport FormPopup from \"../../components/storeManager/reusables/formpopup\";\r\nimport EditItemRecordForm from \"../../components/storeManager/forms/edititemrecordform\";\r\nimport generatePDF from \"./../../components/storeManager/utils/reportGenerator\";\r\nimport userPic from \"../../pages/assets/Product hunt-cuate.svg\";\r\n\r\nclass ItemRecord extends Component {\r\n  state = {\r\n    itemRecords: [],\r\n    searchQuery: \"\",\r\n    previousSearch: \"\",\r\n    showTaskDialog: false,\r\n    wannaDeleteRecord: {},\r\n    currentPage: 1,\r\n    pageSize: 1,\r\n    openPopup: false,\r\n    itemRecord: {},\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  setOpenPopup = (id) => {\r\n    const { itemRecords } = this.state;\r\n    const records = itemRecords.filter((record) => record._id === id);\r\n    const editRecord = records[0];\r\n\r\n    console.log(editRecord);\r\n\r\n    this.setState({ openPopup: true, itemRecord: editRecord });\r\n  };\r\n\r\n  closeOpenPopup = () => {\r\n    this.setState({ openPopup: false });\r\n  };\r\n\r\n  closePopAndSetState = (jsonOb) => {\r\n    //console.log(\"close and set\", jsonOb);\r\n\r\n    const ItemRecords = [...this.state.itemRecords];\r\n\r\n    const record = ItemRecords.filter((rc) => rc._id === jsonOb._id);\r\n    const editedRecord = record[0];\r\n\r\n    const index = ItemRecords.indexOf(editedRecord);\r\n    ItemRecords[index] = { ...ItemRecords[index] };\r\n    ItemRecords[index] = jsonOb;\r\n\r\n    console.log(ItemRecords);\r\n\r\n    this.setState({ openPopup: false, itemRecords: ItemRecords });\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n    });\r\n  };\r\n\r\n  setConfirmDialog = (i) => {\r\n    this.setState({ showTaskDialog: true, wannaDeleteRecord: i });\r\n  };\r\n\r\n  deleteOrNot = (answer) => {\r\n    if (answer === \"yes\") {\r\n      this.handleDelete();\r\n    } else {\r\n      this.setState({ showTaskDialog: false });\r\n    }\r\n  };\r\n\r\n  handleDelete = (record) => {\r\n    //const record = this.state.wannaDeleteRecord;\r\n    //console.log(record._id);\r\n\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((result) => {\r\n      if (result) {\r\n        const itemRecords = this.state.itemRecords.filter(\r\n          (r) => r._id !== record._id\r\n        );\r\n\r\n        // toast(\"deleted successfully.\");\r\n        this.setState({ itemRecords: itemRecords, showTaskDialog: false });\r\n        //const { previousSearch: d } = this.state;\r\n\r\n        axios\r\n          .delete(\"http://localhost:5000/items/records/specific/\" + record._id)\r\n          .then((result) => console.log(result));\r\n\r\n        swal({\r\n          text: \"Record Deleted Succesfully\",\r\n          icon: \"success\",\r\n          timer: \"1500\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  handlePage = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  onSearch = () => {\r\n    const { searchQuery: d } = this.state;\r\n    console.log(\"onsearch\");\r\n\r\n    axios\r\n      .get(\"http://localhost:5000/items/multiplerecords/\" + d)\r\n      .then((result) => {\r\n        //console.log(result.data);\r\n        const records = result.data;\r\n\r\n        const currentQuery = this.state.searchQuery;\r\n        this.setState({\r\n          itemRecords: records,\r\n          previousSearch: currentQuery,\r\n          searchQuery: \"\",\r\n        });\r\n      });\r\n  };\r\n\r\n  setListAndGenerateReport = (r) => {\r\n    let list = [r];\r\n    console.log(\"hhhhgenerate\", list);\r\n    let title = r.iAddedDate + \" Recieved Stocks\";\r\n    generatePDF(list, title);\r\n  };\r\n\r\n  render() {\r\n    //const valueArr = JSON.parse(this.state.itemRecords);\r\n    //console.log(this.state.itemRecords);\r\n    //console.log(this.state.itemQuantity);\r\n    //const { itemQuantity } = this.state;\r\n    const count = this.state.itemRecords.length;\r\n    const { itemRecords, currentPage, pageSize } = this.state;\r\n\r\n    // const pgData = paginate(itemRecords, currentPage, pageSize);\r\n    // const pageItems = pgData.it;\r\n\r\n    // console.log(pageItems);\r\n\r\n    // if (pgData.nw === 0) {\r\n    //   ////\r\n    // } else {\r\n    //   currentPage = pgData.nw;\r\n    // }\r\n\r\n    if (count === 0) {\r\n      return (\r\n        <React.Fragment>\r\n          <div style={{ marginLeft: \"50px\" }}>\r\n            <DialogBox\r\n              show={this.state.showTaskDialog}\r\n              deleteOrNot={this.deleteOrNot}\r\n            />\r\n            <div className=\"row\">\r\n              <div className=\"col-4\"></div>\r\n              <div className=\"col\">\r\n                <SearchBox\r\n                  onChange={this.handleSearch}\r\n                  value={this.state.searchQuery}\r\n                  placeHolder=\"Search Records ex:2021-01-01\"\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <button\r\n                  onClick={this.onSearch}\r\n                  className=\"btn  mt-3\"\r\n                  style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                >\r\n                  Search\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"row m-4\">\r\n              <div className=\"col-2\"></div>\r\n              <div className=\"col\">\r\n                <Notice />\r\n              </div>\r\n            </div>\r\n            <div className=\"row m-4\">\r\n              <div className=\"col-5\"></div>\r\n              <div className=\"col\">\r\n                <img src={userPic} alt=\"\" width=\"400\" height=\"400\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ marginLeft: \"40px\" }}>\r\n          <DialogBox\r\n            show={this.state.showTaskDialog}\r\n            deleteOrNot={this.deleteOrNot}\r\n          />\r\n          <div className=\"row\">\r\n            <div className=\"col-4\"></div>\r\n            <div className=\"col\">\r\n              <SearchBox\r\n                onChange={this.handleSearch}\r\n                value={this.state.searchQuery}\r\n                placeHolder=\"Search Records ex:2021-01-01\"\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <Link\r\n                onClick={this.onSearch}\r\n                className=\"btn mt-3\"\r\n                style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n              >\r\n                Search\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          <TableVertilcle\r\n            records={itemRecords}\r\n            handleDelete={this.handleDelete}\r\n            onSet={this.setConfirmDialog}\r\n            onSetPopup={this.setOpenPopup}\r\n            onReport={this.setListAndGenerateReport}\r\n          />\r\n\r\n          {/* <div className=\"row\">\r\n            <div className=\"col-2\"></div>\r\n            <div className=\"col\">\r\n              <Pagination\r\n                itemsCount={count}\r\n                pageSize={pageSize}\r\n                onPageChange={this.handlePage}\r\n                currentPage={currentPage}\r\n              />\r\n            </div>\r\n          </div> */}\r\n        </div>\r\n\r\n        <FormPopup\r\n          openPopup={this.state.openPopup}\r\n          onClose={this.closeOpenPopup}\r\n          title=\"Update Items Record\"\r\n        >\r\n          <EditItemRecordForm\r\n            itemRecordOb={this.state.itemRecord}\r\n            onSetAndClose={this.closePopAndSetState}\r\n          />\r\n        </FormPopup>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemRecord;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\storeManager\\sm_dashboard.jsx",["789","790","791"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\r\nimport \"../ProductionManager/dashboard.css\";\r\nimport hello from \"../assets/hello.png\";\r\nimport clock from \"../assets/clock.png\";\r\nimport Clock from \"../../components/ProductionManager/common/clock\";\r\nimport generatePDF from \"../../components/storeManager/utils/reportGenerator\";\r\nimport moment from \"moment\";\r\nimport swal from \"sweetalert\";\r\n\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    currentDate: moment(new Date()).format(\"YYYY-MM-DD\"),\r\n    itemRecords: [],\r\n    user_name: \"\",\r\n    numOfProducts: 0,\r\n    numOfMaterials: 0,\r\n    numOfWastedItems: 0,\r\n    numOfReturnedItems: 0,\r\n    noOfRequests: 0,\r\n    tickets: [\r\n      {\r\n        id: \"1\",\r\n        title: \"main\",\r\n        request: \"myreq\",\r\n        status: \"ok\",\r\n        updated_at: \"2021-01-01\",\r\n      },\r\n      {\r\n        id: \"2\",\r\n        title: \"main\",\r\n        request: \"myreq\",\r\n        status: \"ok\",\r\n        updated_at: \"2021-01-02\",\r\n      },\r\n      {\r\n        id: \"3\",\r\n        title: \"main\",\r\n        request: \"myreq\",\r\n        status: \"ok\",\r\n        updated_at: \"2021-01-03\",\r\n      },\r\n      {\r\n        id: \"4\",\r\n        title: \"main\",\r\n        request: \"myreq\",\r\n        status: \"ok\",\r\n        updated_at: \"2021-01-04\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get(\"http://localhost:5000/items/\").then((result) => {\r\n      const items = result.data;\r\n\r\n      const materials = items.filter((item) => item.iType === \"Material\");\r\n      const products = items.filter((item) => item.iType === \"Product\");\r\n\r\n      const mCount = materials.length;\r\n      const pCount = products.length;\r\n\r\n      this.setState({ numOfProducts: pCount, numOfMaterials: mCount });\r\n    });\r\n    const user_name = localStorage.getItem(\"user_full_name\");\r\n    this.setState({user_name:user_name});\r\n    axios\r\n      .get(\r\n        \"http://localhost:5000/items/multiplerecords/\" + this.state.currentDate\r\n      )\r\n      .then((result) => {\r\n        const records = result.data;\r\n        this.setState({ itemRecords: records });\r\n        console.log(records);\r\n      });\r\n\r\n    axios.get(\"http://localhost:5000/returned/\").then((result) => {\r\n      const rProducts = result.data;\r\n      const rCount = rProducts.length;\r\n      this.setState({ numOfReturnedItems: rCount });\r\n    });\r\n\r\n    axios.get(\"http://localhost:5000/wasted/\").then((result) => {\r\n      const wItems = result.data;\r\n      const wCount = wItems.length;\r\n      this.setState({ numOfWastedItems: wCount });\r\n    });\r\n\r\n    axios.get(\"http://localhost:5000/requests/\").then((result) => {\r\n      const requests = result.data;\r\n      const reqCount = requests.length;\r\n\r\n      this.setState({ noOfRequests: reqCount });\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user_full_name\");\r\n    localStorage.removeItem(\"user_email\");\r\n    localStorage.removeItem(\"is_login\");\r\n    window.location.reload();\r\n  }\r\n\r\n  handleMonthlyReports = () => {\r\n    const { currentDate } = this.state;\r\n    if (currentDate.toLocaleLowerCase().endsWith(\"29\")) {\r\n      console.log(\"monthly\");\r\n    } else {\r\n      swal({\r\n        text: \"Please wait for end of the month.\",\r\n        icon: \"warning\",\r\n        timer: \"1500\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleYearlyReports = () => {\r\n    const { currentDate } = this.state;\r\n    if (currentDate.toLocaleLowerCase().endsWith(\"12-29\")) {\r\n    } else {\r\n      swal({\r\n        text: \"Please wait for end of the Year.\",\r\n        icon: \"warning\",\r\n        timer: \"1500\",\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { itemRecords } = this.state;\r\n    let AddModelClose = () => this.setState({ addModalShow: false });\r\n    return (\r\n      <React.Fragment>\r\n        <ButtonToolbar>\r\n          {/* <AddFactoryDetailsModal\r\n                        show={this.state.addModalShow && this.state.factoryDetails.length == 0}\r\n                        onHide={AddModelClose}\r\n                    /> */}\r\n        </ButtonToolbar>\r\n        <main>\r\n          <div className=\"main__container\">\r\n            {/* <!-- MAIN TITLE STARTS HERE --> */}\r\n\r\n            <div className=\"main__title\">\r\n              <img src={hello} alt=\"hello\" />\r\n              <div className=\"main__greeting\">\r\n                <h1>Hello, {this.state.user_name}</h1>\r\n                <p>Welcome to your profile.</p>\r\n              </div>\r\n              <button\r\n                style={{\r\n                  backgroundColor: \"#7121AD\",\r\n                  color: \"white\",\r\n                  width: \"100px\",\r\n                }}\r\n                onClick={this.logout}\r\n              >\r\n                Log Out\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"charts\">\r\n              <div className=\"charts__left\">\r\n                <div className=\"charts__left__title\">\r\n                  <div>\r\n                    <h1>Date and Time</h1>\r\n                  </div>\r\n                  <i className=\"fa fa-usd\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className=\"row mt-5\">\r\n                  <div className=\"col-md-6\">\r\n                    <img src={clock} alt=\"clock\" />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <Clock />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"charts__right\">\r\n                <div className=\"charts__right__title\">\r\n                  <div>\r\n                    <h1>Report Genaration</h1>\r\n                  </div>\r\n                  <i className=\"fa fa-usd\" aria-hidden=\"true\"></i>\r\n                </div>\r\n\r\n                <div className=\"charts__right__cards\">\r\n                  <div className=\"card3\">\r\n                    <button onClick={() => generatePDF(itemRecords, \"Today Recieved Stocks\")}>\r\n                      <h1>Daily Report</h1>\r\n                    </button>\r\n                    </div>\r\n                    <div className=\"card2\">\r\n                    <button onClick={() => this.handleMonthlyReports()}>\r\n                      <h1>Monthly Report</h1>\r\n                    </button>\r\n                    </div>\r\n                    <div class=\"card1\">\r\n                    <button onClick={() => this.handleYearlyReports()}>\r\n                      <h1>Yearly Report</h1>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* <!-- MAIN TITLE ENDS HERE --> */}\r\n\r\n            {/* <!-- MAIN CARDS STARTS HERE --> */}\r\n            <div className=\"main__cards\">\r\n              <div className=\"carda\">\r\n                <div className=\"card_inner\">\r\n                  <p className=\"text-primary-p\">Number Of Items</p>\r\n                  <span className=\"font-bold text-title\">\r\n                    {this.state.numOfProducts}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"cardd\">\r\n                <div className=\"card_inner\">\r\n                  <p className=\"text-primary-p\">No Of Material</p>\r\n                  <span className=\"font-bold text-title\">\r\n                    {this.state.numOfMaterials}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"carda\">\r\n                <div className=\"card_inner\">\r\n                  <p className=\"text-primary-p\">No Of Wasted Items</p>\r\n                  <span className=\"font-bold text-title\">\r\n                    {this.state.numOfWastedItems}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"cardd\">\r\n                <div className=\"card_inner\">\r\n                  <p className=\"text-primary-p\">No Of Requests</p>\r\n                  <span className=\"font-bold text-title\">\r\n                    {this.state.noOfRequests}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <!-- MAIN CARDS ENDS HERE --> */}\r\n\r\n            {/* <!-- CHARTS STARTS HERE --> */}\r\n\r\n            {/* <!-- CHARTS ENDS HERE --> */}\r\n          </div>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\storeManager\\myprofile.jsx",["792"],"import React, { Component } from \"react\";\r\nimport ProfileTable from \"../../components/storeManager/tables/profileTable\";\r\nimport axios from \"axios\";\r\nimport FormPopup from \"../../components/storeManager/reusables/formpopup\";\r\nimport FormProfileEdit from \"../../components/storeManager/forms/formprofileedit\";\r\nimport userPic from \"../../pages/assets/pem56.png\";\r\nimport NewDeleteProfileFeedback from \"../../components/storeManager/forms/newdeleteprofilefeedback\";\r\nimport swal from \"sweetalert\";\r\n\r\nclass MyProfile extends Component {\r\n  state = {\r\n    userObjectId: \"611a4e2e4710cdbb4ee14fb2\",\r\n\r\n    user: {\r\n      _id: \"\",\r\n      FullName: \"\",\r\n      BirthDate: \"\",\r\n      Email: \"\",\r\n      Contact: \"\",\r\n      Age: \"\",\r\n      Gender: \"\",\r\n      Address: \"\",\r\n      Designation: \"\",\r\n      BankName: \"\",\r\n      AccountNumber: \"\",\r\n      Branch: \"\",\r\n      BranchCode: \"\",\r\n      NumberOfFamilyMembers: \"\",\r\n    },\r\n\r\n    openPopup: false,\r\n    openReasonDeletePopup: false,\r\n    deleteUserName: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    //get user details from database and set them to the state and tableprofile\r\n    //use email of user session\r\n    axios\r\n      .get(\"http://localhost:5000/users/\" + localStorage.getItem(\"user_email\"))\r\n      .then((result) => {\r\n        const user = result.data;\r\n\r\n        const id = user._id;\r\n        const fName = user.fullName;\r\n        const bDate = user.dob;\r\n        const email = user.email;\r\n        const contact = user.contact;\r\n        const age = user.age;\r\n        const gender = user.gender;\r\n        const address = user.address;\r\n        const designation = user.designation;\r\n        const bName = user.bankName;\r\n        const accountNumber = user.accountNumber;\r\n        const branch = user.branch;\r\n        const branchCode = user.branchCode;\r\n        const numberOfFamily = user.numberOfFamilyMembers;\r\n\r\n        const ob = {\r\n          _id: id,\r\n          FullName: fName,\r\n          BirthDate: bDate,\r\n          Email: email,\r\n          Contact: contact,\r\n          Age: age,\r\n          Gender: gender,\r\n          Address: address,\r\n          Designation: designation,\r\n          BankName: bName,\r\n          AccountNumber: accountNumber,\r\n          Branch: branch,\r\n          BranchCode: branchCode,\r\n          NumberOfFamilyMembers: numberOfFamily,\r\n        };\r\n\r\n        console.log(user);\r\n        this.setState({ user: ob });\r\n      });\r\n  }\r\n\r\n  setOpenPopup = () => {\r\n    this.setState({ openPopup: true });\r\n  };\r\n\r\n  closeOpenPopup = () => {\r\n    this.setState({ openPopup: false });\r\n  };\r\n\r\n  closePopAndSetState = (jsonOb) => {\r\n    this.setState({ user: jsonOb, openPopup: false });\r\n  };\r\n\r\n  setReasonDeleteOpenPopup = (name, id) => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((result) => {\r\n      if (result) {\r\n        this.setState({\r\n          openReasonDeletePopup: true,\r\n          deleteUserName: name,\r\n        });\r\n      } //end of if\r\n    });\r\n  };\r\n\r\n  closeOpenReasonDeletePopup = () => {\r\n    this.setState({ openReasonDeletePopup: false });\r\n  };\r\n\r\n  closeOpenReasonDeletePopupAndLOGOut = () => {\r\n    const currentUserId = this.state.user._id;\r\n    this.setState({ openReasonDeletePopup: false });\r\n\r\n\r\n      axios.get(\"http://localhost:5000/users/\" + currentUserId).then((result) => {\r\n        localStorage.removeItem(\"user_full_name\");\r\n        localStorage.removeItem(\"user_email\");\r\n        localStorage.removeItem(\"is_login\");\r\n        this.props.history.push('/')\r\n        window.location.reload();\r\n      });\r\n       \r\n    //now log out\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ marginLeft: \"120px\" }}>\r\n          <div className=\"row\">\r\n            <div className=\"col-2\"></div>\r\n\r\n            <div className=\"col\">\r\n              <h2 className=\"mt-3\">My Profile</h2>\r\n              <ProfileTable\r\n                userOb={this.state.user}\r\n                onSetPopup={this.setOpenPopup}\r\n                onSetReasonDeletePopup={this.setReasonDeleteOpenPopup}\r\n              />\r\n            </div>\r\n          </div>\r\n          <FormPopup\r\n            openPopup={this.state.openPopup}\r\n            onClose={this.closeOpenPopup}\r\n            title=\"Update My Profile\"\r\n          >\r\n            <FormProfileEdit\r\n              userOb={this.state.user}\r\n              onSetAndClose={this.closePopAndSetState}\r\n            />\r\n          </FormPopup>\r\n\r\n          <FormPopup\r\n            openPopup={this.state.openReasonDeletePopup}\r\n            onClose={this.closeOpenReasonDeletePopup}\r\n            title=\"Reason for delete\"\r\n          >\r\n            <NewDeleteProfileFeedback\r\n              name={this.state.deleteUserName}\r\n              logoutAndClose={this.closeOpenReasonDeletePopupAndLOGOut}\r\n            />\r\n          </FormPopup>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyProfile;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\storeManager\\items.jsx",["793","794","795","796"],"import React, { Component, useState } from \"react\";\r\nimport Table from \"../../components/storeManager/tables/table\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ListGroup from \"../../components/storeManager/reusables/listgroup\";\r\nimport SearchBox from \"../../components/storeManager/reusables/searchBox\";\r\nimport SelectSearch from \"../../components/storeManager/reusables/selectsearch\";\r\nimport DialogBox from \"../../components/storeManager/reusables/dialogbox\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport swal from \"sweetalert\";\r\nimport { paginate } from \"../../components/storeManager/utils/paginate\";\r\nimport Pagination from \"../../components/storeManager/reusables/pagination\";\r\nimport FormPopup from \"./../../components/storeManager/reusables/formpopup\";\r\nimport EditItemForm from \"./../../components/storeManager/forms/edititemform\";\r\nimport NewWastedItemForm from \"../../components/storeManager/forms/newWastedItemForm\";\r\nimport userPic from \"../../pages/assets/Media player-cuate.svg\";\r\nimport userPic2 from \"../../pages/assets/Endpoint-rafiki.svg\";\r\nimport userPic3 from \"../../pages/assets/Get in touch-cuate.svg\";\r\nimport userPic4 from \"../../pages/assets/Self checkout-amico.svg\";\r\n\r\nclass Item extends Component {\r\n  state = {\r\n    items: [],\r\n    currentPage: 1,\r\n    pageSize: 10,\r\n    genres: [\"All\", \"Product\", \"Material\"], //array of genre\r\n    categories: [\"clothes\", \"plastic\", \"anything\"],\r\n    selectedGenre: \"All\",\r\n    searchQuery: \"\",\r\n    selectedCategory: \"\",\r\n    showTaskDialog: false,\r\n    wannaDeleteItem: {},\r\n    categoryObjects: [],\r\n    openPopup: false,\r\n    item: {},\r\n    openWastedPopup: false,\r\n    wastedItem: {},\r\n  };\r\n\r\n  //get all the item details including nexted documents\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/items/\")\r\n      .then((result) => {\r\n        const items = result.data;\r\n        this.setState({ items: items });\r\n        console.log(items);\r\n        axios.get(\"http://localhost:5000/category/\").then((result) => {\r\n          const categoryObjs = result.data;\r\n          console.log(categoryObjs);\r\n          //this.setState({categoryObjects: categoryObjs});\r\n          this.setState({\r\n            categoryObjects: categoryObjs,\r\n          });\r\n        });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  setOpenPopup = (id) => {\r\n    const { items } = this.state;\r\n    const item = items.filter((item) => item._id === id);\r\n    const editItem = item[0];\r\n\r\n    console.log(editItem);\r\n\r\n    this.setState({ openPopup: true, item: editItem });\r\n  };\r\n\r\n  closeOpenPopup = () => {\r\n    this.setState({ openPopup: false });\r\n  };\r\n\r\n  closePopAndSetState = (jsonOb) => {\r\n    //console.log(\"close and set\", jsonOb);\r\n\r\n    const items = [...this.state.items];\r\n\r\n    const item = items.filter((it) => it._id === jsonOb._id);\r\n    const editedItem = item[0];\r\n\r\n    const index = items.indexOf(editedItem);\r\n    items[index] = { ...items[index] };\r\n    items[index] = jsonOb;\r\n\r\n    console.log(items);\r\n\r\n    this.setState({ openPopup: false, items: items });\r\n  };\r\n\r\n  setWastedOpenPopup = (id) => {\r\n    const { items } = this.state;\r\n\r\n    const wasteditem = items.filter((item) => item._id === id);\r\n    const wItem = wasteditem[0];\r\n\r\n    this.setState({\r\n      openWastedPopup: true,\r\n      wastedItem: wItem,\r\n      openPopup: false,\r\n    });\r\n  };\r\n\r\n  closeOpenWastedPopup = () => {\r\n    this.setState({ openWastedPopup: false });\r\n  };\r\n\r\n  deleteItemAndClose = (w) => {\r\n    const items = this.state.items.filter((item) => item._id !== w._id);\r\n    //toast(\"deleted successfully.\");\r\n    this.setState({ items, openWastedPopup: false });\r\n\r\n    axios\r\n      .delete(\"http://localhost:5000/items/\" + w._id)\r\n      .then((result) => console.log(result.data));\r\n  };\r\n\r\n  handleGenreSelect = (g) => {\r\n    this.setState({\r\n      selectedGenre: g,\r\n      searchQuery: \"\",\r\n      currentPage: 1,\r\n      selectedCategory: \"\",\r\n    });\r\n  };\r\n\r\n  setConfirmDialog = (i) => {\r\n    this.setState({ showTaskDialog: true, wannaDeleteItem: i });\r\n  };\r\n\r\n  deleteOrNot = (answer) => {\r\n    if (answer === \"yes\") {\r\n      this.handleDelete();\r\n    } else {\r\n      this.setState({ showTaskDialog: false });\r\n    }\r\n  };\r\n\r\n  handleDelete = (i) => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((result) => {\r\n      if (result) {\r\n        const items = this.state.items.filter((item) => item._id !== i._id);\r\n        //toast(\"deleted successfully.\");\r\n        this.setState({ items, showTaskDialog: false });\r\n\r\n        axios\r\n          .delete(\"http://localhost:5000/items/\" + i._id)\r\n          .then((result) => console.log(result.data));\r\n\r\n        swal({\r\n          text: \"Item deleted successfully.\",\r\n          icon: \"success\",\r\n          timer: \"1500\",\r\n        });\r\n      } //end of if\r\n    });\r\n    //const i = this.state.wannaDeleteItem;\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      selectedCategory: \"\",\r\n      selectedGenre: \"All\",\r\n      currentPage: 1,\r\n    });\r\n  };\r\n  handleSelectChange = (category) => {\r\n    this.setState({\r\n      selectedCategory: category,\r\n      selectedGenre: \"All\",\r\n      searchQuery: \"\",\r\n      currentPage: 1,\r\n    });\r\n  };\r\n\r\n  handlePage = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  filteredData() {\r\n    const { searchQuery, items, selectedGenre, selectedCategory } = this.state;\r\n\r\n    let filtered = [];\r\n    if (selectedCategory) {\r\n      if (selectedCategory === \"first\") {\r\n        filtered = items;\r\n      } else {\r\n        filtered = items.filter((i) => i.iCategory === selectedCategory);\r\n      }\r\n    } else if (searchQuery) {\r\n      filtered = items.filter((i) =>\r\n        i.iAddedDate.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else if (selectedGenre === \"All\") {\r\n      filtered = items;\r\n    } else if (selectedGenre) {\r\n      filtered = items.filter((i) => i.iType === selectedGenre);\r\n    }\r\n\r\n    return filtered;\r\n  }\r\n\r\n  render() {\r\n    //const [showTaskDialog, setShowTaskDialog] = useState(false);\r\n    const { pageSize } = this.state;\r\n    // alert();\r\n    let currentPage = this.state.currentPage;\r\n    //if (count === 0) return <p>There are no Items in the stock</p>;\r\n\r\n    const filtered = this.filteredData();\r\n\r\n    //const pageItems = paginate(filtered, currentPage, pageSize);\r\n    const pgData = paginate(filtered, currentPage, pageSize);\r\n    const pageItems = pgData.it;\r\n\r\n    console.log(pageItems);\r\n\r\n    if (pgData.nw === 0) {\r\n      ////\r\n    } else {\r\n      currentPage = pgData.nw;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ marginLeft: \"30px\" }}>\r\n          <div className=\"row\">\r\n            <div className=\"col-2\"></div>\r\n            <div className=\"col\">\r\n              <ListGroup\r\n                genres={this.state.genres}\r\n                onGenreSelect={this.handleGenreSelect}\r\n                selectedGenre={this.state.selectedGenre}\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <SelectSearch\r\n                categories={this.state.categoryObjects}\r\n                onChange={this.handleSelectChange}\r\n                categoryValue={this.state.selectedCategory}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col\">\r\n              <SearchBox\r\n                onChange={this.handleSearch}\r\n                value={this.state.searchQuery}\r\n                placeHolder=\"Search date and time\"\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <Link\r\n                to=\"/it/new/myItem\"\r\n                className=\"btn mt-3 mb-1\"\r\n                style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n              >\r\n                New Item\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-2\"></div>\r\n            <div className=\"col\">\r\n              <img src={userPic} alt=\"\" width=\"150\" height=\"150\" />\r\n              <img src={userPic4} alt=\"\" width=\"150\" height=\"150\" />\r\n            </div>\r\n            <div className=\"col\">\r\n              <img src={userPic2} alt=\"\" width=\"150\" height=\"150\" />\r\n              <img src={userPic3} alt=\"\" width=\"150\" height=\"150\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-2\"></div>\r\n            <div className=\"col\">\r\n              <h2 className=\"mt-3\">Items</h2>\r\n              <Table\r\n                filteredItems={pageItems}\r\n                onItemDelete={this.handleDelete}\r\n                onSet={this.setConfirmDialog}\r\n                onSetPopup={this.setOpenPopup}\r\n                onSetWastedPop={this.setWastedOpenPopup}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-2\"></div>\r\n            <div className=\"col\">\r\n              <Pagination\r\n                itemsCount={filtered.length}\r\n                pageSize={pageSize}\r\n                onPageChange={this.handlePage}\r\n                currentPage={currentPage}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <FormPopup\r\n          openPopup={this.state.openPopup}\r\n          onClose={this.closeOpenPopup}\r\n          title=\"Update Item\"\r\n        >\r\n          <EditItemForm\r\n            itemOb={this.state.item}\r\n            onSetAndClose={this.closePopAndSetState}\r\n          />\r\n        </FormPopup>\r\n\r\n        <FormPopup\r\n          openPopup={this.state.openWastedPopup}\r\n          onClose={this.closeOpenWastedPopup}\r\n          title=\"Add Wasted\"\r\n        >\r\n          <NewWastedItemForm\r\n            wastedOb={this.state.wastedItem}\r\n            onClose={this.deleteItemAndClose}\r\n          />\r\n        </FormPopup>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Item;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\storeManager\\wasteditems.jsx",["797","798","799","800","801"],"import React, { Component, useState } from \"react\";\r\nimport Table from \"../../components/storeManager/tables/table\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ListGroup from \"../../components/storeManager/reusables/listgroup\";\r\nimport SearchBox from \"../../components/storeManager/reusables/searchBox\";\r\nimport SelectSearch from \"../../components/storeManager/reusables/selectsearch\";\r\nimport DialogBox from \"../../components/storeManager/reusables/dialogbox\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport swal from \"sweetalert\";\r\nimport { paginate } from \"../../components/storeManager/utils/paginate\";\r\nimport Pagination from \"../../components/storeManager/reusables/pagination\";\r\nimport WastedItemTable from \"./../../components/storeManager/tables/wasteditemtable\";\r\nimport FormPopup from \"./../../components/storeManager/reusables/formpopup\";\r\nimport EditWastedItemForm from \"./../../components/storeManager/forms/editWastedItemForm\";\r\nimport userPic from \"../../pages/assets/Remote meeting-cuate.svg\";\r\nimport userPic2 from \"../../pages/assets/Messenger-cuate.svg\";\r\nimport userPic3 from \"../../pages/assets/Online learning-cuate (1).svg\";\r\nimport userPic4 from \"../../pages/assets/Investing-cuate.svg\";\r\n\r\nclass WastedItem extends Component {\r\n  state = {\r\n    wastedItems: [],\r\n    currentPage: 1,\r\n    pageSize: 10,\r\n    genres: [\"All\", \"Product\", \"Material\"], //array of genre\r\n    categories: [\"clothes\", \"plastic\", \"anything\"],\r\n    selectedGenre: \"All\",\r\n    searchQuery: \"\",\r\n    selectedCategory: \"\",\r\n    showTaskDialog: false,\r\n    wannaDeleteItem: {},\r\n    categoryObjects: [],\r\n    openPopup: false,\r\n    wastedItem: {},\r\n  };\r\n\r\n  //get all the item details including nexted documents\r\n  componentDidMount() {\r\n    //getting data from db at first time\r\n    axios\r\n      .get(\"http://localhost:5000/wasted/\")\r\n      .then((result) => {\r\n        const wastedItems = result.data;\r\n\r\n        this.setState({ wastedItems: wastedItems });\r\n\r\n        axios.get(\"http://localhost:5000/category/\").then((result) => {\r\n          const categoryObjs = result.data;\r\n          console.log(categoryObjs);\r\n          //this.setState({categoryObjects: categoryObjs});\r\n          this.setState({\r\n            categoryObjects: categoryObjs,\r\n          });\r\n        });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  setOpenPopup = (id) => {\r\n    const { wastedItems } = this.state;\r\n    const wastedItem = wastedItems.filter((item) => item._id === id);\r\n    const editItem = wastedItem[0];\r\n\r\n    console.log(editItem);\r\n\r\n    this.setState({ openPopup: true, wastedItem: editItem });\r\n  };\r\n\r\n  closeOpenPopup = () => {\r\n    this.setState({ openPopup: false });\r\n  };\r\n\r\n  closePopAndSetState = (jsonOb) => {\r\n    //console.log(\"close and set\", jsonOb);\r\n\r\n    const wastedItems = [...this.state.wastedItems];\r\n\r\n    const wastedItem = wastedItems.filter((it) => it._id === jsonOb._id);\r\n    const editedItem = wastedItem[0];\r\n\r\n    const index = wastedItems.indexOf(editedItem);\r\n    wastedItems[index] = { ...wastedItems[index] };\r\n    wastedItems[index] = jsonOb;\r\n\r\n    console.log(wastedItems);\r\n\r\n    this.setState({ openPopup: false, wastedItems: wastedItems });\r\n  };\r\n\r\n  handleGenreSelect = (g) => {\r\n    this.setState({\r\n      selectedGenre: g,\r\n      searchQuery: \"\",\r\n      currentPage: 1,\r\n      selectedCategory: \"\",\r\n    });\r\n  };\r\n\r\n  setConfirmDialog = (i) => {\r\n    this.setState({ showTaskDialog: true, wannaDeleteItem: i });\r\n  };\r\n\r\n  deleteOrNot = (answer) => {\r\n    if (answer === \"yes\") {\r\n      this.handleDelete();\r\n    } else {\r\n      this.setState({ showTaskDialog: false });\r\n    }\r\n  };\r\n\r\n  handleDelete = (w) => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((result) => {\r\n      if (result) {\r\n        const wastedItems = this.state.wastedItems.filter(\r\n          (wItem) => wItem._id !== w._id\r\n        );\r\n        //toast(\"deleted successfully.\");\r\n        this.setState({ wastedItems, showTaskDialog: false });\r\n\r\n        axios\r\n          .delete(\"http://localhost:5000/wasted/\" + w._id)\r\n          .then((result) => console.log(result.data));\r\n\r\n        swal({\r\n          text: \"Item deleted successfully.\",\r\n          icon: \"success\",\r\n          timer: \"1500\",\r\n        });\r\n      } //end of if\r\n    });\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      selectedCategory: \"\",\r\n      selectedGenre: \"All\",\r\n      currentPage: 1,\r\n    });\r\n  };\r\n  handleSelectChange = (category) => {\r\n    this.setState({\r\n      selectedCategory: category,\r\n      selectedGenre: \"All\",\r\n      searchQuery: \"\",\r\n      currentPage: 1,\r\n    });\r\n  };\r\n\r\n  handlePage = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  filteredData() {\r\n    const { searchQuery, wastedItems, selectedGenre, selectedCategory } =\r\n      this.state;\r\n\r\n    let filtered = [];\r\n    if (selectedCategory) {\r\n      if (selectedCategory === \"first\") {\r\n        filtered = wastedItems;\r\n      } else {\r\n        filtered = wastedItems.filter((w) => w.wCategory === selectedCategory);\r\n      }\r\n    } else if (searchQuery) {\r\n      filtered = wastedItems.filter((w) =>\r\n        w.wDate.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else if (selectedGenre === \"All\") {\r\n      filtered = wastedItems;\r\n    } else if (selectedGenre) {\r\n      filtered = wastedItems.filter((w) => w.wType === selectedGenre);\r\n    }\r\n\r\n    return filtered;\r\n  }\r\n\r\n  render() {\r\n    //const [showTaskDialog, setShowTaskDialog] = useState(false);\r\n    const { pageSize } = this.state;\r\n    // alert();\r\n    let currentPage = this.state.currentPage;\r\n    //if (count === 0) return <p>There are no wastedItems in the stock</p>;\r\n\r\n    const filtered = this.filteredData();\r\n\r\n    //const pagewastedItems = paginate(filtered, currentPage, pageSize);\r\n    const pgData = paginate(filtered, currentPage, pageSize);\r\n    const pagewastedItems = pgData.it;\r\n\r\n    console.log(pagewastedItems);\r\n\r\n    if (pgData.nw === 0) {\r\n      ////\r\n    } else {\r\n      currentPage = pgData.nw;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ marginLeft: \"30px\" }}>\r\n          <DialogBox\r\n            show={this.state.showTaskDialog}\r\n            deleteOrNot={this.deleteOrNot}\r\n          />\r\n          <div className=\"row\">\r\n            <div className=\"col-2\"></div>\r\n            <div className=\"col\">\r\n              <ListGroup\r\n                genres={this.state.genres}\r\n                onGenreSelect={this.handleGenreSelect}\r\n                selectedGenre={this.state.selectedGenre}\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <SelectSearch\r\n                categories={this.state.categoryObjects}\r\n                onChange={this.handleSelectChange}\r\n                categoryValue={this.state.selectedCategory}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col\">\r\n              <SearchBox\r\n                onChange={this.handleSearch}\r\n                value={this.state.searchQuery}\r\n                placeHolder=\"Search date and time\"\r\n              />\r\n            </div>\r\n            <div className=\"col\"></div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-2\"></div>\r\n            <div className=\"col\">\r\n              <img src={userPic} alt=\"\" width=\"150\" height=\"150\" />\r\n              <img src={userPic2} alt=\"\" width=\"150\" height=\"150\" />\r\n            </div>\r\n            <div className=\"col\">\r\n              <img src={userPic4} alt=\"\" width=\"150\" height=\"150\" />\r\n              <img src={userPic3} alt=\"\" width=\"150\" height=\"150\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-2\"></div>\r\n            <div className=\"col\">\r\n              {/* <Table\r\n                filteredwastedItems={pagewastedItems}\r\n                onItemDelete={this.handleDelete}\r\n                onSet={this.setConfirmDialog}\r\n              /> */}\r\n              <h2 className=\"mt-3\">Wasted items</h2>\r\n              <WastedItemTable\r\n                filteredItems={pagewastedItems}\r\n                onItemDelete={this.handleDelete}\r\n                onSet={this.setConfirmDialog}\r\n                onSetPopup={this.setOpenPopup}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-2\"></div>\r\n            <div className=\"col\">\r\n              <Pagination\r\n                itemsCount={filtered.length}\r\n                pageSize={pageSize}\r\n                onPageChange={this.handlePage}\r\n                currentPage={currentPage}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <FormPopup\r\n          openPopup={this.state.openPopup}\r\n          onClose={this.closeOpenPopup}\r\n          title=\"Update Wasted Item\"\r\n        >\r\n          <EditWastedItemForm\r\n            onSetAndClose={this.closePopAndSetState}\r\n            wastedOb={this.state.wastedItem}\r\n          />\r\n        </FormPopup>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WastedItem;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\storeManager\\itemrequests.jsx",["802","803","804"],"import React, { Component } from \"react\";\r\nimport ItemRequestTable from \"../../components/storeManager/tables/itemrequeststable\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport ItemRequestForm from \"../../components/storeManager/forms/itemrequestform\";\r\nimport FormPopup from \"../../components/storeManager/reusables/formpopup\";\r\nimport EditItemRequestForm from \"../../components/storeManager/forms/edititemrequestform\";\r\nimport userPic from \"../../pages/assets/Memory storage-cuate.svg\";\r\n\r\nclass ItemRequest extends Component {\r\n  state = {\r\n    itemRequests: [],\r\n    searchQuery: \"\",\r\n    openPopup: false,\r\n    itemRequest: {},\r\n    openPopup: false,\r\n    itemRequest: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/requests/\")\r\n      .then((result) => {\r\n        const requests = result.data;\r\n\r\n        this.setState({ itemRequests: requests });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  setOpenPopup = (id) => {\r\n    const { itemRequests: itemRequests } = this.state;\r\n    const itemRequest = itemRequests.filter((request) => request._id === id);\r\n    const editItem = itemRequest[0];\r\n\r\n    console.log(editItem);\r\n\r\n    this.setState({ openPopup: true, itemRequest: editItem });\r\n  };\r\n\r\n  closeOpenPopup = () => {\r\n    this.setState({ openPopup: false });\r\n  };\r\n\r\n  closePopAndSetState = (jsonOb) => {\r\n    //console.log(\"close and set\", jsonOb);\r\n\r\n    const itemRequests = [...this.state.itemRequests];\r\n\r\n    const itemRequest = itemRequests.filter((req) => req._id === jsonOb._id);\r\n    const editedRequest = itemRequest[0];\r\n\r\n    const index = itemRequests.indexOf(editedRequest);\r\n    itemRequests[index] = { ...itemRequests[index] };\r\n    itemRequests[index] = jsonOb;\r\n\r\n    //console.log(itemRequests);\r\n\r\n    this.setState({ openPopup: false, itemRequests: itemRequests });\r\n  };\r\n\r\n  handleDelete = (request) => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((result) => {\r\n      if (result) {\r\n        const itemRequests = this.state.itemRequests.filter(\r\n          (r) => r._id !== request._id\r\n        );\r\n        //toast(\"deleted successfully.\");\r\n        this.setState({ itemRequests, showTaskDialog: false });\r\n\r\n        axios\r\n          .delete(\"http://localhost:5000/requests/\" + request._id)\r\n          .then((result) => console.log(result.data));\r\n\r\n        swal({\r\n          text: \"Request deleted successfully.\",\r\n          icon: \"success\",\r\n          timer: \"1500\",\r\n        });\r\n      } //end of if\r\n    });\r\n  };\r\n\r\n  setRequest = (requests) => {\r\n    console.log(\"on set reqs\");\r\n    // const requests = [requestOb, ...this.state.itemRequests];\r\n    // this.setState({ itemRequests: requests });\r\n    this.setState({ itemRequests: requests });\r\n  };\r\n\r\n  render() {\r\n    const { itemRequests } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ marginLeft: \"30px\" }}>\r\n          <div className=\"row\">\r\n            <div className=\"col-2\"></div>\r\n            <div className=\"col\">\r\n              <h2 className=\"mt-3\">Item Requests</h2>\r\n              <ItemRequestTable\r\n                filteredItems={itemRequests}\r\n                onItemDelete={this.handleDelete}\r\n                onSetPopup={this.setOpenPopup}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-2\"></div>\r\n            <div className=\"col\">\r\n              <h3>\r\n                <ItemRequestForm onSetRequest={this.setRequest} />\r\n              </h3>\r\n            </div>\r\n            <div className=\"col\">\r\n              <img src={userPic} alt=\"\" width=\"400\" height=\"400\" />\r\n            </div>\r\n          </div>\r\n\r\n          <FormPopup\r\n            openPopup={this.state.openPopup}\r\n            onClose={this.closeOpenPopup}\r\n            title=\"update Item Request\"\r\n          >\r\n            <EditItemRequestForm\r\n              requestOb={this.state.itemRequest}\r\n              onSetAndClose={this.closePopAndSetState}\r\n            />\r\n          </FormPopup>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemRequest;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\storeManager\\returnedproducts.jsx",["805","806","807","808","809","810","811"],"import React, { Component, useState } from \"react\";\r\nimport Table from \"../../components/storeManager/tables/table\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ListGroup from \"../../components/storeManager/reusables/listgroup\";\r\nimport SearchBox from \"../../components/storeManager/reusables/searchBox\";\r\nimport SelectSearch from \"../../components/storeManager/reusables/selectsearch\";\r\nimport DialogBox from \"../../components/storeManager/reusables/dialogbox\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport swal from \"sweetalert\";\r\nimport { paginate } from \"../../components/storeManager/utils/paginate\";\r\nimport Pagination from \"../../components/storeManager/reusables/pagination\";\r\nimport FormPopup from \"./../../components/storeManager/reusables/formpopup\";\r\nimport ReturnedProductsTable from \"../../components/storeManager/tables/returnedproductstable\";\r\nimport EditReturnedProductForm from \"./../../components/storeManager/forms/editreturnedproductform\";\r\nimport userPic from \"../../pages/assets/Remote meeting-cuate.svg\";\r\nimport userPic2 from \"../../pages/assets/Messenger-cuate.svg\";\r\nimport userPic3 from \"../../pages/assets/Get in touch-cuate1.svg\";\r\nimport userPic4 from \"../../pages/assets/Analyze-cuate.svg\";\r\n\r\nclass ReturnedProduct extends Component {\r\n  state = {\r\n    returnedProducts: [],\r\n    currentPage: 1,\r\n    pageSize: 10,\r\n    genres: [\"All\", \"Product\", \"Material\"], //array of genre\r\n    categories: [\"clothes\", \"plastic\", \"anything\"],\r\n    selectedGenre: \"All\",\r\n    searchQuery: \"\",\r\n    selectedCategory: \"\",\r\n    showTaskDialog: false,\r\n    wannaDeleteItem: {},\r\n    categoryObjects: [],\r\n    openPopup: false,\r\n    returnedProduct: {},\r\n  };\r\n\r\n  //get all the item details including nexted documents\r\n  componentDidMount() {\r\n    //getting data from db at first time\r\n    axios\r\n      .get(\"http://localhost:5000/returned/\")\r\n      .then((result) => {\r\n        const returnedProducts = result.data;\r\n        this.setState({ returnedProducts: returnedProducts });\r\n\r\n        axios.get(\"http://localhost:5000/category/\").then((result) => {\r\n          const categoryObjs = result.data;\r\n          console.log(categoryObjs);\r\n          //this.setState({categoryObjects: categoryObjs});\r\n          this.setState({\r\n            categoryObjects: categoryObjs,\r\n          });\r\n        });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  setOpenPopup = (id) => {\r\n    const { returnedProducts: returnedProducts } = this.state;\r\n    const returnedProduct = returnedProducts.filter((item) => item._id === id);\r\n    const editItem = returnedProduct[0];\r\n\r\n    console.log(editItem);\r\n\r\n    this.setState({ openPopup: true, returnedProduct: editItem });\r\n  };\r\n\r\n  closeOpenPopup = () => {\r\n    this.setState({ openPopup: false });\r\n  };\r\n\r\n  closePopAndSetState = (jsonOb) => {\r\n    //console.log(\"close and set\", jsonOb);\r\n\r\n    const returnedProducts = [...this.state.returnedProducts];\r\n\r\n    const returnedProduct = returnedProducts.filter(\r\n      (it) => it._id === jsonOb._id\r\n    );\r\n    const editedItem = returnedProduct[0];\r\n\r\n    const index = returnedProducts.indexOf(editedItem);\r\n    returnedProducts[index] = { ...returnedProducts[index] };\r\n    returnedProducts[index] = jsonOb;\r\n\r\n    console.log(returnedProducts);\r\n\r\n    this.setState({ openPopup: false, returnedProducts: returnedProducts });\r\n  };\r\n\r\n  handleGenreSelect = (g) => {\r\n    this.setState({\r\n      selectedGenre: g,\r\n      searchQuery: \"\",\r\n      currentPage: 1,\r\n      selectedCategory: \"\",\r\n    });\r\n  };\r\n\r\n  setConfirmDialog = (i) => {\r\n    this.setState({ showTaskDialog: true, wannaDeleteItem: i });\r\n  };\r\n\r\n  deleteOrNot = (answer) => {\r\n    if (answer === \"yes\") {\r\n      this.handleDelete();\r\n    } else {\r\n      this.setState({ showTaskDialog: false });\r\n    }\r\n  };\r\n\r\n  handleDelete = (r) => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((result) => {\r\n      if (result) {\r\n        const returnedProducts = this.state.returnedProducts.filter(\r\n          (rItem) => rItem._id !== r._id\r\n        );\r\n        //toast(\"deleted successfully.\");\r\n        this.setState({ returnedProducts, showTaskDialog: false });\r\n\r\n        axios\r\n          .delete(\"http://localhost:5000/returned/\" + r._id)\r\n          .then((result) => console.log(result.data));\r\n\r\n        swal({\r\n          text: \"Item deleted successfully.\",\r\n          icon: \"success\",\r\n          timer: \"1500\",\r\n        });\r\n      } //end of if\r\n    });\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      selectedCategory: \"\",\r\n      selectedGenre: \"All\",\r\n      currentPage: 1,\r\n    });\r\n  };\r\n  handleSelectChange = (category) => {\r\n    this.setState({\r\n      selectedCategory: category,\r\n      selectedGenre: \"All\",\r\n      searchQuery: \"\",\r\n      currentPage: 1,\r\n    });\r\n  };\r\n\r\n  handlePage = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  filteredData() {\r\n    const {\r\n      searchQuery,\r\n      returnedProducts: returnedProducts,\r\n      selectedGenre,\r\n      selectedCategory,\r\n    } = this.state;\r\n\r\n    let filtered = [];\r\n    if (selectedCategory) {\r\n      if (selectedCategory === \"first\") {\r\n        filtered = returnedProducts;\r\n      } else {\r\n        filtered = returnedProducts.filter(\r\n          (r) => r.rCategory === selectedCategory\r\n        );\r\n      }\r\n    } else if (searchQuery) {\r\n      filtered = returnedProducts.filter((r) =>\r\n        r.rDate.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else if (selectedGenre === \"All\") {\r\n      filtered = returnedProducts;\r\n    } else if (selectedGenre) {\r\n      filtered = returnedProducts.filter((r) => r.rType === selectedGenre);\r\n    }\r\n\r\n    return filtered;\r\n  }\r\n\r\n  render() {\r\n    //const [showTaskDialog, setShowTaskDialog] = useState(false);\r\n    const { pageSize } = this.state;\r\n    // alert();\r\n    let currentPage = this.state.currentPage;\r\n    //if (count === 0) return <p>There are no returnedProducts in the stock</p>;\r\n\r\n    const filtered = this.filteredData();\r\n\r\n    //const pagereturnedProducts = paginate(filtered, currentPage, pageSize);\r\n    const pgData = paginate(filtered, currentPage, pageSize);\r\n    const pageReturnedProducts = pgData.it;\r\n\r\n    console.log(pageReturnedProducts);\r\n\r\n    if (pgData.nw === 0) {\r\n      ////\r\n    } else {\r\n      currentPage = pgData.nw;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ marginLeft: \"30px\" }}>\r\n          <DialogBox\r\n            show={this.state.showTaskDialog}\r\n            deleteOrNot={this.deleteOrNot}\r\n          />\r\n          <div className=\"row\">\r\n            <div className=\"col-2\"></div>\r\n            <div className=\"col\"></div>\r\n            <div className=\"col\">\r\n              <SelectSearch\r\n                categories={this.state.categoryObjects}\r\n                onChange={this.handleSelectChange}\r\n                categoryValue={this.state.selectedCategory}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col\">\r\n              <SearchBox\r\n                onChange={this.handleSearch}\r\n                value={this.state.searchQuery}\r\n                placeHolder=\"Search date and time\"\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <Link\r\n                to=\"/it/new/product/returned\"\r\n                className=\"btn mt-3 mb-1\"\r\n                style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n              >\r\n                Add returned Product\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-2\"></div>\r\n            <div className=\"col\">\r\n              <img src={userPic} alt=\"\" width=\"150\" height=\"150\" />\r\n              <img src={userPic4} alt=\"\" width=\"150\" height=\"150\" />\r\n            </div>\r\n            <div className=\"col\">\r\n              <img src={userPic3} alt=\"\" width=\"150\" height=\"150\" />\r\n              <img src={userPic2} alt=\"\" width=\"150\" height=\"150\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-2\"></div>\r\n            <div className=\"col\">\r\n              <h2>Returned products</h2>\r\n              <ReturnedProductsTable\r\n                filteredItems={pageReturnedProducts}\r\n                onItemDelete={this.handleDelete}\r\n                onSet={this.setConfirmDialog}\r\n                onSetPopup={this.setOpenPopup}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-2\"></div>\r\n            <div className=\"col\">\r\n              <Pagination\r\n                itemsCount={filtered.length}\r\n                pageSize={pageSize}\r\n                onPageChange={this.handlePage}\r\n                currentPage={currentPage}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <FormPopup\r\n          openPopup={this.state.openPopup}\r\n          onClose={this.closeOpenPopup}\r\n          title=\"Update Returned Product\"\r\n        >\r\n          <EditReturnedProductForm\r\n            onSetAndClose={this.closePopAndSetState}\r\n            returnedOb={this.state.returnedProduct}\r\n          />\r\n        </FormPopup>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReturnedProduct;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\ProductionManager\\VIewNewProductionRound.jsx",["812","813","814","815"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\r\nimport { ProductonRoundTable } from \"../../components/ProductionManager/Tabales/ProductonRoundTable\";\r\nimport SearchBox from \"../../components/ProductionManager/common/searchBox\";\r\nimport \"./styles.css\";\r\nimport viewpic from \"../../pages/assets/viewpic2.png\";\r\n\r\nclass VIewNewProductionRound extends Component {\r\n  state = {\r\n    productionRound: [],\r\n    addModalShow: false,\r\n    searchQuery: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/newProRound-details\")\r\n      .then((result) => {\r\n        const productionRound = result.data;\r\n\r\n        this.setState({ productionRound: productionRound });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n    });\r\n  };\r\n\r\n  filteredData() {\r\n    const { searchQuery, productionRound } = this.state;\r\n\r\n    let filtered = [];\r\n\r\n    if (searchQuery) {\r\n      filtered = productionRound.filter((r) =>\r\n        r.productCategory.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else {\r\n      filtered = productionRound;\r\n    }\r\n\r\n    return filtered;\r\n  }\r\n\r\n  render() {\r\n    //take the filtered list\r\n    let filtered = this.filteredData();\r\n\r\n    console.log(filtered);\r\n\r\n    let AddModelClose = () => this.setState({ addModalShow: false });\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"heading\">View New Production Round Details</h1>\r\n\r\n        <div className=\"center\">\r\n          <img src={viewpic} alt=\"leavepic\" />\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n                <SearchBox onChange={this.handleSearch} placeHolder=\"Search\" />\r\n            </div>\r\n            <div className=\"col-md-3\"></div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-2\"></div>\r\n          <div className=\"col\">\r\n            {/**pass the filtered data */}\r\n            <ProductonRoundTable productionRound={filtered} />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VIewNewProductionRound;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\ProductionManager\\AddNewProductionRound.jsx",["816","817","818","819","820","821","822"],"import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\r\nimport swal from \"sweetalert\";\r\nimport axios from \"axios\";\r\nimport \"./styles.css\";\r\nimport addorder from \"../../pages/assets/addorderpic.png\";\r\nclass AddNewProductionRound extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      snackbaropen: false,\r\n      snackbarmsg: \"\",\r\n      categories: [],\r\n      productCodeError: \"\",\r\n      productCategoryError: \"\",\r\n      quantityError: \"\",\r\n      esDaysError: \"\",\r\n      esEmployeesError: \"\",\r\n      statusError: \"\"\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/categories\")\r\n      .then((result) => {\r\n        const categories = result.data;\r\n\r\n        this.setState({ categories: categories });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  handleSubmit(event, props) {\r\n    console.log(event.target.proId.value);\r\n    event.preventDefault();\r\n    const isValid = this.validate(event);\r\n    console.log(this.state)\r\n\r\n    if (isValid) {\r\n      fetch(\"http://localhost:5000/api/newProRound-details\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          username: \"thirnaya\",\r\n        },\r\n        body: JSON.stringify({\r\n          productId: event.target.proId.value,\r\n          productCategory: event.target.productCategory.value,\r\n          quantity: event.target.quntity.value,\r\n          esDays: event.target.estDays.value,\r\n          esEmployees: event.target.estEmp.value,\r\n          status: event.target.status.value,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then(\r\n          (result) => {\r\n            console.log(this.state);\r\n            swal({\r\n              title: \"New Production Round Details Added Succesfully\",\r\n              icon: \"success\",\r\n              button: \"Done\",\r\n            });\r\n            setTimeout(\r\n              function () {\r\n                // window.location.reload();\r\n              }.bind(this),\r\n              1500\r\n            );\r\n          },\r\n          (error) => {\r\n            this.setState({ snackbaropen: true, snackbarmsg: \"Failed\" });\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  validate(event){\r\n    let productCodeError = \"\";\r\n    let productCategoryError = \"\";\r\n    let quantityError = \"\";\r\n    let esDaysError = \"\";\r\n    let esEmployeesError = \"\";\r\n    let statusError = \"\";\r\n\r\n    if(!event.target.proId.value){\r\n      productCodeError = \"Product Id Field Can Not Be Blank\";\r\n    }\r\n    if(!event.target.productCategory.value){\r\n      productCategoryError = \"Product Category Field Can Not Be Blank\";\r\n    }\r\n    if(!event.target.quntity.value){\r\n      quantityError = \"Quantity Field Can Not Be Blank\";\r\n    }\r\n    if(!event.target.estDays.value){\r\n      esDaysError = \"Estimated Days Field Can Not Be Blank\";\r\n    }\r\n    if(!event.target.estEmp.value){\r\n      esEmployeesError = \"Esatimated Employess Field Can Not Be Blank\";\r\n    }\r\n    if(!event.target.status.value){\r\n      statusError = \"Status Field Can Not Be Blank\";\r\n    }\r\n\r\n    if(productCodeError || quantityError || esEmployeesError ||  esDaysError){\r\n      this.setState({\r\n        productCodeError: productCodeError,\r\n        quantityError: quantityError,\r\n        esDaysError: esDaysError,\r\n        esEmployeesError: esEmployeesError,\r\n      });\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"heading\">Add New Production Round Details</h1>\r\n\r\n        <div className=\"center\">\r\n          <img src={addorder} alt=\"leavepic\" />\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n\r\n          <div className=\"col\">\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Form.Group>\r\n                <Form.Group controlId=\"proId\">\r\n                  <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                    Product Id\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    style={{ border: \"1px solid #050139\" }}\r\n                    type=\"text\"\r\n                    name=\"proId\"\r\n                    placeholder=\"Product Id\"\r\n                  />\r\n                  <div style={{ background: \"#f8d7da\" }}>\r\n                    {this.state.productCodeError}\r\n                  </div>\r\n                </Form.Group>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Product Category\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  as=\"select\"\r\n                  name=\"productCategory\"\r\n                >\r\n                  <div style={{ background: \"#f8d7da\" }}>\r\n                    {this.state.productCategoryError}\r\n                  </div>\r\n                  {this.state.categories.map((i) => (\r\n                    <option key={i._id}>{i.categoryName}</option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"quntity\">\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Quantity</Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  type=\"text\"\r\n                  name=\"quntity\"\r\n                  placeholder=\"Quantity\"\r\n                />\r\n                <div style={{ background: \"#f8d7da\" }}>\r\n                  {this.state.quantityError}\r\n                </div>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"estDays\">\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Estimated Days\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  type=\"text\"\r\n                  name=\"estDays\"\r\n                  placeholder=\"Estimated Days\"\r\n                />\r\n                <div style={{ background: \"#f8d7da\" }}>\r\n                  {this.state.esDaysError}\r\n                </div>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"estEmp\">\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Estimated Employees\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  type=\"text\"\r\n                  name=\"estEmp\"\r\n                  placeholder=\"Estimated Employees\"\r\n                />\r\n                <div style={{ background: \"#f8d7da\" }}>\r\n                  {this.state.esEmployeesError}\r\n                </div>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Status</Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  as=\"select\"\r\n                  name=\"status\"\r\n                >\r\n                  <div style={{ background: \"#f8d7da\" }}>\r\n                    {this.state.statusError}\r\n                  </div>\r\n                  <option selected>Pending</option>\r\n                  <option>Completed</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Button\r\n                  className=\"my-1\"\r\n                  style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                  type=\"submit\"\r\n                >\r\n                  Add Production Round\r\n                </Button>\r\n              </Form.Group>\r\n            </Form>\r\n          </div>\r\n\r\n          <div className=\"col-1\"></div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNewProductionRound;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\ProductionManager\\ViewProductList.jsx",["823","824","825"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\r\nimport { ProductListTable } from \"../../components/ProductionManager/Tabales/ProductListTable\";\r\nimport \"./styles.css\";\r\nimport viewpic from \"../../pages/assets/viewpic.png\";\r\n\r\nclass ViewProductList extends Component {\r\n  state = {\r\n    ProductList: [],\r\n    addModalShow: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/product-code/\")\r\n      .then((result) => {\r\n        const ProductList = result.data;\r\n\r\n        this.setState({ ProductList: ProductList });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"heading\">View Product List</h1>\r\n\r\n        <div className=\"center\">\r\n          <img src={viewpic} alt=\"leavepic\" />\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-2\"></div>\r\n          <div className=\"col\">\r\n            <ProductListTable ProductList={this.state.ProductList} />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewProductList;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\ProductionManager\\AddPreviousProductionRound.jsx",["826","827","828","829","830"],"import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\r\nimport swal from \"sweetalert\";\r\nimport axios from \"axios\";\r\nimport \"./styles.css\";\r\nimport addorder from \"../../pages/assets/addorderpic.png\";\r\nclass AddPreviousProductionRound extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { snackbaropen: false, snackbarmsg: \"\", categories: [] };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/categories\")\r\n      .then((result) => {\r\n        const categories = result.data;\r\n\r\n        this.setState({ categories: categories });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  handleSubmit(event, props) {\r\n    console.log(event);\r\n    const isValid = this.validate();\r\n    event.preventDefault();\r\n    //alert(event.target.name.value);\r\n\r\n    if (isValid) {\r\n      fetch(\"http://localhost:5000/api/prevProRound-details\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          username: \"thirnaya\",\r\n        },\r\n        body: JSON.stringify({\r\n          productId: event.target.proId.value,\r\n          productCategory: event.target.productCategory.value,\r\n          quantity: event.target.quntity.value,\r\n          completedQuantity: event.target.comquantity.value,\r\n          remainingQuantity: event.target.remquantity.value,\r\n          status: event.target.status.value,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then(\r\n          (result) => {\r\n            swal({\r\n              title: \"Previous Production Round Details Added Succesfully\",\r\n              icon: \"success\",\r\n              button: \"Done\",\r\n            });\r\n            setTimeout(\r\n              function () {\r\n                window.location.reload();\r\n              }.bind(this),\r\n              1500\r\n            );\r\n          },\r\n          (error) => {\r\n            this.setState({ snackbaropen: true, snackbarmsg: \"Failed\" });\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  validate() {\r\n    let validationError = \"\";\r\n\r\n    if (!this.state.validationError) {\r\n      validationError = \"This Field Cannot Be Blank\";\r\n    }\r\n\r\n    if (validationError) {\r\n      this.setState({ validationError: validationError });\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"heading\">Add Previous Production Round Details</h1>\r\n\r\n        <div className=\"center\">\r\n          <img src={addorder} alt=\"leavepic\" />\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n\r\n          <div className=\"col\">\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Form.Group>\r\n                <Form.Group controlId=\"proId\">\r\n                  <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                    Product Id\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    style={{ border: \"1px solid #050139\" }}\r\n                    type=\"text\"\r\n                    name=\"proId\"\r\n                    placeholder=\"Product Id\"\r\n                    required\r\n                  />\r\n                  <div style={{ background: \"#f8d7da\" }}>\r\n                    {this.state.validationError}\r\n                  </div>\r\n                </Form.Group>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Product Category\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  as=\"select\"\r\n                  name=\"productCategory\"\r\n                  required\r\n                >\r\n                  <div style={{ background: \"#f8d7da\" }}>\r\n                    {this.state.validationError}\r\n                  </div>\r\n                  {this.state.categories.map((i) => (\r\n                    <option key={i._id}>{i.categoryName}</option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"quntity\">\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Quantity</Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  type=\"text\"\r\n                  name=\"quntity\"\r\n                  placeholder=\"Quantity\"\r\n                  required\r\n                />\r\n                <div style={{ background: \"#f8d7da\" }}>\r\n                  {this.state.validationError}\r\n                </div>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"estDays\">\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Compeleted Quatity\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  type=\"text\"\r\n                  name=\"comquantity\"\r\n                  placeholder=\"Compeleted Quantity\"\r\n                  required\r\n                />\r\n                <div style={{ background: \"#f8d7da\" }}>\r\n                  {this.state.validationError}\r\n                </div>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"estEmp\">\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Remaining Quantity\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  type=\"text\"\r\n                  name=\"remquantity\"\r\n                  placeholder=\"Remaining Quantity\"\r\n                  required\r\n                />\r\n                <div style={{ background: \"#f8d7da\" }}>\r\n                  {this.state.validationError}\r\n                </div>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Status</Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  as=\"select\"\r\n                  name=\"status\"\r\n                  required\r\n                >\r\n                  <div style={{ background: \"#f8d7da\" }}>\r\n                    {this.state.validationError}\r\n                  </div>\r\n                  <option selected>Pending</option>\r\n                  <option>Completed</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Button\r\n                  className=\"my-1\"\r\n                  style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                  type=\"submit\"\r\n                >\r\n                  Add Details\r\n                </Button>\r\n              </Form.Group>\r\n            </Form>\r\n          </div>\r\n\r\n          <div className=\"col-1\"></div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddPreviousProductionRound;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\ProductionManager\\AddStockDetails.jsx",["831","832","833","834","835"],"import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\r\nimport swal from \"sweetalert\";\r\nimport axios from \"axios\";\r\nimport \"./styles.css\";\r\nimport addorder from \"../../pages/assets/addorderpic.png\";\r\n\r\nclass AddStockDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { snackbaropen: false, snackbarmsg: \"\", categories: [] };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/categories\")\r\n      .then((result) => {\r\n        const categories = result.data;\r\n\r\n        this.setState({ categories: categories });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  handleSubmit(event, props) {\r\n    console.log(event);\r\n    const isValid = this.validate();\r\n    event.preventDefault();\r\n    //alert(event.target.name.value);\r\n\r\n    if (isValid) {\r\n      fetch(\"http://localhost:5000/api/proStock-details\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          username: \"thirnaya\",\r\n        },\r\n        body: JSON.stringify({\r\n          productId: event.target.proId.value,\r\n          productCategory: event.target.productCategory.value,\r\n          //productImage: event.target.filename.value,\r\n          instock: event.target.instock.value,\r\n          quantity: event.target.quantity.value,\r\n          price: event.target.price.value,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then(\r\n          (result) => {\r\n            swal({\r\n              title: \"Order Added Succesfully\",\r\n              icon: \"success\",\r\n              button: \"Done\",\r\n            });\r\n            setTimeout(\r\n              function () {\r\n                window.location.reload();\r\n              }.bind(this),\r\n              1500\r\n            );\r\n          },\r\n          (error) => {\r\n            this.setState({ snackbaropen: true, snackbarmsg: \"Failed\" });\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  validate() {\r\n    let validationError = \"\";\r\n\r\n    if (!this.state.validationError) {\r\n      validationError = \"This Field Cannot Be Blank\";\r\n    }\r\n\r\n    if (validationError) {\r\n      this.setState({ validationError: validationError });\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"heading\">Add Stock Details</h1>\r\n\r\n        <div className=\"center\">\r\n          <img src={addorder} alt=\"leavepic\" />\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n\r\n          <div className=\"col\">\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Form.Group>\r\n                <Form.Group controlId=\"proId\">\r\n                  <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                    Product Id\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    style={{ border: \"1px solid #050139\" }}\r\n                    type=\"text\"\r\n                    name=\"proId\"\r\n                    placeholder=\"Product Id\"\r\n                    required\r\n                  />\r\n                  <div style={{ background: \"#f8d7da\" }}>\r\n                    {this.state.validationError}\r\n                  </div>\r\n                </Form.Group>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Product Category\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  as=\"select\"\r\n                  name=\"productCategory\"\r\n                  required\r\n                >\r\n                  <div style={{ background: \"#f8d7da\" }}>\r\n                    {this.state.validationError}\r\n                  </div>\r\n                  {this.state.categories.map((i) => (\r\n                    <option key={i._id}>{i.categoryName}</option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Instock</Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  as=\"select\"\r\n                  name=\"instock\"\r\n                  required\r\n                >\r\n                  <div style={{ background: \"#f8d7da\" }}>\r\n                    {this.state.validationError}\r\n                  </div>\r\n                  <option selected>Instock</option>\r\n                  <option>Out Of Stock</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"quantity\">\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Quantity</Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  type=\"text\"\r\n                  name=\"quantity\"\r\n                  placeholder=\"Quantity\"\r\n                  required\r\n                />\r\n                <div style={{ background: \"#f8d7da\" }}>\r\n                  {this.state.validationError}\r\n                </div>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"price\">\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Price</Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  type=\"text\"\r\n                  name=\"price\"\r\n                  placeholder=\"Price\"\r\n                  required\r\n                />\r\n                <div style={{ background: \"#f8d7da\" }}>\r\n                  {this.state.validationError}\r\n                </div>\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Button\r\n                  className=\"my-1\"\r\n                  style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                  type=\"submit\"\r\n                >\r\n                  Add Stock Details\r\n                </Button>\r\n              </Form.Group>\r\n            </Form>\r\n          </div>\r\n\r\n          <div className=\"col-1\"></div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddStockDetails;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\ProductionManager\\VIewPreviousProductionRound.jsx",["836","837","838","839"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\r\nimport { PreviousProductionRoundTable } from \"../../components/ProductionManager/Tabales/PreviousProductionRoundTable\";\r\nimport SearchBox from \"../../components/ProductionManager/common/searchBox\";\r\nimport \"./styles.css\";\r\nimport viewpic from \"../../pages/assets/viewpic4.png\";\r\n\r\nclass VIewPreviousProductionRound extends Component {\r\n  state = {\r\n    preproductionRound: [],\r\n    addModalShow: false,\r\n    searchQuery: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/prevProRound-details\")\r\n      .then((result) => {\r\n        const preproductionRound = result.data;\r\n\r\n        this.setState({ preproductionRound: preproductionRound });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n    });\r\n  };\r\n\r\n  filteredData() {\r\n    const { searchQuery, preproductionRound } = this.state;\r\n\r\n    let filtered = [];\r\n\r\n    if (searchQuery) {\r\n      filtered = preproductionRound.filter((r) =>\r\n        r.productCategory.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else {\r\n      filtered = preproductionRound;\r\n    }\r\n\r\n    return filtered;\r\n  }\r\n\r\n  render() {\r\n    //take the filtered list\r\n    let filtered = this.filteredData();\r\n\r\n    console.log(filtered);\r\n\r\n    let AddModelClose = () => this.setState({ addModalShow: false });\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"heading\">View Previous Production Round Details</h1>\r\n\r\n        <div className=\"center\">\r\n          <img src={viewpic} alt=\"leavepic\" />\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n                <SearchBox onChange={this.handleSearch} placeHolder=\"Search\" />\r\n            </div>\r\n            <div className=\"col-md-3\"></div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-2\"></div>\r\n          <div className=\"col\">\r\n            {/**pass the filtered data */}\r\n            <PreviousProductionRoundTable preproductionRound={filtered} />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VIewPreviousProductionRound;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\ProductionManager\\ViewFeedback.jsx",["840","841","842"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\r\nimport { FeedbackTable } from \"../../components/ProductionManager/Tabales/FeedbackTable\";\r\nimport \"./styles.css\";\r\nimport viewpic from \"../../pages/assets/viewpic.png\";\r\n\r\nclass ViewFeedback extends Component {\r\n  state = {\r\n    FeedbackList: [],\r\n    addModalShow: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/apifeedback-details/\")\r\n      .then((result) => {\r\n        const FeedbackList = result.data;\r\n\r\n        this.setState({ FeedbackList: FeedbackList });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"heading\">View Feedback List</h1>\r\n\r\n        <div className=\"center\">\r\n          <img src={viewpic} alt=\"leavepic\" />\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-2\"></div>\r\n          <div className=\"col\">\r\n            <FeedbackTable FeedbackList={this.state.FeedbackList} />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewFeedback;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\ProductionManager\\ViewOrderDetails.jsx",["843","844","845","846"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\r\nimport { OrderDetailsTable } from \"../../components/ProductionManager/Tabales/OrderDetailsTable\";\r\nimport SearchBox from \"../../components/ProductionManager/common/searchBox\";\r\nimport \"./styles.css\";\r\nimport viewpic from \"../../pages/assets/viewpic.png\";\r\n\r\nclass ViewOrderDetails extends Component {\r\n  state = {\r\n    orderDetails: [],\r\n    addModalShow: false,\r\n    searchQuery: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/order-details\")\r\n      .then((result) => {\r\n        const orderDetails = result.data;\r\n\r\n        this.setState({ orderDetails: orderDetails });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n    });\r\n  };\r\n\r\n  filteredData() {\r\n    const { searchQuery, orderDetails } = this.state;\r\n\r\n    let filtered = [];\r\n\r\n    if (searchQuery) {\r\n      filtered = orderDetails.filter((r) =>\r\n        r.productCategory.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else {\r\n      filtered = orderDetails;\r\n    }\r\n\r\n    return filtered;\r\n  }\r\n\r\n  render() {\r\n    //take the filtered list\r\n    let filtered = this.filteredData();\r\n\r\n    console.log(filtered);\r\n\r\n    let AddModelClose = () => this.setState({ addModalShow: false });\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"heading\">View Order Details</h1>\r\n\r\n        <div className=\"center\">\r\n          <img src={viewpic} alt=\"leavepic\" />\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n                <SearchBox onChange={this.handleSearch} placeHolder=\"Search\" />\r\n            </div>\r\n            <div className=\"col-md-3\"></div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-2\"></div>\r\n          <div className=\"col\">\r\n            {/**pass the filtered data */}\r\n            <OrderDetailsTable orderDetails={filtered} />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewOrderDetails;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\ProductionManager\\ProManagerDashboard.jsx",["847","848","849"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\r\nimport \"../ProductionManager/dashboard.css\";\r\nimport hello from \"../assets/hello.png\";\r\nimport clock from \"../assets/clock.png\";\r\nimport Clock from \"../../components/ProductionManager/common/clock\";\r\nimport generatePDF from \"../../components/ProductionManager/util/reportGenerator\";\r\nimport generateacceptedPDF from \"../../components/ProductionManager/util/acceprtedreportGenerator\";\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    factoryDetails: [],\r\n    user_name: \"\",\r\n    addModalShow: true,\r\n    productionRound: [],\r\n    acceptedRounds: [],\r\n    rejectedRounds: [],\r\n    orderCount: [],\r\n    productionRoundCount: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/newProRound-details\")\r\n      .then((result) => {\r\n        const productionRound = result.data;\r\n\r\n        this.setState({ productionRound: productionRound });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n\r\n    const user_name = localStorage.getItem(\"user_full_name\");\r\n    this.setState({ user_name: user_name });\r\n\r\n    axios\r\n      .get(\"http://localhost:5000/api/order-details\")\r\n      .then((result) => {\r\n        const orders = result.data;\r\n\r\n        const accepted = orders.filter((order) => order.status === \"Accepted\");\r\n        const rejected = orders.filter((order) => order.status === \"Rejected\");\r\n\r\n        console.log(accepted);\r\n        console.log(rejected);\r\n        this.setState({ acceptedRounds: accepted, rejectedRounds: rejected });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n\r\n    axios\r\n      .get(\"http://localhost:5000/api/order-details\")\r\n      .then((result) => {\r\n        const orderCount = result.data;\r\n\r\n        this.setState({ orderCount: orderCount });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n\r\n    axios\r\n      .get(\"http://localhost:5000/api/newProRound-details\")\r\n      .then((result) => {\r\n        const productionRoundCount = result.data;\r\n\r\n        this.setState({ productionRoundCount: productionRoundCount });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user_full_name\");\r\n    localStorage.removeItem(\"user_email\");\r\n    localStorage.removeItem(\"is_login\");\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    const { productionRound, acceptedRounds, rejectedRounds } = this.state;\r\n    let AddModelClose = () => this.setState({ addModalShow: false });\r\n    return (\r\n      <React.Fragment>\r\n        <ButtonToolbar>\r\n          {/* <AddFactoryDetailsModal\r\n                        show={this.state.addModalShow && this.state.factoryDetails.length == 0}\r\n                        onHide={AddModelClose}\r\n                    /> */}\r\n        </ButtonToolbar>\r\n        <main>\r\n          <div className=\"main__container\">\r\n            {/* <!-- MAIN TITLE STARTS HERE --> */}\r\n\r\n            <div className=\"main__title\">\r\n              <img src={hello} alt=\"hello\" />\r\n              <div className=\"main__greeting\">\r\n                <h1>Hello, {this.state.user_name}</h1>\r\n                <p>Welcome to your profile.</p>\r\n              </div>\r\n              <button\r\n                style={{\r\n                  backgroundColor: \"#7121AD\",\r\n                  color: \"white\",\r\n                  width: \"100px\",\r\n                }}\r\n                onClick={this.logout}\r\n              >\r\n                Log Out\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"charts\">\r\n              <div className=\"charts__left\">\r\n                <div className=\"charts__left__title\">\r\n                  <div>\r\n                    <h1>Date and Time</h1>\r\n                  </div>\r\n                  <i className=\"fa fa-usd\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className=\"row mt-5\">\r\n                  <div className=\"col-md-6\">\r\n                    <img src={clock} alt=\"clock\" />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <Clock />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"charts__right\">\r\n                <div className=\"charts__right__title\">\r\n                  <div>\r\n                    <h1>Report Genaration</h1>\r\n                  </div>\r\n                  <i className=\"fa fa-usd\" aria-hidden=\"true\"></i>\r\n                </div>\r\n\r\n                <div className=\"charts__right__cards\">\r\n                  <div className=\"card1\">\r\n                    <button onClick={() => generatePDF(productionRound)}>\r\n                      <h1>Production Round Details Report</h1>\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"card2\">\r\n                    <button onClick={() => generateacceptedPDF(acceptedRounds)}>\r\n                      <h1>Accepted Order Details Report</h1>\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"card3\">\r\n                    <button onClick={() => generateacceptedPDF(rejectedRounds)}>\r\n                      <h1>Rejected Order Details Report</h1>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* <!-- MAIN TITLE ENDS HERE --> */}\r\n\r\n            {/* <!-- MAIN CARDS STARTS HERE --> */}\r\n            <div className=\"main__cards\">\r\n              <div className=\"carda\">\r\n                <div className=\"card_inner\">\r\n                  <p className=\"text-primary-p\">Number Of Orders</p>\r\n                  <span className=\"font-bold text-title\">\r\n                    {this.state.orderCount.length}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"cardd\">\r\n                <div className=\"card_inner\">\r\n                  <p className=\"text-primary-p\">No Of Production Rounds</p>\r\n                  <span className=\"font-bold text-title\">\r\n                    {this.state.productionRoundCount.length}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <!-- MAIN CARDS ENDS HERE --> */}\r\n\r\n            {/* <!-- CHARTS STARTS HERE --> */}\r\n\r\n            {/* <!-- CHARTS ENDS HERE --> */}\r\n          </div>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\WholesaleBuyer\\wholesalBuyerDashboard.jsx",["850","851","852"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\r\nimport \"../WholesaleBuyer/dashboard.css\";\r\nimport hello from \"../assets/hello.png\";\r\nimport clock from \"../assets/clock.png\";\r\nimport Clock from \"../../components/ProductionManager/common/clock\";\r\nimport generateacceptedPDF from \"../../components/WholeSaleBuyer/util/acceprtedreportGenerator\";\r\nclass Dashboard extends Component {\r\n  state = {\r\n    user_name: \"\",\r\n    addModalShow: true,\r\n    factoryDetails: [],\r\n    orderCount: [],\r\n    acceptedRounds: [],\r\n    rejectedRounds: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/factory-details\")\r\n      .then((result) => {\r\n        const factoryDetails = result.data;\r\n\r\n        this.setState({ factoryDetails: factoryDetails });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n\r\n    const user_name = localStorage.getItem(\"user_full_name\");\r\n    this.setState({ user_name: user_name });\r\n\r\n    axios\r\n      .get(\"http://localhost:5000/api/order-details\")\r\n      .then((result) => {\r\n        const orders = result.data;\r\n\r\n        const accepted = orders.filter((order) => order.status === \"Accepted\");\r\n        const rejected = orders.filter((order) => order.status === \"Rejected\");\r\n\r\n        console.log(accepted);\r\n        console.log(rejected);\r\n        this.setState({ acceptedRounds: accepted, rejectedRounds: rejected });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n\r\n    axios\r\n      .get(\"http://localhost:5000/api/order-details\")\r\n      .then((result) => {\r\n        const orderCount = result.data;\r\n\r\n        this.setState({ orderCount: orderCount });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user_full_name\");\r\n    localStorage.removeItem(\"user_email\");\r\n    localStorage.removeItem(\"is_login\");\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    const { acceptedRounds, rejectedRounds } = this.state;\r\n    let AddModelClose = () => this.setState({ addModalShow: false });\r\n    return (\r\n      <React.Fragment>\r\n        <ButtonToolbar>\r\n          {/* <AddFactoryDetailsModal\r\n                        show={this.state.addModalShow && this.state.factoryDetails.length == 0}\r\n                        onHide={AddModelClose}\r\n                    /> */}\r\n        </ButtonToolbar>\r\n        <main>\r\n          <div className=\"main__container\">\r\n            {/* <!-- MAIN TITLE STARTS HERE --> */}\r\n\r\n            <div className=\"main__title\">\r\n              <img src={hello} alt=\"hello\" />\r\n              <div className=\"main__greeting\">\r\n                <h1>Hello, {this.state.user_name}</h1>\r\n                <p>Welcome to your profile.</p>\r\n              </div>\r\n              <button\r\n                style={{\r\n                  backgroundColor: \"#7121AD\",\r\n                  color: \"white\",\r\n                  width: \"100px\",\r\n                }}\r\n                onClick={this.logout}\r\n              >\r\n                Log Out\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"charts\">\r\n              <div className=\"charts__left\">\r\n                <div className=\"charts__left__title\">\r\n                  <div>\r\n                    <h1>Date and Time</h1>\r\n                  </div>\r\n                  <i className=\"fa fa-usd\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className=\"row mt-5\">\r\n                  <div className=\"col-md-6\">\r\n                    <img src={clock} alt=\"clock\" />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <Clock />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"charts__right\">\r\n                <div className=\"charts__right__title\">\r\n                  <div>\r\n                    <h1>Report Genaration</h1>\r\n                  </div>\r\n                  <i className=\"fa fa-usd\" aria-hidden=\"true\"></i>\r\n                </div>\r\n\r\n                <div className=\"charts__right__cards\">\r\n                  <div className=\"card1\">\r\n                    <button onClick={() => generateacceptedPDF(acceptedRounds)}>\r\n                      <h1>Order Details Report</h1>\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"card2\">\r\n                    <button onClick={() => generateacceptedPDF(rejectedRounds)}>\r\n                      <h1>Rejected Order Details Report</h1>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* <!-- MAIN TITLE ENDS HERE --> */}\r\n\r\n            {/* <!-- MAIN CARDS STARTS HERE --> */}\r\n            <div className=\"main__cards\">\r\n              <div className=\"carda\">\r\n                <div className=\"card_inner\">\r\n                  <p className=\"text-primary-p\">Number Of Pending Orders</p>\r\n                  <span className=\"font-bold text-title\">\r\n                    {this.state.orderCount.length}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"cardd\">\r\n                <div className=\"card_inner\">\r\n                  <p className=\"text-primary-p\">No Of Rejected Orders</p>\r\n                  <span className=\"font-bold text-title\">\r\n                    {this.state.orderCount.length}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"cardd\">\r\n                <div className=\"card_inner\">\r\n                  <p className=\"text-primary-p\">No Of Pending Orders</p>\r\n                  <span className=\"font-bold text-title\">\r\n                    {this.state.orderCount.length}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <!-- MAIN CARDS ENDS HERE --> */}\r\n\r\n            {/* <!-- CHARTS STARTS HERE --> */}\r\n\r\n            {/* <!-- CHARTS ENDS HERE --> */}\r\n          </div>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\WholesaleBuyer\\FeedbackPage.jsx",["853","854","855","856","857"],"import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\r\nimport swal from \"sweetalert\";\r\nimport axios from \"axios\";\r\nimport \"./styles.css\";\r\nimport addorder from \"../../pages/assets/addorderpic.png\";\r\n\r\nclass FeedbackPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { snackbaropen: false, snackbarmsg: \"\", categories: [] };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/categories\")\r\n      .then((result) => {\r\n        const categories = result.data;\r\n\r\n        this.setState({ categories: categories });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  handleSubmit(event, props) {\r\n    console.log(event);\r\n    const isValid = this.validate();\r\n    event.preventDefault();\r\n    //alert(event.target.name.value);\r\n\r\n    if (isValid) {\r\n      fetch(\"http://localhost:5000/api/feedback-details\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          username: \"thirnaya\",\r\n        },\r\n        body: JSON.stringify({\r\n          email: event.target.email.value,\r\n          mobileNumber: event.target.mobileNumber.value,\r\n          feedback: event.target.feedback.value,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then(\r\n          (result) => {\r\n            swal({\r\n              title: \"New Production Round Details Added Succesfully\",\r\n              icon: \"success\",\r\n              button: \"Done\",\r\n            });\r\n            setTimeout(\r\n              function () {\r\n                window.location.reload();\r\n              }.bind(this),\r\n              1500\r\n            );\r\n          },\r\n          (error) => {\r\n            this.setState({ snackbaropen: true, snackbarmsg: \"Failed\" });\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  validate() {\r\n    let validationError = \"\";\r\n\r\n    if (!this.state.validationError) {\r\n      validationError = \"This Field Cannot Be Blank\";\r\n    }\r\n\r\n    if (validationError) {\r\n      this.setState({ validationError: validationError });\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"heading\">Add Feedback</h1>\r\n\r\n        <div className=\"center\">\r\n          <img src={addorder} alt=\"leavepic\" />\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n\r\n          <div className=\"col\">\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Email</Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                  required\r\n                />\r\n                <div style={{ background: \"#f8d7da\" }}>\r\n                  {this.state.validationError}\r\n                </div>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"mobileNumber\">\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Mobile Number\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  type=\"text\"\r\n                  name=\"mobileNumber\"\r\n                  placeholder=\"Mobile Number\"\r\n                  required\r\n                />\r\n                <div style={{ background: \"#f8d7da\" }}>\r\n                  {this.state.validationError}\r\n                </div>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"feedback\">\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Feedback</Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  type=\"text\"\r\n                  name=\"feedback\"\r\n                  placeholder=\"Feedback\"\r\n                  required\r\n                />\r\n                <div style={{ background: \"#f8d7da\" }}>\r\n                  {this.state.validationError}\r\n                </div>\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Button\r\n                  className=\"my-1\"\r\n                  style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                  type=\"submit\"\r\n                >\r\n                  Add Feedback\r\n                </Button>\r\n              </Form.Group>\r\n            </Form>\r\n          </div>\r\n\r\n          <div className=\"col-1\"></div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedbackPage;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\SuperAdmin\\login.jsx",["858","859","860"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport img1 from \"./fac1.png\";\r\nimport img2 from \"./signIn1.webp\";\r\n\r\nclass login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      addModalShow: false,\r\n    };\r\n    this.login = this.login.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/login\")\r\n      .then((result) => {\r\n        const user = result.data;\r\n\r\n        this.setState({ users: user });\r\n        // console.log(this.state.users.length);\r\n      })\r\n      .catch((err) => console.log(err.message));     \r\n  }\r\n\r\n  login(event) {\r\n    this.state.users.forEach((element) => {\r\n      if (element.email == event.target.email.value) {\r\n        const password = element.password;\r\n        if (password == event.target.password.value) {\r\n          const user_role = element.userRole;\r\n          localStorage.setItem(\"user_role\", user_role);\r\n          const user_full_name = element.fullName;\r\n          localStorage.setItem(\"user_full_name\", user_full_name);\r\n          localStorage.setItem(\"user_email\", element.email);\r\n          localStorage.setItem(\"is_login\", \"1\");\r\n          //   if(user_role == 'Super Admin'){\r\n          //       this.props.history.push('/super-admin-dashboard');\r\n          //       window.location.reload();\r\n          //   }\r\n          //   if(user_role == 'employee'){\r\n          //       this.props.history.push('/employee-dashboard');\r\n          //       window.location.reload();\r\n          //   }\r\n          //   if(user_role == 'production team member'){\r\n          //     this.props.history.push('/production-manager-dashboard');\r\n          //     window.location.reload();\r\n          // }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row mt-5\">\r\n          <div className=\"col-md-4\">\r\n            <img src={img1} alt=\"img1\" />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <form onSubmit={this.login} style={{ marginTop: \"150px\" }}>\r\n              <h3>Sign In</h3>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Email address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <div className=\"custom-control custom-checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"custom-control-input\"\r\n                    id=\"customCheck1\"\r\n                  />\r\n                  <label\r\n                    className=\"custom-control-label\"\r\n                    htmlFor=\"customCheck1\"\r\n                  >\r\n                    Remember me\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n              <button\r\n                style={{\r\n                  backgroundColor: \"#7121AD\",\r\n                  color: \"white\",\r\n                  width: \"330px\",\r\n                }}\r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                Log In\r\n              </button>\r\n              <p className=\"forgot-password text-right\">\r\n                Forgot <a href=\"#\">password?</a>\r\n              </p>\r\n            </form>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <img src={img2} alt=\"img1\" style={{ marginTop: \"450px\" }} />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default login;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\WholesaleBuyer\\ReturnOrder.jsx",["861","862","863","864","865"],"import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\r\nimport swal from \"sweetalert\";\r\nimport axios from \"axios\";\r\nimport \"./styles.css\";\r\nimport addorder from \"../../pages/assets/addorderpic.png\";\r\n\r\nclass ReturnOrder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { snackbaropen: false, snackbarmsg: \"\", categories: [] };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/categories\")\r\n      .then((result) => {\r\n        const categories = result.data;\r\n\r\n        this.setState({ categories: categories });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  handleSubmit(event, props) {\r\n    console.log(event);\r\n    const isValid = this.validate();\r\n    event.preventDefault();\r\n    //alert(event.target.name.value);\r\n\r\n    if (isValid) {\r\n      fetch(\"http://localhost:5000/api/return-order-details\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          username: \"thirnaya\",\r\n        },\r\n        body: JSON.stringify({\r\n          orderId: event.target.orderId.value,\r\n          email: event.target.email.value,\r\n          returnReason: event.target.returnReason.value,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then(\r\n          (result) => {\r\n            swal({\r\n              title: \"New Production Round Details Added Succesfully\",\r\n              icon: \"success\",\r\n              button: \"Done\",\r\n            });\r\n            setTimeout(\r\n              function () {\r\n                window.location.reload();\r\n              }.bind(this),\r\n              1500\r\n            );\r\n          },\r\n          (error) => {\r\n            this.setState({ snackbaropen: true, snackbarmsg: \"Failed\" });\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  validate() {\r\n    let validationError = \"\";\r\n\r\n    if (!this.state.validationError) {\r\n      validationError = \"This Field Cannot Be Blank\";\r\n    }\r\n\r\n    if (validationError) {\r\n      this.setState({ validationError: validationError });\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"heading\">Return An Order</h1>\r\n\r\n        <div className=\"center\">\r\n          <img src={addorder} alt=\"leavepic\" />\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n\r\n          <div className=\"col\">\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Form.Group controlId=\"orderId\">\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Order Id</Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  type=\"text\"\r\n                  name=\"orderId\"\r\n                  placeholder=\"Order Id\"\r\n                />\r\n                <div style={{ background: \"#f8d7da\" }}>\r\n                  {this.state.validationError}\r\n                </div>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Email</Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                />\r\n                <div style={{ background: \"#f8d7da\" }}>\r\n                  {this.state.validationError}\r\n                </div>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"returnReason\">\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Reason To Return\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  type=\"text\"\r\n                  name=\"returnReason\"\r\n                  placeholder=\"Reason To Return\"\r\n                />\r\n                <div style={{ background: \"#f8d7da\" }}>\r\n                  {this.state.validationError}\r\n                </div>\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Button\r\n                  className=\"my-1\"\r\n                  style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                  type=\"submit\"\r\n                >\r\n                  Add Details\r\n                </Button>\r\n              </Form.Group>\r\n            </Form>\r\n          </div>\r\n\r\n          <div className=\"col-1\"></div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReturnOrder;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\WholesaleBuyer\\ViewPlacedOrderDetails.jsx",["866","867","868","869"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\r\nimport { OrderDetailsTable } from \"../../components/WholeSaleBuyer/Tabales/OrderDetailsTable\";\r\nimport SearchBox from \"../../components/WholeSaleBuyer/common/searchBox\";\r\nimport \"./styles.css\";\r\nimport viewpic from \"../../pages/assets/viewpic.png\";\r\n\r\nclass ViewPlacedOrderDetails extends Component {\r\n  state = {\r\n    orderDetails: [],\r\n    addModalShow: false,\r\n    searchQuery: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/order-details\")\r\n      .then((result) => {\r\n        const orderDetails = result.data;\r\n\r\n        this.setState({ orderDetails: orderDetails });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n    });\r\n  };\r\n\r\n  filteredData() {\r\n    const { searchQuery, orderDetails } = this.state;\r\n\r\n    let filtered = [];\r\n\r\n    if (searchQuery) {\r\n      filtered = orderDetails.filter((r) =>\r\n        r.productCategory.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else {\r\n      filtered = orderDetails;\r\n    }\r\n\r\n    return filtered;\r\n  }\r\n\r\n  render() {\r\n    //take the filtered list\r\n    let filtered = this.filteredData();\r\n\r\n    console.log(filtered);\r\n\r\n    let AddModelClose = () => this.setState({ addModalShow: false });\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"heading\">View Order Details</h1>\r\n\r\n        <div className=\"center\">\r\n          <img src={viewpic} alt=\"leavepic\" />\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n                <SearchBox onChange={this.handleSearch} placeHolder=\"Search\" />\r\n            </div>\r\n            <div className=\"col-md-3\"></div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-2\"></div>\r\n          <div className=\"col\">\r\n            {/**pass the filtered data */}\r\n            <OrderDetailsTable orderDetails={filtered} />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewPlacedOrderDetails;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\WholesaleBuyer\\AddOrder.jsx",["870","871","872","873","874"],"import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\r\nimport swal from \"sweetalert\";\r\nimport axios from \"axios\";\r\nimport \"./styles.css\";\r\nimport addorder from \"../../pages/assets/addorderpic.png\";\r\n\r\nclass AddOrder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { snackbaropen: false, snackbarmsg: \"\", categories: [] };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/categories\")\r\n      .then((result) => {\r\n        const categories = result.data;\r\n\r\n        this.setState({ categories: categories });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  handleSubmit(event, props) {\r\n    console.log(event);\r\n    const isValid = this.validate();\r\n    event.preventDefault();\r\n    //alert(event.target.name.value);\r\n\r\n    if (isValid) {\r\n      fetch(\"http://localhost:5000/api/order-details\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          username: \"thirnaya\",\r\n        },\r\n        body: JSON.stringify({\r\n          orderId: event.target.orderId.value,\r\n          productCategory: event.target.productCategory.value,\r\n          buyerName: event.target.buyerName.value,\r\n          email: event.target.email.value,\r\n          quantity: event.target.quantity.value,\r\n          paymentMethode: event.target.paymentMethode.value,\r\n          status: event.target.status.value,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then(\r\n          (result) => {\r\n            swal({\r\n              title: \"New Production Round Details Added Succesfully\",\r\n              icon: \"success\",\r\n              button: \"Done\",\r\n            });\r\n            setTimeout(\r\n              function () {\r\n                window.location.reload();\r\n              }.bind(this),\r\n              1500\r\n            );\r\n          },\r\n          (error) => {\r\n            this.setState({ snackbaropen: true, snackbarmsg: \"Failed\" });\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  validate() {\r\n    let validationError = \"\";\r\n\r\n    if (!this.state.validationError) {\r\n      validationError = \"This Field Cannot Be Blank\";\r\n    }\r\n\r\n    if (validationError) {\r\n      this.setState({ validationError: validationError });\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"heading\">Add Order Details</h1>\r\n\r\n        <div className=\"center\">\r\n          <img src={addorder} alt=\"leavepic\" />\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n\r\n          <div className=\"col\">\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Form.Group>\r\n                <Form.Group controlId=\"orderId\">\r\n                  <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                    Order Id\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    style={{ border: \"1px solid #050139\" }}\r\n                    type=\"text\"\r\n                    name=\"orderId\"\r\n                    placeholder=\" Order Id\"\r\n                    required\r\n                  />\r\n                  <div style={{ background: \"#f8d7da\" }}>\r\n                    {this.state.validationError}\r\n                  </div>\r\n                </Form.Group>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Product Category\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  as=\"select\"\r\n                  name=\"productCategory\"\r\n                  required\r\n                >\r\n                  <div style={{ background: \"#f8d7da\" }}>\r\n                    {this.state.validationError}\r\n                  </div>\r\n                  {this.state.categories.map((i) => (\r\n                    <option key={i._id}>{i.categoryName}</option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"buyerName\">\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Buyer Name\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  type=\"text\"\r\n                  name=\"buyerName\"\r\n                  placeholder=\"Buyer Name\"\r\n                  required\r\n                />\r\n                <div style={{ background: \"#f8d7da\" }}>\r\n                  {this.state.validationError}\r\n                </div>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Email</Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                  required\r\n                />\r\n                <div style={{ background: \"#f8d7da\" }}>\r\n                  {this.state.validationError}\r\n                </div>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"quantity\">\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Quantity</Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  type=\"text\"\r\n                  name=\"quantity\"\r\n                  placeholder=\"Quantity\"\r\n                  required\r\n                />\r\n                <div style={{ background: \"#f8d7da\" }}>\r\n                  {this.state.validationError}\r\n                </div>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"paymentMethode\">\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Payment Methode\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  type=\"text\"\r\n                  name=\"paymentMethode\"\r\n                  placeholder=\"Payment Methode\"\r\n                  required\r\n                />\r\n                <div style={{ background: \"#f8d7da\" }}>\r\n                  {this.state.validationError}\r\n                </div>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Status</Form.Label>\r\n                <Form.Control\r\n                  style={{ border: \"1px solid #050139\" }}\r\n                  as=\"select\"\r\n                  name=\"status\"\r\n                  required\r\n                >\r\n                  <div style={{ background: \"#f8d7da\" }}>\r\n                    {this.state.validationError}\r\n                  </div>\r\n                  <option selected>Pending</option>\r\n                  <option>Completed</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Button\r\n                  className=\"my-1\"\r\n                  style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                  type=\"submit\"\r\n                >\r\n                  Add Order\r\n                </Button>\r\n              </Form.Group>\r\n            </Form>\r\n          </div>\r\n\r\n          <div className=\"col-1\"></div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddOrder;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\FinanceTeamMember\\BillType.jsx",["875"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport { AddNewBillTypeModal } from '../../components/FinanceTeamMember/Modals/AddNewBillTypeModal';\r\nimport {BillTypesTable} from \"../../components/FinanceTeamMember/Tables/BillTypesTable\";\r\nimport \"./styles.css\";\r\nimport BillTypeImg from \"./assert/img12.jpeg\"\r\n\r\nclass BillType extends Component {\r\n  state = {\r\n    BillType: [],\r\n    addModalShow: false \r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/bill-type\")\r\n      .then((result) => {\r\n        const BillType = result.data;\r\n\r\n        this.setState({ BillType: BillType });\r\n      })  \r\n      .catch((err) => console.log(err.message));\r\n  }\r\n    \r\n\r\n  render() {\r\n    let AddModelClose = () => this.setState({ addModalShow: false })\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n\r\n        <div className=\"col\">\r\n        <h1 className=\"heading\">Bill Types</h1>\r\n        <div className=\"center\">\r\n          <img src={BillTypeImg} alt=\"billsPic\" />\r\n        </div>\r\n        <ButtonToolbar>\r\n                    <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                    className=\"btn btn-lg\"\r\n                        onClick={() => this.setState({ addModalShow: true })}\r\n                    >Add Bill Type\r\n                    </Button>\r\n                    <AddNewBillTypeModal\r\n                        show={this.state.addModalShow}\r\n                        onHide={AddModelClose}\r\n                    />\r\n          </ButtonToolbar>\r\n            <BillTypesTable filteredItems={this.state.BillType} />\r\n            </div>\r\n            </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default BillType;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\FinanceTeamMember\\Dashboard.jsx",["876","877","878","879","880","881","882"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport Chart from \"../charts/chart\";\r\nimport \"./dashboard.css\";\r\nimport hello from \"../assets/hello.png\";\r\nimport clock from \"../assets/clock.png\";\r\nimport { AddFactoryDetailsModal } from '../../components/SuperAdmin/Modals/AddFactoryDetailsModal';\r\nimport Clock from \"./clock\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n   \r\nclass Dashboard extends Component {  \r\n  constructor(props) { \r\n    super(props);\r\n    this.state = {\r\n      factoryDetails: [],\r\n      matBill:[],\r\n      bills:[],\r\n      billtype:[],\r\n      users:[],\r\n      user_name:'',\r\n      addModalShow: true\r\n      \r\n    };\r\n    // this.genarateMatCost = this.genarateMatCost.bind(this);\r\n}\r\n  \r\n  \r\n\r\n  componentDidMount() {\r\n    axios\r\n    .get(\"http://localhost:5000/api/factory-details\")\r\n    .then((result) => {\r\n      const factoryDetails = result.data;\r\n\r\n      this.setState({ factoryDetails: factoryDetails });\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n\r\n    const user_name = localStorage.getItem(\"user_full_name\");\r\n    this.setState({ user_name: user_name });\r\n    \r\n    axios\r\n    .get(\"http://localhost:5000/api/material-cost\")\r\n    .then((result) => {\r\n      const matBill = result.data;\r\n\r\n      this.setState({ matBill: matBill });\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n\r\n    axios\r\n    .get(\"http://localhost:5000/api/bills\")\r\n    .then((result) => {\r\n      const bills = result.data;\r\n\r\n      this.setState({ bills: bills });\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n   \r\n    axios\r\n    .get(\"http://localhost:5000/api/bill-type\")\r\n    .then((result) => {\r\n      const billtype = result.data;\r\n\r\n      this.setState({ billtype: billtype });\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n\r\n  }\r\n\r\n   \r\n  logout(){\r\n    localStorage.removeItem('user_full_name');\r\n    localStorage.removeItem('user_email');\r\n    localStorage.removeItem('is_login');\r\n    window.location.reload();\r\n  }\r\n  genarateMatCost(){\r\n    const doc = new jsPDF();\r\n    const tableColumn = [ \"matirial Code\", \"matirial BillNo\", \"date\", \"amount\"];\r\n    const tableRows = [];\r\n    axios\r\n    .get(\"http://localhost:5000/api/material-cost/\")\r\n    .then((result) => {\r\n      const matCost = result.data;\r\n            matCost.forEach(ticket => {\r\n              const ticketData = [\r\n                ticket.matirialCode,\r\n                ticket.matirialBillNo,\r\n                ticket.date,\r\n                ticket.amount,\r\n                // called date-fns to format the date on the ticket\r\n              //   format(new Date(), \"yyyy-MM-dd\")\r\n              ];\r\n              // push each tickcet's info into a row\r\n              tableRows.push(ticketData);\r\n              \r\n            });\r\n            // startY is basically margin-top\r\n            doc.autoTable(tableColumn, tableRows, { startY: 20 });\r\n            const date = Date().split(\" \");\r\n            // we use a date string to generate our filename.\r\n            \r\n            // ticket title. and margin-top + margin-left\r\n            doc.text(\"Material Cost Report \", 14, 15);\r\n            // we define the name of our PDF file.\r\n            doc.save(`report_cost_finance.pdf`);\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  genarateSalaries(){\r\n    const doc = new jsPDF();\r\n    const tableColumn = [ \"EmpNo\", \"Amount\", \"mounth\"];\r\n    const tableRows = [];\r\n    axios\r\n    .get(\"http://localhost:5000/api/material-cost/\")\r\n    .then((result) => {\r\n      const matCost = result.data;\r\n            matCost.forEach(ticket => {\r\n              const ticketData = [\r\n                ticket.empID,\r\n                ticket.amount,\r\n                ticket.month\r\n                // called date-fns to format the date on the ticket\r\n              //   format(new Date(), \"yyyy-MM-dd\")\r\n              ];\r\n              // push each tickcet's info into a row\r\n              tableRows.push(ticketData);\r\n              \r\n            });\r\n            // startY is basically margin-top\r\n            doc.autoTable(tableColumn, tableRows, { startY: 20 });\r\n            const date = Date().split(\" \");\r\n            // we use a date string to generate our filename.\r\n            \r\n            // ticket title. and margin-top + margin-left\r\n            doc.text(\"All Salaries Report \", 14, 15);\r\n            // we define the name of our PDF file.\r\n            doc.save(`report_salaries_finance.pdf`);\r\n    })\r\n    .catch((err) => console.log(err.message));\r\n  }\r\n \r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n          <main>\r\n            <div className=\"main__container\">\r\n              {/* <!-- MAIN TITLE STARTS HERE --> */}\r\n\r\n              <div className=\"main__title\">\r\n              <img src={hello} alt=\"hello\" />\r\n                <div className=\"main__greeting\">\r\n                  <h1>Hello, {this.state.user_name}</h1>\r\n                  <p>Welcome to your profile.</p>\r\n                </div>\r\n                <button style={{ backgroundColor: \"#7121AD\", color: \"white\" ,width:\"100px\"}} onClick={this.logout}>Log Out</button>\r\n              </div>\r\n\r\n              <div className=\"charts\">\r\n                <div className=\"charts__left\">\r\n                  <div className=\"charts__left__title\">\r\n                    <div>\r\n                      <h1>Date and Time</h1>\r\n                    </div>\r\n                    <i className=\"fa fa-usd\" aria-hidden=\"true\"></i>\r\n                  </div>\r\n                  <div className=\"row mt-5\">\r\n                    <div className=\"col-md-6\">\r\n                      <img src={clock} alt=\"clock\" />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <Clock />\r\n                    </div>\r\n                  </div>\r\n                 \r\n                </div>\r\n\r\n                <div className=\"charts__right\">\r\n                  <div className=\"charts__right__title\">\r\n                    <div>\r\n                      <h1>Report Genaration</h1>\r\n                    </div>\r\n                    <i className=\"fa fa-usd\" aria-hidden=\"true\"></i>\r\n                  </div>\r\n\r\n                  <div className=\"charts__right__cards\">\r\n                 \r\n                      <div className=\"card2\" >\r\n                      <h1 onClick={() => this.genarateMatCost()}>Material Cost Report</h1>\r\n                  </div>\r\n                     \r\n                     \r\n                        <div className=\"card3\" >\r\n                        <h1 onClick={() => this.genarateSalaries()}>All Salaries Report</h1>\r\n                        </div>\r\n                       \r\n                  \r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* <!-- MAIN TITLE ENDS HERE --> */}\r\n\r\n              {/* <!-- MAIN CARDS STARTS HERE --> */}\r\n              <div className=\"main__cards\">\r\n\r\n                \r\n                <div className=\"carda\">\r\n                  <div className=\"card_inner\">\r\n                    <p className=\"text-primary-p\">Number of Material Bills</p>\r\n                    <span className=\"font-bold text-title\">{this.state.matBill.length}</span>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"cardd\">\r\n                  <div className=\"card_inner\">\r\n                    <p className=\"text-primary-p\">No of Bills</p>\r\n                    <span className=\"font-bold text-title\">{this.state.bills.length}</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"carda\">\r\n                  <div className=\"card_inner\">\r\n                    <p className=\"text-primary-p\">Number of Bill Types</p>\r\n                    <span className=\"font-bold text-title\">{this.state.billtype.length}</span>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* <div className=\"cardd\">\r\n                  <div className=\"card_inner\">\r\n                    <p className=\"text-primary-p\">No of Metirial Codes</p>\r\n                    <span className=\"font-bold text-title\">{this.state.matCode.length}</span>\r\n                  </div>\r\n                </div> */}\r\n              </div>\r\n              {/* <!-- MAIN CARDS ENDS HERE --> */}\r\n\r\n              {/* <!-- CHARTS STARTS HERE --> */}\r\n              \r\n              {/* <!-- CHARTS ENDS HERE --> */}\r\n            </div>\r\n          </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\FinanceTeamMember\\Salaries.jsx",["883","884","885","886"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport { AddNewBillTypeModal } from '../../components/FinanceTeamMember/Modals/AddNewBillTypeModal';\r\nimport {SalariesTable} from \"../../components/FinanceTeamMember/Tables/SalariesTable\";\r\nimport \"./styles.css\";\r\nimport BillTypeImg from \"./assert/img5.jpeg\"\r\n\r\nclass Salaries extends Component {\r\n  state = {\r\n    Salaries: [],\r\n    addModalShow: false \r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/temp-salaries/\")\r\n      .then((result) => {\r\n        const Salaries = result.data;\r\n\r\n        this.setState({ Salaries: Salaries });\r\n      })  \r\n      .catch((err) => console.log(err.message));\r\n  }\r\n    \r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n\r\n        <div className=\"col\">\r\n       \r\n        <h1 className=\"heading\">Salaries</h1>\r\n        <div className=\"center\">\r\n          <img src={BillTypeImg} alt=\"billsPic\" />\r\n        </div>\r\n            <SalariesTable filteredItems={this.state.Salaries} />\r\n            </div>\r\n            </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Salaries;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\FinanceTeamMember\\Bills.jsx",["887"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport { AddNewBillModal } from '../../components/FinanceTeamMember/Modals/AddNewBillModal';\r\nimport {BillTables} from \"../../components/FinanceTeamMember/Tables/BillTables\";\r\nimport SearchBox from \"../../components/FinanceTeamMember/Common/searchBox\";\r\nimport \"./styles.css\";\r\nimport BillsImg from \"./assert/img4.jpeg\";\r\n\r\nclass Bills extends Component {\r\n  state = {\r\n    bill: [],\r\n    searchQuery: \"\",\r\n    addModalShow: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/bills\")\r\n      .then((result) => {\r\n        const bill = result.data;\r\n  \r\n        this.setState({ bill: bill });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n    });\r\n  };\r\n\r\n  filteredData() {\r\n    const { searchQuery, bill } = this.state;\r\n\r\n    let filtered = [];\r\n\r\n    if (searchQuery) {\r\n      filtered = bill.filter((r) =>\r\n        r.billNo.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else {\r\n      filtered = bill;\r\n    }\r\n\r\n    return filtered;\r\n  }\r\n\r\n  render() {\r\n    let filtered = this.filteredData();\r\n    console.log(filtered);\r\n    let AddModelClose = () => this.setState({ addModalShow: false })\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n\r\n        <div className=\"col\">\r\n        <h1 className=\"heading\">Bill</h1>\r\n        <div className=\"center\">\r\n          <img src={BillsImg} alt=\"billsPic\" />\r\n        </div>\r\n        <ButtonToolbar>\r\n                    <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                    className=\"btn btn-lg\"\r\n                        onClick={() => this.setState({ addModalShow: true })}\r\n                    >Add Bill\r\n                    </Button>\r\n                    <AddNewBillModal \r\n                        show={this.state.addModalShow}\r\n                        onHide={AddModelClose}\r\n                    />\r\n          </ButtonToolbar>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n                <SearchBox onChange={this.handleSearch} placeHolder=\"Search\" />\r\n            </div>\r\n            <div className=\"col-md-3\"></div>\r\n        </div>\r\n            <BillTables filteredItems={filtered} />\r\n            </div>\r\n            </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};     \r\n\r\nexport default Bills;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\FinanceTeamMember\\MaterialCost.jsx",["888"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport { AddNewMaterialCostBill } from '../../components/FinanceTeamMember/Modals/AddNewMaterialCostBill';\r\nimport {MaterialCostTable} from \"../../components/FinanceTeamMember/Tables/MaterialCostTable\";\r\nimport SearchBox from \"../../components/FinanceTeamMember/Common/searchBox\";\r\nimport \"./styles.css\";\r\nimport BillTypeImg from \"./assert/img11.jpeg\"\r\n\r\nclass MaterialCost extends Component {\r\n  state = {\r\n    materialCost: [],\r\n    searchQuery: \"\",\r\n    addModalShow: false \r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/material-cost/\")\r\n      .then((result) => {\r\n        const materialCost = result.data;\r\n\r\n        this.setState({ materialCost: materialCost });\r\n      })  \r\n      .catch((err) => console.log(err.message));\r\n  }\r\n  handleSearch = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n    });\r\n  };\r\n\r\n  filteredData() {\r\n    const { searchQuery, materialCost } = this.state;\r\n\r\n    let filtered = [];\r\n\r\n    if (searchQuery) {\r\n      filtered = materialCost.filter((r) =>\r\n        r.matirialCode.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else {\r\n      filtered = materialCost;\r\n    }\r\n\r\n    return filtered;\r\n  }\r\n\r\n  render() {\r\n    let filtered = this.filteredData();\r\n    let AddModelClose = () => this.setState({ addModalShow: false })\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n\r\n        <div className=\"col\">\r\n        <h1 className=\"heading\">Bill Types</h1>\r\n        <div className=\"center\">\r\n          <img src={BillTypeImg} alt=\"billsPic\" />\r\n        </div>\r\n        <ButtonToolbar>\r\n                    <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                    className=\"btn btn-lg\"\r\n                        onClick={() => this.setState({ addModalShow: true })}\r\n                    >Add New Material Cost\r\n                    </Button>\r\n                    <AddNewMaterialCostBill\r\n                        show={this.state.addModalShow}\r\n                        onHide={AddModelClose}\r\n                    />\r\n          </ButtonToolbar>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n                <SearchBox onChange={this.handleSearch} placeHolder=\"Search\" />\r\n            </div>\r\n            <div className=\"col-md-3\"></div>\r\n        </div>\r\n            <MaterialCostTable filteredItems={filtered} />\r\n            </div>\r\n            </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MaterialCost;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\FinanceTeamMember\\SalesReports.jsx",["889","890","891","892","893","894","895","896","897","898","899"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar,Row,Col, Card,Form} from 'react-bootstrap';\r\nimport { AddNewBillTypeModal } from '../../components/FinanceTeamMember/Modals/AddNewBillTypeModal';\r\nimport {SalariesTable} from \"../../components/FinanceTeamMember/Tables/SalariesTable\";\r\nimport GenarateSalesReport from \"./services/GenarateSalesReport\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport \"./styles.css\";\r\nimport BillTypeImg from \"./assert/img3.jpeg\"\r\n\r\n\r\nclass SalesReports extends Component {\r\n  state = {\r\n    Bills:[],\r\n    CashBills:[],\r\n    CredirBills:[],\r\n    addModalShow: false \r\n  };\r\n\r\n  handleSubmitforCredit(event) {\r\n    event.preventDefault();\r\n    const doc = new jsPDF();\r\n    const tableColumn = [ \"Bill No\", \"Bill Type\", \"Amount\", \"Date\"];\r\n    // define an empty array of rows\r\n    const tableRows = [];\r\n    axios\r\n          .get(\"http://localhost:5000/api/bills\")\r\n          .then((result) => {\r\n            const Bills = result.data;\r\n            // console.log(Bills);\r\n            const CashBills = [];\r\n            Bills.forEach(ticket => {\r\n              if(ticket.billType == 'Credit Bills' && ticket.month == event.target.monthCredit.value) {\r\n              const ticketData = [\r\n                ticket.billNo,\r\n                ticket.billType,\r\n                ticket.amount,\r\n                ticket.billDate,\r\n                // called date-fns to format the date on the ticket\r\n              //   format(new Date(), \"yyyy-MM-dd\")\r\n              ];\r\n              // push each tickcet's info into a row\r\n              tableRows.push(ticketData);\r\n              }\r\n            });\r\n            // startY is basically margin-top\r\n            doc.autoTable(tableColumn, tableRows, { startY: 20 });\r\n            const date = Date().split(\" \");\r\n            // we use a date string to generate our filename.\r\n            const dateStr = date[0] + date[1] + date[2] + date[3] + date[4];\r\n            // ticket title. and margin-top + margin-left\r\n            doc.text(\"Credit Bills For Month \"+event.target.monthCredit.value, 14, 15);\r\n            // we define the name of our PDF file.\r\n            doc.save(`report_${dateStr}.pdf`);\r\n            \r\n          })\r\n          .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  handleSubmitforCash(event) {\r\n    event.preventDefault();\r\n    const doc = new jsPDF();\r\n    const tableColumn = [ \"Bill No\", \"Bill Type\", \"Amount\", \"Date\"];\r\n    // define an empty array of rows\r\n    const tableRows = [];\r\n    axios\r\n          .get(\"http://localhost:5000/api/bills\")\r\n          .then((result) => {\r\n            const Bills = result.data;\r\n            console.log(Bills);\r\n            const CashBills = [];\r\n            Bills.forEach(ticket => {\r\n              if(ticket.billType == 'Cash Bills' && ticket.month == event.target.monthCash.value) {\r\n              const ticketData = [\r\n                ticket.billNo,\r\n                ticket.billType,\r\n                ticket.amount,\r\n                ticket.billDate,\r\n                // called date-fns to format the date on the ticket\r\n              //   format(new Date(), \"yyyy-MM-dd\")\r\n              ];\r\n              // push each tickcet's info into a row\r\n              tableRows.push(ticketData);\r\n              }\r\n            });\r\n            // startY is basically margin-top\r\n            doc.autoTable(tableColumn, tableRows, { startY: 20 });\r\n            const date = Date().split(\" \");\r\n            // we use a date string to generate our filename.\r\n            const dateStr = date[0] + date[1] + date[2] + date[3] + date[4];\r\n            // ticket title. and margin-top + margin-left\r\n            doc.text(\"Cash Bills For Month \"+event.target.monthCash.value, 14, 15);\r\n            // we define the name of our PDF file.\r\n            doc.save(`report_${dateStr}.pdf`);\r\n            \r\n          })\r\n          .catch((err) => console.log(err.message));\r\n  }\r\n    \r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n\r\n        <div className=\"col\">\r\n        <h1 className=\"heading\">Sales Reports</h1>\r\n        <h2 className=\"heading\">Please Select Month and Generate Reports</h2>\r\n        <div className=\"center\">\r\n          <img src={BillTypeImg} alt=\"billsPic\" />\r\n        </div>\r\n\r\n        <Row>\r\n            <Col sm={6}> \r\n              <Card style={{ width: '36rem',height: '20rem', background: ' #d7bde2', margin: '20px' }}>\r\n                <Card.Body>\r\n                  <Card.Text>\r\n                  <h2 style={{textAlign:\"center\"}}>Credit <br /> Sale <br /> Report </h2>\r\n                   <Form onSubmit={this.handleSubmitforCredit}>\r\n                   <Form.Group>\r\n                        <Form.Label>Month</Form.Label>\r\n                         <Form.Control as=\"select\" required name=\"monthCredit\">\r\n            \r\n                                <option value=\"January\" >January</option>\r\n                                <option value=\"February\" >February</option>\r\n                                <option value=\"February\" >February</option>\r\n                                <option value=\"April\" >April</option>\r\n                                <option value=\"May\" >May</option>\r\n                                <option value=\"June\" >June </option>\r\n                                <option value=\"July\" >July</option>\r\n                                <option value=\"August\" >August</option>\r\n                                <option value=\"September\" >September</option>\r\n                                <option value=\"October\" >October</option>\r\n                                <option value=\"November\" >November</option>\r\n                                <option value=\"December\" >December</option>\r\n                          </Form.Control>\r\n                    </Form.Group>\r\n                    <br /><br />\r\n                    <Form.Group>\r\n                        <Button  style={{ backgroundColor: \"#7121AD\", color: \"white\", marginLeft: 'center' }} variant=\"primary\" type=\"submit\"  className =\"btn-lg\">\r\n                        Generate\r\n                        </Button>\r\n                    </Form.Group>\r\n                   </Form>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col sm={6}> \r\n              <Card style={{ width: '36rem',height: '20rem', background: ' #d7bde2', margin: '20px' }}>\r\n                  <Card.Body>\r\n                  <Card.Text>\r\n                  <h2 style={{textAlign:\"center\"}} >Cash <br /> Sale <br /> Report </h2>\r\n                   <Form onSubmit={this.handleSubmitforCash}>\r\n                   <Form.Group>\r\n                        <Form.Label>Month</Form.Label>\r\n                         <Form.Control as=\"select\" required name=\"monthCash\">\r\n            \r\n                                <option value=\"January\" >January</option>\r\n                                <option value=\"February\" >February</option>\r\n                                <option value=\"April\" >April</option>\r\n                                <option value=\"May\" >May</option>\r\n                                <option value=\"June\" >June </option>\r\n                                <option value=\"July\" >July</option>\r\n                                <option value=\"August\" >August</option>\r\n                                <option value=\"September\" >September</option>\r\n                                <option value=\"October\" >October</option>\r\n                                <option value=\"November\" >November</option>\r\n                                <option value=\"December\" >December</option>\r\n                          </Form.Control>\r\n                    </Form.Group>\r\n                    <br /><br />\r\n                    <Form.Group>\r\n                        <Button  style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\"  className =\"btn-lg\">\r\n                          Generate\r\n                        </Button>\r\n                    </Form.Group>\r\n                   </Form>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        </Row>    \r\n        </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SalesReports;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\FinanceTeamMember\\Profit.jsx",["900","901","902","903","904","905"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar, Form } from 'react-bootstrap';\r\nimport { AddNewBillTypeModal } from '../../components/FinanceTeamMember/Modals/AddNewBillTypeModal';\r\nimport {SalariesTable} from \"../../components/FinanceTeamMember/Tables/SalariesTable\";\r\nimport {Line} from 'react-chartjs-2';\r\n\r\n\r\nclass Profit extends Component {\r\n  state = {\r\n    Salaries: '0',\r\n    bill:'0',\r\n    materialCost:'0',\r\n    totalProfit: 0,\r\n    graphdata:{\r\n      labels: ['January', 'February', 'March',\r\n      'April', 'May'],\r\n      datasets: [\r\n      {\r\n        label: 'Profit',\r\n        fill: false,\r\n        lineTension: 0.5,\r\n        backgroundColor: 'rgba(75,192,192,1)',\r\n        borderColor: 'rgba(0,0,0,1)',\r\n        borderWidth: 2,\r\n        data: [150000,200000,160000,250000,3000000]\r\n      }\r\n      ]\r\n    },\r\n    addModalShow: false \r\n  };\r\n\r\n  componentDidMount(){\r\n    axios\r\n      .get(\"http://localhost:5000/api/material-cost/\")\r\n      .then((result) => {\r\n        const materialCost = result.data;\r\n       \r\n        materialCost.forEach(matCost => {\r\n          // this.setState({ materialCost: matCost.amount });\r\n          this.setState(prevState => ({\r\n            materialCost: parseFloat(prevState.materialCost) + parseFloat(matCost.amount)\r\n          }));\r\n        });\r\n        // console.log(this.state.materialCost);\r\n      })  \r\n      .catch((err) => console.log(err.message));\r\n  \r\n      axios\r\n      .get(\"http://localhost:5000/api/temp-salaries/\")\r\n      .then((result) => {\r\n        const Salaries = result.data;\r\n        \r\n        Salaries.forEach(sal => {\r\n          this.setState(prevState => ({\r\n            Salaries: parseFloat(prevState.Salaries) + parseFloat(sal.amount)\r\n          }));\r\n        });\r\n        // console.log(this.state.Salaries);\r\n      })  \r\n      .catch((err) => console.log(err.message));\r\n\r\n      axios\r\n      .get(\"http://localhost:5000/api/bills\")\r\n      .then((result) => {\r\n        const bill = result.data;\r\n        bill.forEach(bills => {\r\n          this.setState(prevState => ({\r\n            bill: parseFloat(prevState.bill) + parseFloat(bills.amount)\r\n          }));\r\n        });\r\n        // console.log(this.state.bill);\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n    \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <React.Fragment>\r\n      <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n\r\n        <div className=\"col\">\r\n        <h1 className=\"heading\">Profit</h1>\r\n        \r\n        <div className=\"heading\">Profit For the Last Month : Rs. {(this.state.Salaries + this.state.materialCost) - this.state.bill}/= </div>\r\n\r\n        <Line\r\n          data={this.state.graphdata}\r\n          options={{\r\n            title:{\r\n              display:true,\r\n              text:'Average Rainfall per month',\r\n              fontSize:20\r\n            },\r\n            legend:{\r\n              display:true,\r\n              position:'right'\r\n            }\r\n          }}\r\n        />\r\n        </div>\r\n        </div>\r\n      </React.Fragment>\r\n      \r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Profit;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\WholesaleBuyer\\ViewStockDetails.jsx",["906","907","908"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\r\nimport { ProductStockTable } from \"../../components/WholeSaleBuyer/Tabales/ProductStockTable\";\r\nimport SearchBox from \"../../components/WholeSaleBuyer/common/searchBox\";\r\nimport \"./styles.css\";\r\nimport viewpic from \"../../pages/assets/viewpic.png\";\r\n\r\nclass ViewStockDetails extends Component {\r\n  state = {\r\n    ProductList: [],\r\n    addModalShow: false,\r\n    searchQuery: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/proStock-details\")\r\n      .then((result) => {\r\n        const ProductList = result.data;\r\n\r\n        this.setState({ ProductList: ProductList });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n    });\r\n  };\r\n\r\n  filteredData() {\r\n    const { searchQuery, ProductList } = this.state;\r\n\r\n    let filtered = [];\r\n\r\n    if (searchQuery) {\r\n      filtered = ProductList.filter((r) =>\r\n        r.productCategory.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else {\r\n      filtered = ProductList;\r\n    }\r\n\r\n    return filtered;\r\n  }\r\n\r\n  render() {\r\n    //take the filtered list\r\n    let filtered = this.filteredData();\r\n\r\n    console.log(filtered);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"heading\">View Product List</h1>\r\n\r\n        <div className=\"center\">\r\n          <img src={viewpic} alt=\"leavepic\" />\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n                <SearchBox onChange={this.handleSearch} placeHolder=\"Search\" />\r\n            </div>\r\n            <div className=\"col-md-3\"></div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-2\"></div>\r\n          <div className=\"col\">\r\n            <ProductStockTable ProductList={filtered} />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewStockDetails;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\EmpsideNav\\EmpSidebar.jsx",["909","910","911","912","913"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card,Row,Col,Container,Image } from 'react-bootstrap';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport { EmpSidebarData } from './EmpSidebarData';\r\n\r\n\r\nimport SubMenu from './SubMenu';\r\nimport { IconContext } from 'react-icons/lib';\r\n\r\nconst Nav = styled.div`\r\n  background: #15171c;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst NavIcon = styled(Link)`\r\n  margin-left: 2rem;\r\n  font-size: 2rem;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst SidebarNav = styled.nav`\r\n  background: #15171c;\r\n  width: 250px;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  @media only screen and (max-width: 1920px) {\r\n    left: ${({ sidebar }) => (sidebar ? '0' : '-100%')};\r\n  }\r\n  left: 0;\r\n  transition: 350ms;\r\n  z-index: 10;\r\n`;\r\n\r\nconst SidebarWrap = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Sidebar = () => {\r\n  const [sidebar, setSidebar] = useState(false);\r\n\r\n  const showSidebar = () => setSidebar(!sidebar);\r\n\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: '#fff' }}>\r\n        <Nav>\r\n          <NavIcon to='#'>\r\n            <FaIcons.FaBars onClick={showSidebar} />\r\n            \r\n          </NavIcon>\r\n        </Nav>\r\n        <SidebarNav sidebar={sidebar}>\r\n          <SidebarWrap>\r\n            <NavIcon to='#'>\r\n              <AiIcons.AiOutlineClose onClick={showSidebar} />\r\n            </NavIcon>\r\n            {EmpSidebarData.map((item, index) => {\r\n              return <SubMenu item={item} key={index} />;\r\n            })}\r\n          </SidebarWrap>\r\n        </SidebarNav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\sideNav\\Sidebar.jsx",["914","915","916","917","918"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Row, Col, Container, Image } from \"react-bootstrap\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport { SidebarData } from \"./SidebarData\";\r\nimport SubMenu from \"./SubMenu\";\r\nimport { IconContext } from \"react-icons/lib\";\r\n\r\nconst Nav = styled.div`\r\n  background: #15171c;\r\n  height: 80px; \r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst NavIcon = styled(Link)`\r\n  margin-left: 2rem;\r\n  font-size: 2rem;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst SidebarNav = styled.nav`\r\n  background: #15171c;\r\n  width: 250px;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  @media only screen and (max-width: 1920px) {\r\n    left: ${({ sidebar }) => (sidebar ? \"0\" : \"-100%\")};\r\n  }\r\n  left: 0;\r\n  transition: 350ms;\r\n  z-index: 10;\r\n`;\r\n\r\nconst SidebarWrap = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Sidebar = () => {\r\n  const [sidebar, setSidebar] = useState(false);\r\n\r\n  const showSidebar = () => setSidebar(!sidebar);\r\n\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: \"#fff\" }}>\r\n        <Nav>\r\n          <NavIcon to=\"#\">\r\n            <FaIcons.FaBars onClick={showSidebar} />\r\n          </NavIcon>\r\n        </Nav>\r\n        <SidebarNav sidebar={sidebar}>\r\n          <SidebarWrap>\r\n            <NavIcon to=\"#\">\r\n              <AiIcons.AiOutlineClose onClick={showSidebar} />\r\n            </NavIcon>\r\n            {SidebarData.map((item, index) => {\r\n              return <SubMenu item={item} key={index} />;\r\n            })}\r\n          </SidebarWrap>\r\n        </SidebarNav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\sideNavigation\\Sidebar.jsx",["919","920","921","922","923"],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\sideNav\\Sidebar.jsx",["924","925","926","927","928"],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\ProManagersideNav\\EmpSidebar.jsx",["929","930","931","932","933"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Row, Col, Container, Image } from \"react-bootstrap\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport { EmpSidebarData } from \"./EmpSidebarData\";\r\n\r\nimport SubMenu from \"./SubMenu\";\r\nimport { IconContext } from \"react-icons/lib\";\r\n\r\nconst Nav = styled.div`\r\n  background: #15171c;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst NavIcon = styled(Link)`\r\n  margin-left: 2rem;\r\n  font-size: 2rem;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst SidebarNav = styled.nav`\r\n  background: #15171c;\r\n  width: 300px;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  @media only screen and (max-width: 1920px) {\r\n    left: ${({ sidebar }) => (sidebar ? \"0\" : \"-100%\")};\r\n  }\r\n  left: 0;\r\n  transition: 350ms;\r\n  z-index: 10;\r\n`;\r\n\r\nconst SidebarWrap = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Sidebar = () => {\r\n  const [sidebar, setSidebar] = useState(false);\r\n\r\n  const showSidebar = () => setSidebar(!sidebar);\r\n\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: \"#fff\" }}>\r\n        <Nav>\r\n          <NavIcon to=\"#\">\r\n            <FaIcons.FaBars onClick={showSidebar} />\r\n          </NavIcon>\r\n        </Nav>\r\n        <SidebarNav sidebar={sidebar}>\r\n          <SidebarWrap>\r\n            <NavIcon to=\"#\">\r\n              <AiIcons.AiOutlineClose onClick={showSidebar} />\r\n            </NavIcon>\r\n            {EmpSidebarData.map((item, index) => {\r\n              return <SubMenu item={item} key={index} />;\r\n            })}\r\n          </SidebarWrap>\r\n        </SidebarNav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\WholeSaleBuyer\\wholesaleBuyerSideNav\\EmpSidebar.jsx",["934","935","936","937","938"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Row, Col, Container, Image } from \"react-bootstrap\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport { EmpSidebarData } from \"./EmpSidebarData\";\r\n\r\nimport SubMenu from \"./SubMenu\";\r\nimport { IconContext } from \"react-icons/lib\";\r\n\r\nconst Nav = styled.div`\r\n  background: #15171c;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst NavIcon = styled(Link)`\r\n  margin-left: 2rem;\r\n  font-size: 2rem;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst SidebarNav = styled.nav`\r\n  background: #15171c;\r\n  width: 250px;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  @media only screen and (max-width: 1920px) {\r\n    left: ${({ sidebar }) => (sidebar ? \"0\" : \"-100%\")};\r\n  }\r\n  left: 0;\r\n  transition: 350ms;\r\n  z-index: 10;\r\n`;\r\n\r\nconst SidebarWrap = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Sidebar = () => {\r\n  const [sidebar, setSidebar] = useState(false);\r\n\r\n  const showSidebar = () => setSidebar(!sidebar);\r\n\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: \"#fff\" }}>\r\n        <Nav>\r\n          <NavIcon to=\"#\">\r\n            <FaIcons.FaBars onClick={showSidebar} />\r\n          </NavIcon>\r\n        </Nav>\r\n        <SidebarNav sidebar={sidebar}>\r\n          <SidebarWrap>\r\n            <NavIcon to=\"#\">\r\n              <AiIcons.AiOutlineClose onClick={showSidebar} />\r\n            </NavIcon>\r\n            {EmpSidebarData.map((item, index) => {\r\n              return <SubMenu item={item} key={index} />;\r\n            })}\r\n          </SidebarWrap>\r\n        </SidebarNav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\forms\\newreturnedproductform.jsx",["939","940","941"],"import React, { Component } from \"react\";\r\nimport FormSuper from \"../reusables/formsuper\";\r\nimport Joi, { join } from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport ItemCodeTable from \"../tables/itemcodestable\";\r\nimport SearchBox from \"../reusables/searchBox\";\r\nimport ListGroup from \"../reusables/listgroup\";\r\nimport swal from \"sweetalert\";\r\n\r\nclass NewReturnedProductForm extends FormSuper {\r\n  state = {\r\n    data: {\r\n      Code: \"\",\r\n      Type: \"Product\",\r\n      Category: \"\",\r\n      Quantity: \"\",\r\n      Buyer: \"\",\r\n      ReturnedDate: \"\",\r\n      Reason: \"\",\r\n    },\r\n    iCodes: [],\r\n    searchQuery: \"\",\r\n    errors: {},\r\n    selectedGenre: \"All\",\r\n    materialCodeObjects: [],\r\n    categoryObjects: [],\r\n  };\r\n\r\n  schema = {\r\n    Code: Joi.string().required(),\r\n    Type: Joi.string(),\r\n    Category: Joi.string().required(),\r\n    Quantity: Joi.number().required(),\r\n    Buyer: Joi.string().required(),\r\n    ReturnedDate: Joi.date().required(),\r\n    Reason: Joi.string().required(),\r\n  };\r\n\r\n  componentDidMount() {\r\n    //take the category set from db\r\n    //take the Material codes from db\r\n    axios.get(\"http://localhost:5000/codes/material/\").then((result) => {\r\n      const materialCodesObjs = result.data;\r\n      console.log(materialCodesObjs);\r\n      axios.get(\"http://localhost:5000/category/\").then((result) => {\r\n        const categoryObjs = result.data;\r\n        console.log(categoryObjs);\r\n        //this.setState({categoryObjects: categoryObjs});\r\n        this.setState({\r\n          materialCodeObjects: materialCodesObjs,\r\n          categoryObjects: categoryObjs,\r\n        });\r\n      });\r\n    });\r\n\r\n    //take the Product codes from db\r\n    //and put them into single array name iCodes after put them into codes table after set search and fiter them and put again\r\n  }\r\n\r\n  handleGenreSelect = (g) => {\r\n    this.setState({ selectedGenre: g, searchQuery: \"\" });\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      selectedGenre: \"All\",\r\n    });\r\n  };\r\n\r\n  filteredData() {\r\n    const { searchQuery, materialCodeObjects, selectedGenre } = this.state;\r\n\r\n    let filtered = [];\r\n    if (searchQuery) {\r\n      filtered = materialCodeObjects.filter((m) =>\r\n        m.materialName.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else if (selectedGenre === \"All\") {\r\n      filtered = materialCodeObjects;\r\n    } else if (selectedGenre === \"Material\") {\r\n      filtered = materialCodeObjects;\r\n    } else {\r\n      filtered = [];\r\n    }\r\n    //finish it\r\n    return filtered;\r\n  }\r\n\r\n  doSubmit() {\r\n    // console.log(\"submitted\", this.state.data);\r\n    const jsonOb = this.state.data;\r\n\r\n    console.log(jsonOb);\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/returned/add\", jsonOb)\r\n      .then((result) => console.log(result.data));\r\n    // axios\r\n    //   .post(\"http://localhost:5000/items/add\", jsonOb)\r\n    //   .then((result) => console.log(result.data));\r\n\r\n    swal({\r\n      text: \"Returned Item added successfully.\",\r\n      icon: \"success\",\r\n      timer: \"1500\",\r\n    });\r\n\r\n    const resetOb = {\r\n      Code: \"\",\r\n      Type: \"Product\",\r\n      Category: \"\",\r\n      Quantity: \"\",\r\n      Buyer: \"\",\r\n      ReturnedDate: \"\",\r\n      Reason: \"\",\r\n    };\r\n\r\n    this.setState({ data: resetOb });\r\n    //this.props.history.push(\"/items\");\r\n    // window.location = \"/items\";\r\n  }\r\n\r\n  render() {\r\n    const filtered = this.filteredData();\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-2\"></div>\r\n          <div className=\"col\">\r\n            <h1>New Returned Product</h1>\r\n            <form onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"Code\", \"Item Code\")}\r\n              {this.renderInput(\"Type\", \"Item Type\")}\r\n              {this.renderSelect(\r\n                \"Category\",\r\n                \"Category\",\r\n                this.state.categoryObjects\r\n              )}\r\n              {this.renderInput(\"Quantity\", \"Item Quantity\")}\r\n              {this.renderInput(\"Buyer\", \"Buyer Name\")}\r\n              {this.renderInput(\"ReturnedDate\", \"Returned date\", \"date\")}\r\n              {this.renderInput(\"Reason\", \"Reason for return\")}\r\n              {this.renderButton(\"Add Item\")}\r\n            </form>\r\n          </div>\r\n\r\n          <div className=\"col\">\r\n            <div className=\"row\">\r\n              <div className=\"col\"></div>\r\n              <div className=\"col\">\r\n                <SearchBox\r\n                  onChange={this.handleSearch}\r\n                  value={this.state.searchQuery}\r\n                  placeHolder=\"Search codes...\"\r\n                />\r\n              </div>\r\n              <div className=\"col-2\"></div>\r\n            </div>\r\n\r\n            <ItemCodeTable materialCodeObs={filtered} />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewReturnedProductForm;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\forms\\newitemform.jsx",["942","943"],"import React, { Component } from \"react\";\r\nimport FormSuper from \"../reusables/formsuper\";\r\nimport Joi, { join } from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport ItemCodeTable from \"../tables/itemcodestable\";\r\nimport SearchBox from \"../reusables/searchBox\";\r\nimport ListGroup from \"../reusables/listgroup\";\r\nimport swal from \"sweetalert\";\r\n\r\nclass NewItemForm extends FormSuper {\r\n  state = {\r\n    data: {\r\n      Code: \"\",\r\n      Type: \"\",\r\n      Category: \"\",\r\n      Quantity: \"\",\r\n      Supplier: \"\",\r\n      AddedDate: \"\",\r\n    },\r\n    categories: [\"category1\", \"category2\", \"category3\"],\r\n    types: [\r\n      { _id: \"123\", categoryName: \"Product\" },\r\n      { _id: \"143\", categoryName: \"Material\" },\r\n    ],\r\n    iCodes: [],\r\n    genres: [\"All\", \"Product\", \"Material\"],\r\n    searchQuery: \"\",\r\n    errors: {},\r\n    selectedGenre: \"All\",\r\n    materialCodeObjects: [],\r\n    categoryObjects: [],\r\n  };\r\n\r\n  schema = {\r\n    Code: Joi.string().required(),\r\n    Type: Joi.string().required(),\r\n    Category: Joi.string().required(),\r\n    Quantity: Joi.number().required(),\r\n    Supplier: Joi.string().required(),\r\n    AddedDate: Joi.date().required(),\r\n  };\r\n\r\n  componentDidMount() {\r\n    //take the category set from db\r\n    //take the Material codes from db\r\n    axios.get(\"http://localhost:5000/codes/material/\").then((result) => {\r\n      const materialCodesObjs = result.data;\r\n      console.log(materialCodesObjs);\r\n      axios.get(\"http://localhost:5000/category/\").then((result) => {\r\n        const categoryObjs = result.data;\r\n        console.log(categoryObjs);\r\n        //this.setState({categoryObjects: categoryObjs});\r\n        this.setState({\r\n          materialCodeObjects: materialCodesObjs,\r\n          categoryObjects: categoryObjs,\r\n        });\r\n      });\r\n    });\r\n\r\n    //take the Product codes from db\r\n    //and put them into single array name iCodes after put them into codes table after set search and fiter them and put again\r\n  }\r\n\r\n  handleGenreSelect = (g) => {\r\n    this.setState({ selectedGenre: g, searchQuery: \"\" });\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      selectedGenre: \"All\",\r\n    });\r\n  };\r\n\r\n  filteredData() {\r\n    const { searchQuery, materialCodeObjects, selectedGenre } = this.state;\r\n\r\n    let filtered = [];\r\n    if (searchQuery) {\r\n      filtered = materialCodeObjects.filter((m) =>\r\n        m.materialName.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else if (selectedGenre === \"All\") {\r\n      filtered = materialCodeObjects;\r\n    } else if (selectedGenre === \"Material\") {\r\n      filtered = materialCodeObjects;\r\n    } else {\r\n      filtered = [];\r\n    }\r\n    //finish it\r\n    return filtered;\r\n  }\r\n\r\n  doSubmit() {\r\n    // console.log(\"submitted\", this.state.data);\r\n    const jsonOb = this.state.data;\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/items/add/record\", jsonOb)\r\n      .then((result) => console.log(result.data));\r\n    axios\r\n      .post(\"http://localhost:5000/items/add\", jsonOb)\r\n      .then((result) => console.log(result.data));\r\n\r\n    swal({\r\n      text: \"Item added successfully.\",\r\n      icon: \"success\",\r\n      timer: \"1500\",\r\n    });\r\n\r\n    const resetOb = {\r\n      Code: \"\",\r\n      Type: \"\",\r\n      Category: \"\",\r\n      Quantity: \"\",\r\n      Supplier: \"\",\r\n      AddedDate: \"\",\r\n    };\r\n\r\n    this.setState({ data: resetOb });\r\n    //this.props.history.push(\"/items\");\r\n    // window.location = \"/items\";\r\n  }\r\n\r\n  render() {\r\n    const filtered = this.filteredData();\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-2\"></div>\r\n          <div className=\"col\">\r\n            <h1>New Item</h1>\r\n            <form onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"Code\", \"Item Code\")}\r\n              {this.renderSelect(\"Type\", \"Item Type\", this.state.types)}\r\n              {this.renderSelect(\r\n                \"Category\",\r\n                \"Category\",\r\n                this.state.categoryObjects\r\n              )}\r\n              {this.renderInput(\"Quantity\", \"Item Quantity\")}\r\n              {this.renderInput(\"Supplier\", \"Supplier Name\")}\r\n              {this.renderInput(\"AddedDate\", \"Received date\", \"date\")}\r\n              {this.renderButton(\"Add Item\")}\r\n            </form>\r\n          </div>\r\n\r\n          <div className=\"col\">\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <ListGroup\r\n                  genres={this.state.genres}\r\n                  onGenreSelect={this.handleGenreSelect}\r\n                  selectedGenre={this.state.selectedGenre}\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <SearchBox\r\n                  onChange={this.handleSearch}\r\n                  value={this.state.searchQuery}\r\n                  placeHolder=\"Search codes...\"\r\n                />\r\n              </div>\r\n              <div className=\"col-2\"></div>\r\n            </div>\r\n\r\n            <ItemCodeTable materialCodeObs={filtered} />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewItemForm;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\Employee\\UserHeader.js",["944"],"import React from \"react\";\r\nimport profile from \"../../pages/assets/profile.png\"\r\n\r\n// reactstrap components\r\nimport { Button, Container, Row, Col } from \"reactstrap\";\r\n\r\nfunction UserHeader() {\r\n  return (\r\n    <>\r\n      \r\n        <br></br>\r\n        <img src={profile} alt=\"leavepic\" /> \r\n        <span className=\"mask bg-gradient-default opacity-8\" />\r\n\r\n        \r\n        <br></br>\r\n        {/* Header container */}\r\n        <Container className=\"d-flex align-items-center\" fluid>\r\n          <Row>\r\n            <Col lg=\"7\" md=\"10\">\r\n              <h1 className=\"display-6 text-black\">Hello Sheikha Hanna!</h1>\r\n              <p className=\"text-black mt-0 mb-5\">\r\n                This is your profile page. You can see the progress you've made\r\n                with your work and manage your projects or assigned tasks.\r\n              </p>\r\n              \r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserHeader;","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\utills\\reportGenerator.js",["945"],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\charts\\chart.js",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\utills\\reportGeneratorAssignments.js",["946"],"import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { format } from \"date-fns\";\r\n\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst generatePDF = (tickets) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n\r\n  // define the columns we want and their titles\r\n  //const tableColumn = [\"Id\", \"Title\", \"Issue\", \"Status\", \"Closed on\"];\r\n  const tableColumn = [\r\n    \"Document ID\",\r\n    \"Supervisor Name\",\r\n    \"Description\",\r\n    \"Status\",\r\n  ];\r\n  // define an empty array of rows\r\n  const tableRows = [];\r\n\r\n  // for each ticket pass all its data into an array\r\n  tickets.forEach((ticket) => {\r\n    const ticketData = [\r\n      ticket.documentid,\r\n      ticket.supervisor,\r\n      ticket.description,\r\n      ticket.status,\r\n      // called date-fns to format the date on the ticket\r\n      //format(new Date(ticket.date), \"yyyy-MM-dd\"),\r\n    ];\r\n    // push each tickcet's info into a row\r\n    tableRows.push(ticketData);\r\n  });\r\n\r\n  // startY is basically margin-top\r\n  doc.autoTable(tableColumn, tableRows, { startY: 20 });\r\n  const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  const dateStr = date[0] + date[1] + date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(\"Employee Assignments as at 2021-01-01\", 14, 15);\r\n  // we define the name of our PDF file.\r\n  doc.save(`Assignments_Report_${dateStr}.pdf`);\r\n};\r\n\r\nexport default generatePDF;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\FinanceTeamMember\\services\\GenarateSalesReport.js",["947"],"// services/reportGenerator.js\r\n\r\nimport jsPDF from \"jspdf\"; \r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n// from our API call\r\nimport { format } from \"date-fns\";\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst GenarateSalesReport = tickets => {\r\n    console.log(tickets);\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n\r\n  // define the columns we want and their titles\r\n  const tableColumn = [\"Id\", \"Bill No\", \"Bill Type\", \"Amount\", \"Date\"];\r\n  // define an empty array of rows\r\n  const tableRows = [];\r\n\r\n  // for each ticket pass all its data into an array\r\n  tickets.forEach(ticket => {\r\n    const ticketData = [\r\n      ticket.id,\r\n      ticket.title,\r\n      ticket.request,\r\n      ticket.status,\r\n      // called date-fns to format the date on the ticket\r\n    //   format(new Date(), \"yyyy-MM-dd\")\r\n    ];\r\n    // push each tickcet's info into a row\r\n    tableRows.push(ticketData);\r\n    console.log(ticketData);\r\n  });\r\n  \r\n\r\n  // startY is basically margin-top\r\n  doc.autoTable(tableColumn, tableRows, { startY: 20 });\r\n  const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  const dateStr = date[0] + date[1] + date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(\"Closed tickets within the last one month.\", 14, 15);\r\n  // we define the name of our PDF file.\r\n  doc.save(`report_${dateStr}.pdf`);\r\n};\r\n\r\nexport default GenarateSalesReport;","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\Modals\\AddAssignmentModal.jsx",["948"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\n\r\nexport class AddAssignmentModal extends Component {\r\n    constructor(props) {\r\n\r\n        console.log(\"Run\");\r\n        super(props);\r\n        this.state = { snackbaropen: false, snackbarmsg: '', AssignmentError: ''};\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    handleSubmit(event) {\r\n\r\n        event.preventDefault();\r\n        const isValid = this.validate(event);\r\n        if(isValid){\r\n        alert(event.target.name.value);\r\n        fetch('http://localhost:5000/api/assignment-details/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                \r\n            },\r\n            body: JSON.stringify({\r\n                id: event.target.id.value,\r\n                documentid: event.target.documentid.value,\r\n                supervisor: event.target.supervisor.value,\r\n                description: event.target.description.value,\r\n                status: event.target.status.value\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                alert(\"Success!\");\r\n\r\n                window.location.reload();\r\n                this.setState({\r\n                    AssignmentError:'',\r\n                })\r\n\r\n\r\n                console.log(\"result\" , result)\r\n            }, (error) => {\r\n                this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n            }\r\n\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    validate(event){\r\n        let AssignmentError = \"\";\r\n\r\n        if(!event.target.documentid.value){\r\n            AssignmentError = \"This Cannot Be Blank.\"\r\n        }\r\n\r\n        if(!event.target.supervisor.value){\r\n            AssignmentError = \"This Cannot Be Blank.\"\r\n        }\r\n\r\n        if(!event.target.description.value){\r\n            AssignmentError = \"This Cannot Be Blank.\"\r\n        }\r\n\r\n        if(!event.target.status.value){\r\n            AssignmentError = \"This Cannot Be Blank.\"\r\n        }\r\n\r\n        if(AssignmentError){\r\n            this.setState({AssignmentError:AssignmentError})\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                //centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add an Assignment. \r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Document ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"documentid\" placeholder=\"Enter a Document Number for reference.\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.AssignmentError}</div>\r\n                                    </Form.Group>\r\n\r\n\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Supervisor name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"supervisor\" placeholder=\"Supervisor Name\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.AssignmentError}</div>\r\n                                    </Form.Group>\r\n\r\n\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Description</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"description\" placeholder=\"Assignment Description...\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.AssignmentError}</div>\r\n                                    </Form.Group>\r\n\r\n\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"status\" placeholder=\"Eg. Completed or Pending... \" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.AssignmentError}</div>\r\n                                    </Form.Group>\r\n                                    \r\n                                    <br></br>\r\n\r\n                                    <Form.Group>\r\n                                        <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} className=\"btn\"  type=\"submit\" >\r\n                                            Submit Assignment Request\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\Tables\\AssignmentTable.jsx",["949","950","951","952","953"],"import React, { Component } from \"react\"; \r\nimport { EditAssignmentModal } from '../Modals/EditAssignmentModal';\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport { ToastContainer, toast, Zoom, Bounce, Flip } from \"react-toastify\"\r\nimport \"react-toastify/dist/ReactToastify.css\"\r\n\r\n\r\nexport class AssignmentTable extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { editModelShow: false }\r\n  }\r\n\r\n  deleteassignment(id){\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this record.\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    })\r\n    .then((willDelete) => {\r\n      if (willDelete) {\r\n        fetch('http://localhost:5000/api/assignment-details', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: id\r\n               \r\n            })\r\n        }).then(res => res.json())\r\n        .then((result) => {\r\n          swal({\r\n            title: \"Employee assignment Deleted Succesfully\",\r\n            icon: \"success\",\r\n            button: \"Done\",\r\n          }); \r\n      });\r\n      } else {\r\n        swal(\"Assignment was not submitted.\");\r\n      }\r\n    });\r\n  }\r\n  render(){\r\n    const {id, documentid, supervisor, description, status } = this.state;\r\n    let EditModelClose = () => this.setState({ editModalShow: false })\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <ToastContainer draggable={false} transition={Zoom} autoClose={8000} newestOnTop />\r\n       <ButtonToolbar>\r\n                  <EditAssignmentModal\r\n                      show={this.state.editModelShow}\r\n                      onHide={EditModelClose}\r\n                      empass= {this.state.empass}\r\n                      id={id}\r\n                      documentid={documentid}\r\n                      supervisor={supervisor}\r\n                      description={description}\r\n                      status={status}\r\n                    \r\n                    />\r\n                    </ButtonToolbar>\r\n<table className=\"table table-bordered\" style={{overflow: \"hidden\"}}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" }}>\r\n          <th scope=\"col\">Document ID</th>\r\n          <th scope=\"col\">Supervisor</th>\r\n          <th scope=\"col\">Description</th>\r\n          <th scope=\"col\">Status</th>\r\n          <th scope=\"col\">Action</th>\r\n        </tr>\r\n      </thead>\r\n    <tbody style={{overflow: \"hidden\"}}>\r\n        {\r\n          this.props.filteredItems.map(assignment => (\r\n\r\n      <tr key={assignment._id}>\r\n        <td>{assignment.documentid}</td>\r\n        <td>{assignment.supervisor}</td>\r\n        <td>{assignment.description}</td>\r\n        <td>{assignment.status}</td>\r\n        <td>\r\n            <button \r\n                    style={{ backgroundColor: \"#7121AD\", color: \"white\" }} className=\"btn\" \r\n                    onClick={() => this.setState({ editModelShow: true, id: assignment._id, documentid: assignment.documentid, supervisor: assignment.supervisor, description: assignment.description, status : assignment.status })} >Edit</button>\r\n            <button \r\n                    style={{ backgroundColor: \"#BA0D32 \", color: \"white\" }} className=\"btn\" \r\n                    onClick={() => this.deleteassignment(assignment._id)}>Delete</button>\r\n        </td>\r\n\r\n      </tr>              \r\n            \r\n          ))\r\n        }\r\n     \r\n    </tbody>\r\n    </table>\r\n\r\n    </React.Fragment>\r\n  );\r\n      }\r\n};\r\n\r\nexport default AssignmentTable;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\Modals\\EditAssignmentModal.jsx",["954"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class EditAssignmentModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { snackbaropen: false, snackbarmsg: '' };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    handleSubmit(event, props) {\r\n        event.preventDefault();\r\n        //alert(event.target.name.value);\r\n\r\n        fetch('http://localhost:5000/api/assignment-details/', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: event.target.id.value,\r\n                documentid: event.target.documentid.value,\r\n                supervisor: event.target.supervisor.value,\r\n                description: event.target.description.value,\r\n                status: event.target.status.value\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n\r\n                window.location.reload();\r\n                swal({\r\n                    title: \"Assignment Updated Succesfully\",\r\n                    icon: \"success\",\r\n                    button: \"Done\",\r\n                  });\r\n            }, (error) => {\r\n                this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n            }\r\n\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Assignment\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>      \r\n                                <Form.Group controlId=\"id\">\r\n                                    <Form.Label>ID</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"id\" required disabled  defaultValue={this.props.id}/>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"name\">\r\n                                    <Form.Label>Document ID</Form.Label>  \r\n                                    <Form.Control  value= {this.state.documentid} type=\"text\" name=\"documentid\" required placeholder=\"Reference Number\" defaultValue={this.props.documentid} />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"name\">\r\n                                    <Form.Label>Supervisor</Form.Label>\r\n                                    <Form.Control  value= {this.state.supervisor} type=\"text\" name=\"supervisor\" required placeholder=\"Reason for Leave\" defaultValue={this.props.supervisor} />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"name\">\r\n                                    <Form.Label>Description</Form.Label>\r\n                                    <Form.Control  value= {this.state.description} type=\"text\" name=\"description\" required placeholder=\"Date\" defaultValue={this.props.description} />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"name\">\r\n                                    <Form.Label>Status</Form.Label>\r\n                                    <Form.Control  value= {this.state.status} type=\"text\" name=\"status\" required placeholder=\"Date\" defaultValue={this.props.status} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group>\r\n                                    <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} className=\"table table-bordered table-sm my-2\" type=\"submit\" >\r\n                                        Edit Assignment\r\n                                    </Button>\r\n                                </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\Tables\\LeaveTable.jsx",["955","956","957"],"import React, { Component } from \"react\"; \r\nimport {EditEmployeeModal} from '../Modals/EditEmployeeModal';\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport { ToastContainer, Zoom } from \"react-toastify\"\r\nimport \"react-toastify/dist/ReactToastify.css\"\r\nimport generatePDF from './../utills/reportGenerator';\r\n\r\n\r\nexport class LeaveTable extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { editModelShow: false }\r\n   \r\n  }\r\n\r\n  deleteleave(id){\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this record.\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    })\r\n    .then((willDelete) => {\r\n      if (willDelete) {\r\n        fetch('http://localhost:5000/api/leave-details', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: id\r\n               \r\n            })\r\n        }).then(res => res.json())\r\n        .then((result) => {\r\n          swal({\r\n            title: \"Employee Leave Deleted Succesfully\",\r\n            icon: \"success\",\r\n            button: \"Done\",\r\n          }); \r\n      });\r\n      } else {\r\n        swal(\"Record was not submitted.\");\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  render(){\r\n    const {id, refno, reasonforleave, date } = this.state;\r\n    let EditModelClose = () => this.setState({ editModalShow: false })\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <ToastContainer draggable={false} transition={Zoom} autoClose={8000} newestOnTop />\r\n        <ButtonToolbar>\r\n                    <EditEmployeeModal\r\n                        show={this.state.editModelShow}\r\n                        onHide={EditModelClose}\r\n                        empleave= {this.state.empLeave}\r\n                        id={id}\r\n                        refno={refno}\r\n                        reasonforleave={reasonforleave}\r\n                        date={date}\r\n                      />\r\n          </ButtonToolbar>\r\n         \r\n<table className=\"table table-bordered\" style={{overflow: \"hidden\"}}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" }}>\r\n          <th scope=\"col\">Ref No</th>\r\n          <th scope=\"col\">Reason for leave</th>\r\n          <th scope=\"col\">Date</th>\r\n          <th scope=\"col\">Action</th>\r\n        </tr>\r\n      </thead>\r\n    <tbody style={{overflow: \"hidden\"}}>\r\n        {\r\n          this.props.filteredItems.map(leave => (\r\n\r\n      <tr key={leave._id}>\r\n        <td>{leave.refno}</td>\r\n        <td>{leave.reasonforleave}</td>\r\n        <td>{leave.date}</td>\r\n        <td>\r\n            <button \r\n                    style={{ backgroundColor: \"#7121AD\", color: \"white\" }} className=\"btn\" \r\n                    onClick={() => this.setState({ editModelShow: true, id: leave._id, refno: leave.refno, reasonforleave: leave.reasonforleave, date: leave.date })} >Edit</button>\r\n            <button \r\n                    style={{ backgroundColor: \"#BA0D32 \", color: \"white\" }} className=\"btn\" \r\n                    onClick={() => this.deleteleave(leave._id)}>Delete</button>\r\n\r\n            \r\n        </td>\r\n\r\n      </tr>              \r\n            \r\n          ))\r\n        }\r\n\r\n\r\n     \r\n    </tbody>\r\n    </table>\r\n   \r\n\r\n    </React.Fragment>\r\n  );\r\n      }\r\n};\r\n\r\nexport default LeaveTable;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\Tables\\PaymentsTable.jsx",["958","959","960","961","962"],"import React, { Component } from \"react\"; \r\nimport { EditPaymentsModal } from '../Modals/EditPaymentsModal';\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport { ToastContainer, toast, Zoom, Bounce, Flip } from \"react-toastify\"\r\nimport \"react-toastify/dist/ReactToastify.css\"\r\n\r\n\r\nexport class PaymentsTable extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { editModelShow: false }\r\n  }\r\n\r\n  deletepayments(id){\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this record.\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    })\r\n    .then((willDelete) => {\r\n      if (willDelete) {\r\n        fetch('http://localhost:5000/api/payment-details/', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: id\r\n               \r\n            })\r\n        }).then(res => res.json())\r\n        .then((result) => {\r\n          swal({\r\n            title: \"Bank Details Deleted Succesfully\",\r\n            icon: \"success\",\r\n            button: \"Done\",\r\n          }); \r\n      });\r\n      } else {\r\n        swal(\"Record was not submitted.\");\r\n      }\r\n    });\r\n  }\r\n  render(){\r\n    const {id, name, bankname, accountnumber, branch } = this.state;\r\n    let EditModelClose = () => this.setState({ editModalShow: false })\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <ToastContainer draggable={false} transition={Zoom} autoClose={8000} newestOnTop />\r\n       <ButtonToolbar>\r\n                  <EditPaymentsModal\r\n                      show={this.state.editModelShow}\r\n                      onHide={EditModelClose}\r\n                      empPayments= {this.state.empPayments}\r\n                      id={id}\r\n                      name={name}\r\n                      bankname={bankname}\r\n                      accountnumber={accountnumber}\r\n                      branch={branch}\r\n                    />\r\n        </ButtonToolbar>\r\n<table className=\"table table-bordered\" style={{overflow: \"hidden\"}}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" }}>\r\n          <th scope=\"col\">Full Name</th>\r\n          <th scope=\"col\">Name of Bank</th>\r\n          <th scope=\"col\">Account Number</th>\r\n          <th scope=\"col\">Branch</th>\r\n          <th scope=\"col\">Action</th>\r\n        </tr>\r\n      </thead>\r\n    <tbody style={{overflow: \"hidden\"}}>\r\n        {\r\n          this.props.filteredItems.map(payments => (\r\n\r\n      <tr key={payments._id}>\r\n        <td>{payments.name}</td>\r\n        <td>{payments.bankname}</td>\r\n        <td>{payments.accountnumber}</td>\r\n        <td>{payments.branch}</td>\r\n        <td>\r\n            <button \r\n                    style={{ backgroundColor: \"#7121AD\", color: \"white\" }} className=\"btn\" \r\n                    onClick={() => this.setState({ editModelShow: true, id: payments._id, name: payments.name, bankname: payments.bankname, accountnumber: payments.accountnumber, branch: payments.branch })} >Edit</button>\r\n            <button \r\n                    style={{ backgroundColor: \"#BA0D32 \", color: \"white\" }} className=\"btn\" \r\n                    onClick={() => this.deletepayments(payments._id)}>Delete</button>\r\n\r\n            \r\n        </td>\r\n\r\n      </tr>              \r\n            \r\n          ))\r\n        }\r\n     \r\n    </tbody>\r\n</table>\r\n\r\n    </React.Fragment>\r\n  );\r\n      }\r\n};\r\n\r\nexport default PaymentsTable;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\Modals\\AddEventModal.jsx",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\Modals\\AddEmployeeModal.jsx",["963"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nexport class AddEmployeeModal extends Component {\r\n    constructor(props) {\r\n\r\n        console.log(\"Run\");\r\n        super(props);\r\n        this.state = { snackbaropen: false, snackbarmsg: '',LeaveError:'' };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    \r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    handleSubmit(event) {\r\n\r\n        event.preventDefault();\r\n        const isValid = this.validate(event);\r\n        if(isValid){\r\n            fetch('http://localhost:5000/api/leave-details/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                    \r\n                },\r\n                body: JSON.stringify({\r\n                    refno: event.target.refno.value,\r\n                    reasonforleave: event.target.reasonforleave.value,\r\n                    date: event.target.date.value\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    alert(\"Success!\");\r\n                   \r\n                        window.location.reload();\r\n                        this.setState({\r\n                            LeaveError:'',\r\n                        })\r\n                    console.log(\"result\" , this.state.LeaveError)\r\n                }, (error) => {\r\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n                }\r\n\r\n                )\r\n       }\r\n    }\r\n\r\n  validate(event){\r\n        let LeaveError = \"\";\r\n\r\n        if(!event.target.refno.value){\r\n            LeaveError = \"This Cannot Be Blank.\"\r\n        }\r\n\r\n        if(!event.target.reasonforleave.value){\r\n            LeaveError = \"This Cannot Be Blank.\"\r\n        }\r\n\r\n        if(!event.target.date.value){\r\n            LeaveError = \"This Cannot Be Blank.\"\r\n        }\r\n\r\n        if(LeaveError){\r\n            this.setState({LeaveError:LeaveError})\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                //centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add a Leave Request \r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <div class=\"alert alert-info\" role=\"alert\">\r\n                            Note: Your leave request will take a few days to be approved by the admin. \r\n                    </div>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Reference Number</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"refno\"  placeholder=\"Enter a reference ID\" className=\"form-field\"/>\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.LeaveError}</div>\r\n                                    </Form.Group>\r\n                                    <br></br>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Reason for leave</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"reasonforleave\"  placeholder=\"Make your reason descriptive..\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.LeaveError}</div>\r\n                                    </Form.Group>\r\n                                    <br></br>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Day Range</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"date\"  placeholder=\"Enter a date or number of days...\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.LeaveError}</div>\r\n                                    </Form.Group>\r\n                                    \r\n                                    <br></br>\r\n                                    <Form.Group>\r\n                                        <Button  style={{ backgroundColor: \"#7121AD\", color: \"white\" }} className=\"btn\"  type=\"submit\" >\r\n                                            Submit Leave Request\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\Modals\\AddPaymentsModal.jsx",["964"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\n\r\nexport class AddPaymentsModal extends Component {\r\n    constructor(props) {\r\n\r\n        console.log(\"Run\");\r\n        super(props);\r\n        this.state = { snackbaropen: false, snackbarmsg: '', PaymentsError:''};\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    \r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    handleSubmit(event) {\r\n\r\n        event.preventDefault();\r\n        // alert(event.target.name.value);\r\n        const isValid = this.validate(event);\r\n        if(isValid){\r\n        fetch('http://localhost:5000/api/payment-details/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                \r\n            },\r\n            body: JSON.stringify({\r\n                id: event.target.id.value,\r\n                name: event.target.namecus.value,\r\n                bankname: event.target.bankname.value,\r\n                accountnumber: event.target.accountnumber.value,\r\n                branch: event.target.branch.value\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                alert(\"Success!\");\r\n\r\n                window.location.reload();\r\n                this.setState({\r\n                    PaymentsError:'',\r\n                })\r\n\r\n                console.log(\"result\" , result)\r\n            }, (error) => {\r\n                this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n            }\r\n\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\n    validate(event){\r\n        let PaymentsError = \"\";\r\n\r\n        if(!event.target.namecus.value){\r\n            PaymentsError = \"This Cannot Be Blank.\"\r\n        }\r\n\r\n        if(!event.target.bankname.value){\r\n            PaymentsError = \"This Cannot Be Blank.\"\r\n        }\r\n\r\n        if(!event.target.accountnumber.value){\r\n            PaymentsError = \"This Cannot Be Blank.\"\r\n        }\r\n\r\n        if(!event.target.branch.value){\r\n            PaymentsError = \"This Cannot Be Blank.\"\r\n        }\r\n\r\n        if(PaymentsError){\r\n            this.setState({PaymentsError:PaymentsError})\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n   \r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                //centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add your Bank Details \r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <div class=\"alert alert-info\" role=\"alert\">\r\n                            Note: Your bank details will be verified by the Finance Department, therefore please make sure to enter the correct information. \r\n                    </div>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Full Name</Form.Label>\r\n                                        <Form.Control \r\n                                            type=\"text\" \r\n                                            name=\"namecus\" \r\n                                             \r\n                                            placeholder=\"Your full name..\" \r\n                                            className=\"form-field\"/>\r\n\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.PaymentsError}</div>\r\n                                    </Form.Group>\r\n\r\n                                    <br></br>\r\n\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Bank Name</Form.Label>\r\n                                        <Form.Control \r\n                                            type=\"text\" \r\n                                            name=\"bankname\" \r\n                                             \r\n                                            placeholder=\"Eg. Commercial Bank..\" />\r\n\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.PaymentsError}</div>\r\n                                    </Form.Group>\r\n\r\n                                    <br></br>\r\n\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Account Number</Form.Label>\r\n                                        <Form.Control \r\n                                            type=\"text\" \r\n                                            name=\"accountnumber\" \r\n                                             \r\n                                            placeholder=\"Account Number\" />\r\n                                            <div style={{background:\"#f8d7da\"}}>{this.state.PaymentsError}</div>\r\n                                    </Form.Group>\r\n\r\n                                    <br></br>\r\n\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Account Branch</Form.Label>\r\n                                        <Form.Control \r\n                                            type=\"text\" \r\n                                            name=\"branch\" \r\n                                             \r\n                                            placeholder=\"Account Branch\" />\r\n                                            <div style={{background:\"#f8d7da\"}}>{this.state.PaymentsError}</div>\r\n                                    </Form.Group>\r\n                                    \r\n                                    <br></br>\r\n\r\n                                    <Form.Group>\r\n                                        <Button \r\n                                            style={{ backgroundColor: \"#7121AD\", color: \"white\" }} \r\n                                            className=\"btn\"  \r\n                                            type=\"submit\" >\r\n                                                Add Bank Details\r\n                                        </Button>\r\n                                    </Form.Group>\r\n\r\n                                   \r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\SuperAdmin\\clock.jsx",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Modals\\AddFactoryDetailsModal.jsx",["965","966","967"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport swal from 'sweetalert';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport class AddFactoryDetailsModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            snackbaropen: false, \r\n            snackbarmsg: '',\r\n            companyNameError:'', \r\n            companyAddressError:'',\r\n            ownerNameError:'',\r\n            mainProductError:'',\r\n            startDateError:''\r\n\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const isValid = this.validate(event);\r\n            if(isValid){\r\n                fetch('http://localhost:5000/api/factory-details', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'username': 'chathura'\r\n                },\r\n                body: JSON.stringify({\r\n                    companyName: event.target.companyName.value,\r\n                    companyAddress: event.target.companyAddress.value,\r\n                    ownerName: event.target.ownerName.value,\r\n                    mainProduct: event.target.mainProduct.value,\r\n                    startDate: event.target.startDate.value,\r\n                    is_added:1\r\n                    // companyName: event.target.companyName.value,\r\n                    // companyName: event.target.companyName.value,\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    console.log(result);\r\n                    swal({\r\n                        title: \"Factory Details Added Succesfully\",\r\n                        icon: \"success\",\r\n                        button: \"Done\",\r\n                    }); \r\n                    this.setState({\r\n                        companyNameError:'',\r\n                        companyAddressError:'',\r\n                        ownerNameError:'',\r\n                        mainProductError:'',\r\n                        startDateError:'',\r\n                    })\r\n                    setTimeout(function() {\r\n                        window.location.reload(); \r\n                      }.bind(this), 1500);\r\n                }, (error) => {\r\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n                }\r\n\r\n                )\r\n        }\r\n    }\r\n\r\n    validate(event){\r\n        let companyNameError = \"\";\r\n        let companyAddressError = \"\";\r\n        let ownerNameError = \"\";\r\n        let mainProductError = \"\";\r\n        let startDateError = \"\";\r\n\r\n        if(!event.target.companyName.value){\r\n            companyNameError = \"Company Name  Cannot Be Blank\"\r\n        }\r\n        if(!event.target.companyAddress.value){\r\n            companyAddressError = \"Company Address  Cannot Be Blank\"\r\n        }\r\n        if(!event.target.ownerName.value){\r\n            ownerNameError = \"Owner Name  Cannot Be Blank\"\r\n        }\r\n        if(!event.target.mainProduct.value){\r\n            mainProductError = \"Main Product  Cannot Be Blank\"\r\n        }\r\n        if(!event.target.startDate.value){\r\n            startDateError = \"start Date  Cannot Be Blank\"\r\n        }\r\n\r\n        if(companyNameError || companyAddressError || ownerNameError || mainProductError || startDateError){\r\n            this.setState({\r\n                companyNameError:companyNameError,\r\n                companyAddressError:companyAddressError,\r\n                ownerNameError:ownerNameError,\r\n                mainProductError:mainProductError,\r\n                startDateError:startDateError,\r\n            })\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                //centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add Factory Details\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"companyName\">\r\n                                        <Form.Label>Company Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"companyName\" required placeholder=\"Company Name\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.companyNameError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"companyAddress\">\r\n                                        <Form.Label>Company Address</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"companyAddress\" required placeholder=\"Company Address\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.companyAddressError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"ownerName\">\r\n                                        <Form.Label>Owner Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"ownerName\" required placeholder=\"Owner Name\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.ownerNameError}</div>\r\n                                    </Form.Group>\r\n                                    {/* <Form.Group controlId=\"companyLogo\">\r\n                                        <Form.Label>Company Logo</Form.Label>\r\n                                        <Form.Control type=\"file\" name=\"companyLogo\" required placeholder=\"Category Name\" />\r\n                                    </Form.Group> */}\r\n                                    <Form.Group controlId=\"mainProduct\">\r\n                                        <Form.Label>Main Product</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"mainProduct\" required placeholder=\"Main Product\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.mainProduct}</div>\r\n                                    </Form.Group>\r\n                                    {/* <Form.Group controlId=\"br\">\r\n                                        <Form.Label>br</Form.Label>\r\n                                        <Form.Control type=\"file\" name=\"br\" required placeholder=\"Category Name\" />\r\n                                    </Form.Group> */}\r\n                                    <Form.Group controlId=\"startDate\">\r\n                                        <Form.Label>startDate</Form.Label>\r\n                                        <Form.Control type=\"date\" name=\"startDate\" required placeholder=\"Start Date\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.startDate}</div>\r\n                                    </Form.Group>\r\n                                    <br />\r\n                                    <Form.Group>\r\n                                        <Button  style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Add Factory Details\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\WholeSaleBuyer\\common\\searchBox.jsx",["968"],"import React, { Component } from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange, placeHolder }) => {\r\n  return (\r\n    <input\r\n      style={{ border: \"2px solid #050139\" }}\r\n      type=\"text\"\r\n      name=\"query\"\r\n      autoComplete=\"off\"\r\n      className=\"form-control my-4\"\r\n      placeholder={placeHolder}\r\n      value={value}\r\n      onChange={(e) => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\nexport default SearchBox;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\WholeSaleBuyer\\Tabales\\ProductStockTable.jsx",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\Tables\\SalariesTable.jsx",["969","970","971"],"import React, { Component } from \"react\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\n\r\nexport class SalariesTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { cate: [], editModalShow: false }\r\n  }\r\n\r\n  render() {\r\n  return (\r\n    <div>\r\n    <table className=\"table table-bordered table-sm m-2\" style={{width:\"1000px\"}}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" } }>\r\n          <th scope=\"col\">Id</th>\r\n          <th scope=\"col\">Emp No</th>\r\n          <th scope=\"col\">Amount</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.props.filteredItems.map((i) => (\r\n          <tr\r\n            key={i._id}\r\n            \r\n          >\r\n            <td>{}</td>\r\n            <td>{i.empID}</td>\r\n            <td>{i.amount}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n     \r\n    </table>\r\n    </div>\r\n  );\r\n};\r\n}\r\n\r\n\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\Tables\\MaterialCostTable.jsx",["972","973","974"],"import React, { Component } from \"react\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport { EditMaterialCostBillModal } from '../Modals/EditMaterialCostBillModal';\r\n\r\nexport class MaterialCostTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { cate: [], editModalShow: false }\r\n  }\r\n\r\n  deleteBillType(id){\r\n    swal({ \r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this Recode!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    })\r\n    .then((willDelete) => {\r\n      if (willDelete) {\r\n        fetch('http://localhost:5000/api/material-cost/', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: id\r\n               \r\n            })\r\n        }).then(res => res.json())\r\n        .then((result) => {\r\n          swal({\r\n            title: \"Material Bill Deleted Succesfully\",\r\n            icon: \"success\",\r\n            button: \"Done\",\r\n          }); \r\n          setTimeout(function() {\r\n            window.location.reload(); \r\n          }.bind(this), 1500);\r\n      });\r\n      } else {\r\n        swal(\"Your imaginary file is safe!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {id, matcode, billno , date , amount } = this.state;\r\n    let EditModelClose = () => this.setState({ editModalShow: false })\r\n  return (\r\n    <div>\r\n       <ButtonToolbar>\r\n\r\n        <EditMaterialCostBillModal\r\n            show={this.state.editModalShow}\r\n            onHide={EditModelClose}\r\n            id={id}\r\n            matcode={matcode}\r\n            billno={billno}\r\n            date={date}\r\n            amount={amount}\r\n        />\r\n        </ButtonToolbar>\r\n    <table className=\"table table-bordered table-sm m-2\" style={{width:\"1000px\"}}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" } }>\r\n          <th scope=\"col\">Id</th>\r\n          <th scope=\"col\">Material Code</th>\r\n          <th scope=\"col\">Bill No</th>\r\n          <th scope=\"col\">Date</th>\r\n          <th scope=\"col\">Amount</th>\r\n          <th scope=\"col\">Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.props.filteredItems.map((i) => (\r\n          <tr\r\n            key={i._id}\r\n            \r\n          >\r\n            <td>{}</td>\r\n            <td>{i.matirialCode}</td>\r\n            <td>{i.matirialBillNo}</td>\r\n            <td>{i.date}</td>\r\n            <td>{i.amount}</td>\r\n            <td><button \r\n              className=\"btn-sm\"\r\n              style={{ backgroundColor: \"#7121AD\", color: \"white\", marginRight:\"4px\" }}\r\n            onClick={() => this.setState({ editModalShow: true, id: i._id, matcode: i.matirialCode, billno: i.matirialBillNo, date:i.date, amount:i.amount })}\r\n            >Edit</button> \r\n            <button \r\n            className=\"btn-sm\"\r\n            style={{ backgroundColor: \"#BA0D32 \", color: \"white\" }} \r\n            onClick={() => this.deleteBillType(i._id)}>Delete</button></td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n     \r\n    </table>\r\n    </div>\r\n  );\r\n};\r\n}\r\n\r\n\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\Tables\\BillTables.jsx",["975","976","977"],"import React, { Component } from \"react\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport { EditBillModal } from '../Modals/EditBillModal';\r\n\r\nexport class BillTables extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { cate: [], editModalShow: false }\r\n  }\r\n\r\n  deleteBills(id){\r\n    swal({\r\n      title: \"Are you sure?\", \r\n      text: \"Once deleted, you will not be able to recover this Recode!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    })\r\n    .then((willDelete) => {\r\n      if (willDelete) {\r\n        fetch('http://localhost:5000/api/bills', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: id\r\n               \r\n            })\r\n        }).then(res => res.json())\r\n        .then((result) => {\r\n          swal({\r\n            title: \"Bill Deleted Succesfully\",\r\n            icon: \"success\",\r\n            button: \"Done\",\r\n          }); \r\n          setTimeout(function() {\r\n            window.location.reload(); \r\n          }.bind(this), 1500);\r\n      });\r\n      } else {\r\n        swal(\"Your imaginary file is safe!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {id, billNo,billType,amount,billDate  } = this.state;\r\n    let EditModelClose = () => this.setState({ editModalShow: false })\r\n  return (\r\n    <div>\r\n       <ButtonToolbar>\r\n\r\n        <EditBillModal\r\n            show={this.state.editModalShow}\r\n            onHide={EditModelClose}\r\n            id={id}\r\n            billNo={billNo}\r\n            billType={billType}\r\n            amount={amount}\r\n            billDate={billDate}\r\n        />\r\n        </ButtonToolbar>\r\n    <table className=\"table table-bordered table-sm m-2\" style={{width:\"1000px\"}}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" } }>\r\n          <th scope=\"col\">Id</th>\r\n          <th scope=\"col\">Bill No</th>\r\n          <th scope=\"col\">Bill Type</th>\r\n          <th scope=\"col\">Amount</th>\r\n          <th scope=\"col\">Date</th>\r\n          <th scope=\"col\">Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.props.filteredItems.map((i) => (\r\n          <tr\r\n            key={i._id}\r\n            \r\n          >\r\n            <td>{}</td>\r\n            <td>{i.billNo}</td>\r\n            <td>{i.billType}</td>\r\n            <td>{i.amount}</td>\r\n            <td>{i.billDate}</td>\r\n            <td><button \r\n              className=\"btn-sm\"\r\n              style={{ backgroundColor: \"#7121AD\", color: \"white\", marginRight:\"4px\" }}\r\n            onClick={() => this.setState({ editModalShow: true, id: i._id, billNo: i.billNo, billType: i.billType, amount: i.amount, billDate: i.billDate})}\r\n            >Edit</button> \r\n            <button \r\n            className=\"btn-sm\"\r\n            style={{ backgroundColor: \"#BA0D32 \", color: \"white\" }} \r\n            onClick={() => this.deleteBills(i._id)}>Delete</button></td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n     \r\n    </table>\r\n    </div>\r\n  );\r\n};\r\n}\r\n\r\n\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\Modals\\AddNewBillTypeModal.jsx",["978","979","980","981"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport swal from 'sweetalert';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport class AddNewBillTypeModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            snackbaropen: false, \r\n            snackbarmsg: '',\r\n            CategoryNameError:''\r\n             \r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const isValid = this.validate();\r\n        // if(isValid){\r\n            fetch('http://localhost:5000/api/bill-type', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'username': 'chathura'\r\n                },\r\n                body: JSON.stringify({\r\n                    billType: event.target.billType.value,\r\n                    status: event.target.status.value\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    swal({\r\n                        title: \"Bill Type Added Succesfully\",\r\n                        icon: \"success\",\r\n                        button: \"Done\",\r\n                    }); \r\n                    this.setState({CategoryNameError:''})\r\n                    setTimeout(function() {\r\n                        window.location.reload(); \r\n                      }.bind(this), 1000);\r\n                }, (error) => {\r\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n                }\r\n\r\n                )\r\n        // }\r\n    }\r\n\r\n    validate(){\r\n        let CategoryNameError = \"\";\r\n\r\n        if(!this.state.CategoryNameError){\r\n            CategoryNameError = \"Category Name Cannot Be Blank\"\r\n        }\r\n\r\n        if(CategoryNameError){\r\n            this.setState({CategoryNameError:CategoryNameError})\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                //centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add Bill Type\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Bill Type</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"billType\" required placeholder=\"Bill Type\"  />\r\n                                          <div style={{background:\"#f8d7da\"}}>{this.state.CategoryNameError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"status\">\r\n                                            <option selected>ACTIVE</option>\r\n                                            <option>INACTIVE</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <br></br>\r\n                                    <Form.Group>\r\n                                        <Button  style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Add Bill Type\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\Modals\\AddNewMaterialCostBill.jsx",["982","983","984","985"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport swal from 'sweetalert';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport class AddNewMaterialCostBill extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            MaterialCodes:[],\r\n            snackbaropen: false, \r\n            snackbarmsg: '',\r\n            CategoryNameError:''\r\n             \r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        axios\r\n          .get(\"http://localhost:5000/api/meterial-code\")\r\n          .then((result) => {\r\n            const MaterialCodes = result.data;\r\n    \r\n            this.setState({ MaterialCodes: MaterialCodes });\r\n          })\r\n          .catch((err) => console.log(err.message));\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const isValid = this.validate();\r\n        // if(isValid){\r\n            fetch('http://localhost:5000/api/material-cost/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'username': 'chathura'\r\n                },\r\n                body: JSON.stringify({\r\n                    matirialCode: event.target.materialcode.value,\r\n                    matirialBillNo: event.target.billno.value,\r\n                    date: event.target.billdate.value,\r\n                    amount: event.target.amount.value,\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    swal({\r\n                        title: \"Material Cost Added Succesfully\",\r\n                        icon: \"success\",\r\n                        button: \"Done\",\r\n                    }); \r\n                    this.setState({CategoryNameError:''})\r\n                    setTimeout(function() {\r\n                        window.location.reload(); \r\n                      }.bind(this), 1000);\r\n                }, (error) => {\r\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n                }\r\n\r\n                )\r\n        // }\r\n    }\r\n\r\n    validate(){\r\n        let CategoryNameError = \"\";\r\n\r\n        if(!this.state.CategoryNameError){\r\n            CategoryNameError = \"Category Name Cannot Be Blank\"\r\n        }\r\n\r\n        if(CategoryNameError){\r\n            this.setState({CategoryNameError:CategoryNameError})\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                //centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add Material Bill Cost\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Material Code</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"materialcode\">\r\n                                        {this.state.MaterialCodes.map((i) => (\r\n                                            <option key={i._id}\r\n                                                    >{i.materialCode}</option>\r\n                                        ))}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"billno\">\r\n                                        <Form.Label>Bill No</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"billno\" required placeholder=\"Bill No\"  />\r\n                                          {/* <div style={{background:\"#f8d7da\"}}>{this.state.CategoryNameError}</div> */}\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"date\">\r\n                                        <Form.Label>Date</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"billdate\" required placeholder=\"Date\"  />\r\n                                          {/* <div style={{background:\"#f8d7da\"}}>{this.state.CategoryNameError}</div> */}\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"date\">\r\n                                        <Form.Label>Amount</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"amount\" required placeholder=\"Amount\"  />\r\n                                          {/* <div style={{background:\"#f8d7da\"}}>{this.state.CategoryNameError}</div> */}\r\n                                    </Form.Group>\r\n                                    <br></br>\r\n                                    <Form.Group>\r\n                                        <Button  style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Add Material Cost Bill\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\Modals\\AddNewBillModal.jsx",["986","987","988","989"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport swal from 'sweetalert';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport class AddNewBillModal extends Component {   \r\n    constructor(props) { \r\n        super(props);\r\n        this.state = {\r\n            snackbaropen: false, \r\n            snackbarmsg: '',\r\n            CategoryNameError:'',\r\n            BillType:[],\r\n             \r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios\r\n          .get(\"http://localhost:5000/api/bill-type\")\r\n          .then((result) => {\r\n            const BillType = result.data;\r\n    \r\n            this.setState({ BillType: BillType });\r\n          })\r\n          .catch((err) => console.log(err.message));\r\n      }         \r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const isValid = this.validate();\r\n        // if(isValid){\r\n            fetch('http://localhost:5000/api/bills', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'username': 'chathura'\r\n                },\r\n                body: JSON.stringify({\r\n                    billNo: event.target.billNo.value,\r\n                    billType: event.target.billType.value,\r\n                    amount: event.target.amount.value,\r\n                    billDate: event.target.billDate.value,\r\n                    month:event.target.month.value\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    swal({\r\n                        title: \"Bill  Added Succesfully\",\r\n                        icon: \"success\",\r\n                        button: \"Done\",\r\n                    }); \r\n                    this.setState({CategoryNameError:''})\r\n                    setTimeout(function() {\r\n                        window.location.reload(); \r\n                      }.bind(this), 1000);\r\n                }, (error) => {\r\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n                }\r\n\r\n                )\r\n        // }\r\n    }\r\n\r\n    validate(){\r\n        let CategoryNameError = \"\";\r\n\r\n        if(!this.state.CategoryNameError){\r\n            CategoryNameError = \"Category Name Cannot Be Blank\"\r\n        }\r\n\r\n        if(CategoryNameError){\r\n            this.setState({CategoryNameError:CategoryNameError})\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                //centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add Bill \r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Bill No</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"billNo\" required placeholder=\"Bill No\"  />\r\n                                          <div style={{background:\"#f8d7da\"}}>{this.state.CategoryNameError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Bill Type</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"billType\">\r\n                                        {this.state.BillType.map((i) => (\r\n                                            <option key={i._id}\r\n                                                    >{i.billType}</option>\r\n                                        ))}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Amount</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"amount\" required placeholder=\"Amount\"  />\r\n                                          <div style={{background:\"#f8d7da\"}}>{this.state.CategoryNameError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"startDate\">\r\n                                        <Form.Label>Date</Form.Label>\r\n                                        <Form.Control type=\"date\" name=\"billDate\" required placeholder=\"Bill Date\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.startDate}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Month</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"month\">\r\n                            \r\n                                                <option value=\"January\" >January</option>\r\n                                                <option value=\"February\" >February</option>\r\n                                                <option value=\"February\" >February</option>\r\n                                                <option value=\"April\" >April</option>\r\n                                                <option value=\"May\" >May</option>\r\n                                                <option value=\"June\" >June </option>\r\n                                                <option value=\"July\" >July</option>\r\n                                                <option value=\"August\" >August</option>\r\n                                                <option value=\"September\" >September</option>\r\n                                                <option value=\"October\" >October</option>\r\n                                                <option value=\"November\" >November</option>\r\n                                                <option value=\"December\" >December</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <br></br>\r\n                                    <Form.Group>\r\n                                        <Button  style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Add Bill\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\Common\\searchBox.jsx",["990"],"import React, { Component } from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange, placeHolder }) => {\r\n  return (\r\n    <input\r\n      style={{ border: \"2px solid #050139\" }}\r\n      type=\"text\"\r\n      name=\"query\"\r\n      autoComplete=\"off\"\r\n      className=\"form-control my-4\"\r\n      placeholder={placeHolder}\r\n      value={value}\r\n      onChange={(e) => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\nexport default SearchBox;","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\reusables\\listgroup.jsx",["991"],"import React, { Component } from \"react\";\r\n\r\nconst ListGroup = ({ genres, onGenreSelect, selectedGenre }) => {\r\n  return (\r\n    <ul className=\"list-group list-group-horizontal mt-3\">\r\n      {genres.map((g) => (\r\n        <li\r\n          onClick={() => onGenreSelect(g)}\r\n          key={g}\r\n          style={{\r\n            backgroundColor: g === selectedGenre ? \"#7121AD\" : \"white\",\r\n            borderRadius: \"2px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          className=\"list-group-item\"\r\n        >\r\n          {g}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ListGroup;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\reusables\\searchBox.jsx",["992"],"import React, { Component } from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange, placeHolder }) => {\r\n  return (\r\n    <input\r\n      style={{ border: \"2px solid #050139\" }}\r\n      type=\"text\"\r\n      name=\"query\"\r\n      autoComplete=\"off\"\r\n      className=\"form-control mt-3\"\r\n      placeholder={placeHolder}\r\n      value={value}\r\n      onChange={(e) => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\nexport default SearchBox;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\reusables\\formsuper.jsx",["993"],"import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\nimport TextArea from \"./textarea\";\r\nimport Radio from \"./radio\";\r\n\r\nclass FormSuper extends Component {\r\n  handleChange = ({ currentTarget }) => {\r\n    const errors = { ...this.state.errors };\r\n\r\n    const errorMessage = this.validateProperty(currentTarget);\r\n\r\n    if (errorMessage) errors[currentTarget.name] = errorMessage;\r\n    else delete errors[currentTarget.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[currentTarget.name] = currentTarget.value;\r\n    this.setState({ data: data, errors: errors });\r\n  };\r\n\r\n  validateProperty = (input) => {\r\n    const obj = { [input.name]: input.value };\r\n    const schema = { [input.name]: this.schema[input.name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  validate = () => {\r\n    const result = Joi.validate(this.state.data, this.schema, {\r\n      abortEarly: false,\r\n    });\r\n    console.log(result);\r\n    if (!result.error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of result.error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n    console.log(errors);\r\n    this.setState({ errors: errors || {} });\r\n\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button\r\n        className=\"btn my-2\"\r\n        style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n        type=\"submit\"\r\n      >\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        label={label}\r\n        value={this.state.data[name]}\r\n        onChange={this.handleChange}\r\n        error={this.state.errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderTextArea(name, label) {\r\n    return (\r\n      <TextArea\r\n        name={name}\r\n        label={label}\r\n        value={this.state.data[name]}\r\n        onChange={this.handleChange}\r\n        error={this.state.errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={this.state.errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormSuper;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\tables\\itemcodestable.jsx",["994"],"import React, { Component } from \"react\";\r\n\r\nconst ItemCodeTable = ({ materialCodeObs }) => {\r\n  return (\r\n    <table\r\n      className=\"table table-bordered table-sm my-1\"\r\n      style={{ width: \"550px\" }}\r\n    >\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" }}>\r\n          <th>Name</th>\r\n          <th>Code</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {materialCodeObs.map((ob) => (\r\n          <tr key={ob._id}>\r\n            <td>{ob.materialName}</td>\r\n            <td>{ob.materialCode}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default ItemCodeTable;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\WholeSaleBuyer\\wholesaleBuyerSideNav\\EmpSidebarData.js",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\ProManagersideNav\\EmpSidebarData.js",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\sideNav\\SidebarData.js",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\WholeSaleBuyer\\wholesaleBuyerSideNav\\SubMenu.jsx",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\ProManagersideNav\\SubMenu.jsx",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\sideNavigation\\SidebarData.js",["995"],"import React from \"react\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as IoIcons from \"react-icons/io\";\r\nimport * as RiIcons from \"react-icons/ri\";\r\n\r\nexport const SidebarData = [\r\n  {\r\n    title: \"Dashboard\",\r\n    path: \"/\",\r\n    icon: <AiIcons.AiFillHome />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n  },\r\n  {\r\n    title: \"Basic Info\",\r\n    path: \"/basic-info\",\r\n    icon: <IoIcons.IoMdPlay />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n  },\r\n  {\r\n    title: \"Items\",\r\n    icon: <RiIcons.RiBookmark3Fill />,\r\n\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n\r\n    subNav: [\r\n      {\r\n        title: \"Item Lists\",\r\n        path: \"/items\",\r\n        icon: <IoIcons.IoIosListBox />,\r\n        cName: \"sub-nav\",\r\n      },\r\n      {\r\n        title: \"Item Records\",\r\n        path: \"/itemsrecords\",\r\n        icon: <RiIcons.RiBarChartFill />,\r\n        cName: \"sub-nav\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    title: \"Returned Product\",\r\n    path: \"/it/new/returned/product\",\r\n    icon: <IoIcons.IoMdTime />,\r\n  },\r\n\r\n  {\r\n    title: \"Wasted Items\",\r\n    path: \"/it/new/wasted/item\",\r\n    icon: <IoIcons.IoMdColorFill />,\r\n  },\r\n  {\r\n    title: \"Item Requests\",\r\n    path: \"/requests/for/items\",\r\n    icon: <IoIcons.IoMdPaperPlane />,\r\n  },\r\n\r\n  {\r\n    title: \"My Profile\",\r\n    path: \"/myprofile\",\r\n    icon: <IoIcons.IoMdPerson />,\r\n  },\r\n];\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\sideNav\\SidebarData.js",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\EmpsideNav\\EmpSidebarData.js",["996"],"import React from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\nimport * as RiIcons from 'react-icons/ri';\r\n\r\nexport const EmpSidebarData = [\r\n  {\r\n    title: 'Dashboard',\r\n    path: '/',\r\n    icon: <AiIcons.AiOutlineHome />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n  },\r\n  {\r\n    title: 'About Me',\r\n    path: '/profile',\r\n    icon: <AiIcons.AiOutlineUser />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n  },\r\n\r\n  {\r\n    title: 'Assignments',\r\n    path: '/assignments',\r\n    icon: <AiIcons.AiOutlineRead />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n  },\r\n\r\n  {\r\n    title: 'Payments',\r\n    path: '/payments',\r\n    icon: <AiIcons.AiOutlineCreditCard />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n  },\r\n\r\n  {\r\n    title: 'Leave',\r\n    path: '/leave',\r\n    icon: <AiIcons.AiOutlineSolution />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n  },\r\n\r\n  {\r\n    title: 'Calendar',\r\n    path: '/calendar',\r\n    icon: <AiIcons.AiOutlineCalendar />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n  },\r\n  {\r\n    title: \"My Profile\",\r\n    path: \"/myprofile\",\r\n    icon: <IoIcons.IoMdPerson />,\r\n  },\r\n];\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\sideNav\\SubMenu.jsx",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\sideNavigation\\SubMenu.jsx",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\sideNav\\SubMenu.jsx",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\EmpsideNav\\SubMenu.jsx",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\pages\\FinanceTeamMember\\clock.jsx",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\Modals\\EditPaymentsModal.jsx",["997"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class EditPaymentsModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { snackbaropen: false, snackbarmsg: '' };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    handleSubmit(event, props) {\r\n        event.preventDefault();\r\n        //alert(event.target.name.value);\r\n\r\n        fetch('http://localhost:5000/api/payment-details/', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: event.target.id.value,\r\n                name: event.target.namecus.value,\r\n                bankname: event.target.bankname.value,\r\n                accountnumber: event.target.accountnumber.value,\r\n                branch: event.target.branch.value\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n\r\n                window.location.reload();\r\n                swal({\r\n                    title: \"Bank Details Updated Succesfully\",\r\n                    icon: \"success\",\r\n                    button: \"Done\",\r\n                  });\r\n            }, (error) => {\r\n                this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n            }\r\n\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Bank Details\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>      \r\n                                <Form.Group controlId=\"id\">\r\n                                    <Form.Label>Bank ID</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"id\" required disabled  defaultValue={this.props.id}/>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"name\">\r\n                                    <Form.Label>Full Name</Form.Label>  \r\n                                    <Form.Control  value= {this.state.namecus} type=\"text\" name=\"namecus\" required placeholder=\"Your Full Name\" defaultValue={this.props.name} />\r\n                                </Form.Group>\r\n\r\n\r\n                                <Form.Group controlId=\"name\">\r\n                                    <Form.Label>Name of Bank</Form.Label>\r\n                                    <Form.Control  value= {this.state.bankname} type=\"text\" name=\"bankname\" required placeholder=\"Eg. Commercial Bank\" defaultValue={this.props.bankname} />\r\n                                </Form.Group>\r\n\r\n\r\n                                <Form.Group controlId=\"name\">\r\n                                    <Form.Label>Account Number</Form.Label>\r\n                                    <Form.Control  value= {this.state.accountnumber} type=\"text\" name=\"accountnumber\" required placeholder=\"Account Number\" defaultValue={this.props.accountnumber} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"name\">\r\n                                    <Form.Label>Bank Branch</Form.Label>\r\n                                    <Form.Control  value= {this.state.branch} type=\"text\" name=\"branch\" required placeholder=\"Bank Branch\" defaultValue={this.props.branch} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group>\r\n                                    <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} className=\"table table-bordered table-sm my-2\" type=\"submit\" >\r\n                                        Edit Bank Details\r\n                                    </Button>\r\n                                </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\Employee\\Modals\\EditEmployeeModal.jsx",["998"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class EditEmployeeModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { snackbaropen: false, snackbarmsg: '' };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    handleSubmit(event, props) {\r\n        event.preventDefault();\r\n        //alert(event.target.name.value);\r\n\r\n        fetch('http://localhost:5000/api/leave-details/', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: event.target.id.value,\r\n                refno: event.target.refno.value,\r\n                reasonforleave: event.target.reasonforleave.value,\r\n                date: event.target.date.value,\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n\r\n                window.location.reload();\r\n                swal({\r\n                    title: \"Employee Leave Updated Succesfully\",\r\n                    icon: \"success\",\r\n                    button: \"Done\",\r\n                  });\r\n            }, (error) => {\r\n                this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n            }\r\n\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Leave Request\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>      \r\n                                <Form.Group controlId=\"id\">\r\n                                    <Form.Label>ID</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"id\" required disabled  defaultValue={this.props.id}/>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"name\">\r\n                                    <Form.Label>Reference No</Form.Label>  \r\n                                    <Form.Control  value= {this.state.refno} type=\"text\" name=\"refno\" required placeholder=\"Reference Number\" defaultValue={this.props.refno} />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"name\">\r\n                                    <Form.Label>Reason for Leave</Form.Label>\r\n                                    <Form.Control  value= {this.state.reasonforleave} type=\"text\" name=\"reasonforleave\" required placeholder=\"Reason for Leave\" defaultValue={this.props.reasonforleave} />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"name\">\r\n                                    <Form.Label>Date</Form.Label>\r\n                                    <Form.Control  value= {this.state.date} type=\"text\" name=\"date\" required placeholder=\"Date\" defaultValue={this.props.date} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group>\r\n                                    <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} className=\"table table-bordered table-sm my-2\" type=\"submit\" >\r\n                                        Edit Leave Request\r\n                                    </Button>\r\n                                </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\WholeSaleBuyer\\util\\acceprtedreportGenerator.js",["999"],"import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { format } from \"date-fns\";\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst generateacceptedPDF = (tickets) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n\r\n  // define the columns we want and their titles\r\n\r\n  const tableColumn = [\r\n    \"Id\",\r\n    \"Buyer Name\",\r\n    \"Email\",\r\n    \"Product Category\",\r\n    \"Quantity\",\r\n    \"Payment Methode\",\r\n    \"Status\",\r\n  ];\r\n  // define an empty array of rows\r\n  const tableRows = [];\r\n\r\n  // for each ticket pass all its data into an array\r\n  tickets.forEach((ticket) => {\r\n    const ticketData = [\r\n      ticket.orderId,\r\n      ticket.buyerName,\r\n      ticket.email,\r\n      ticket.productCategory,\r\n      ticket.quantity,\r\n      ticket.paymentMethode,\r\n      ticket.status,\r\n      // called date-fns to format the date on the ticket\r\n    ];\r\n    // push each tickcet's info into a row\r\n    tableRows.push(ticketData);\r\n  });\r\n\r\n  // startY is basically margin-top\r\n  doc.autoTable(tableColumn, tableRows, { startY: 20 });\r\n  const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  const dateStr = date[0] + date[1] + date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(\"Factory Management System\", 5, 5);\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(\"Order Details Report\", 14, 15);\r\n  // we define the name of our PDF file.\r\n  doc.save(`report_${dateStr}.pdf`);\r\n};\r\n\r\nexport default generateacceptedPDF;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\util\\reportGenerator.js",["1000"],"import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { format } from \"date-fns\";\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst generatePDF = (tickets) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n\r\n  // define the columns we want and their titles\r\n  //const tableColumn = [\"Id\", \"Title\", \"Issue\", \"Status\", \"Closed on\"];\r\n  const tableColumn = [\r\n    \"Id\",\r\n    \"Product Category\",\r\n    \"Quntity\",\r\n    \"Estimated Days\",\r\n    \"Estimated Employees\",\r\n    \"Status\",\r\n  ];\r\n  // define an empty array of rows\r\n  const tableRows = [];\r\n\r\n  // for each ticket pass all its data into an array\r\n  tickets.forEach((ticket) => {\r\n    const ticketData = [\r\n      ticket.productId,\r\n      ticket.productCategory,\r\n      ticket.quantity,\r\n      ticket.esDays,\r\n      ticket.esEmployees,\r\n      ticket.status,\r\n\r\n      // called date-fns to format the date on the ticket\r\n    ];\r\n    // push each tickcet's info into a row\r\n    tableRows.push(ticketData);\r\n  });\r\n\r\n  // startY is basically margin-top\r\n  doc.autoTable(tableColumn, tableRows, { startY: 20 });\r\n  const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  const dateStr = date[0] + date[1] + date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(\"Factory Management System\", 5, 5);\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(\"Production Rounds.\", 14, 15);\r\n  // we define the name of our PDF file.\r\n  doc.save(`report_${dateStr}.pdf`);\r\n};\r\n\r\nexport default generatePDF;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\util\\acceprtedreportGenerator.js",["1001"],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\Modals\\EditMaterialCostBillModal.jsx",["1002"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport axios from 'axios';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class EditMaterialCostBillModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { snackbaropen: false, snackbarmsg: '' , MaterialCodes:[] };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n \r\n    componentDidMount() {\r\n        axios\r\n          .get(\"http://localhost:5000/api/meterial-code\")\r\n          .then((result) => {\r\n            const MaterialCodes = result.data;\r\n    \r\n            this.setState({ MaterialCodes: MaterialCodes });\r\n          })\r\n          .catch((err) => console.log(err.message));\r\n    }\r\n\r\n    handleSubmit(event, props) {\r\n        event.preventDefault();\r\n        fetch('http://localhost:5000/api/material-cost/', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                    id: this.props.id,\r\n                    matirialCode: event.target.materialcode.value,\r\n                    matirialBillNo: event.target.billno.value,\r\n                    date: event.target.billdate.value,\r\n                    amount: event.target.amount.value,\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                swal({\r\n                    title: \"Material Bill Updated Succesfully\",\r\n                    icon: \"success\",\r\n                    button: \"Done\",\r\n                  });\r\n            }, (error) => {\r\n                \r\n            }\r\n\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Material Bill Cost\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                    \r\n                        <Row>\r\n                            <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Material Code</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"materialcode\" defaultValue={this.props.matcode}>\r\n                                        {this.state.MaterialCodes.map((i) => (\r\n                                            <option key={i._id}\r\n                                                    >{i.materialCode}</option>\r\n                                        ))}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"billno\">\r\n                                        <Form.Label>Bill No</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"billno\" required placeholder=\"Bill No\" defaultValue={this.props.billno} />\r\n                                          {/* <div style={{background:\"#f8d7da\"}}>{this.state.CategoryNameError}</div> */}\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"date\">\r\n                                        <Form.Label>Date</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"billdate\" required placeholder=\"Date\"  defaultValue={this.props.date}/>\r\n                                          {/* <div style={{background:\"#f8d7da\"}}>{this.state.CategoryNameError}</div> */}\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"date\">\r\n                                        <Form.Label>Amount</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"amount\" required placeholder=\"Amount\" defaultValue={this.props.amount} />\r\n                                          {/* <div style={{background:\"#f8d7da\"}}>{this.state.CategoryNameError}</div> */}\r\n                                    </Form.Group>\r\n                                    <br></br>\r\n                                    <Form.Group>\r\n                                        <Button  style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Add Material Cost Bill\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\Modals\\EditBillModal.jsx",["1003"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport axios from \"axios\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class EditBillModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { snackbaropen: false, snackbarmsg: '',  BillType:[]};\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    } \r\n\r\n    componentDidMount() {\r\n        axios\r\n          .get(\"http://localhost:5000/api/bill-type\")\r\n          .then((result) => {\r\n            const BillType = result.data;\r\n    \r\n            this.setState({ BillType: BillType });\r\n          })\r\n          .catch((err) => console.log(err.message));\r\n      }\r\n\r\n    handleSubmit(event, props) {\r\n        event.preventDefault();\r\n        fetch('http://localhost:5000/api/bill-type/', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: event.target.id.value,\r\n                billNo: event.target.billNo.value,\r\n                billType: event.target.billType.value,\r\n                amount: event.target.amount.value,\r\n                billDate: event.target.billDate.value\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                swal({\r\n                    title: \"Bill Type Updated Succesfully\",\r\n                    icon: \"success\",\r\n                    button: \"Done\",\r\n                  });\r\n            }, (error) => {\r\n                \r\n            }\r\n\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Bill\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"id\">\r\n                                        <Form.Label>ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"id\" required disabled defaultValue={this.props.id} hidden/>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Bill No</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"billNo\" required placeholder=\"Bill No\"  defaultValue={this.props.billNo}/>\r\n                                          <div style={{background:\"#f8d7da\"}}>{this.state.CategoryNameError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Bill Type</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"billType\" defaultValue={this.props.billType}>\r\n                                        {this.state.BillType.map((i) => (\r\n                                            <option key={i._id}\r\n                                                    >{i.billType}</option>\r\n                                        ))}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Amount</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"amount\" required placeholder=\"Amount\"  defaultValue={this.props.amount}/>\r\n                                          <div style={{background:\"#f8d7da\"}}>{this.state.CategoryNameError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"startDate\">\r\n                                        <Form.Label>Date</Form.Label>\r\n                                        <Form.Control type=\"date\" name=\"billDate\" required placeholder=\"Bill Date\" defaultValue={this.props.billDate}/>\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.startDate}</div>\r\n                                    </Form.Group>\r\n                                    <br></br>\r\n                                    <Form.Group>\r\n                                        <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Edit Bill\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\Tables\\BillTypesTable.jsx",["1004","1005","1006"],"import React, { Component } from \"react\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport { EditBillTypeModal } from '../Modals/EditBillTypeModal';\r\n\r\nexport class BillTypesTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { cate: [], editModalShow: false }\r\n  }\r\n\r\n  deleteBillType(id){\r\n    swal({ \r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this Recode!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    })\r\n    .then((willDelete) => {\r\n      if (willDelete) {\r\n        fetch('http://localhost:5000/api/bill-type', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: id\r\n               \r\n            })\r\n        }).then(res => res.json())\r\n        .then((result) => {\r\n          swal({\r\n            title: \"Bill Type Deleted Succesfully\",\r\n            icon: \"success\",\r\n            button: \"Done\",\r\n          }); \r\n          setTimeout(function() {\r\n            window.location.reload(); \r\n          }.bind(this), 1500);\r\n      });\r\n      } else {\r\n        swal(\"Your imaginary file is safe!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {id, billType, status } = this.state;\r\n    let EditModelClose = () => this.setState({ editModalShow: false })\r\n  return (\r\n    <div>\r\n       <ButtonToolbar>\r\n\r\n        <EditBillTypeModal\r\n            show={this.state.editModalShow}\r\n            onHide={EditModelClose}\r\n            id={id}\r\n            billType={billType}\r\n            status={status}\r\n        />\r\n        </ButtonToolbar>\r\n    <table className=\"table table-bordered table-sm m-2\" style={{width:\"1000px\"}}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" } }>\r\n          <th scope=\"col\">Id</th>\r\n          <th scope=\"col\">Bill Type</th>\r\n          <th scope=\"col\">Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.props.filteredItems.map((i) => (\r\n          <tr\r\n            key={i._id}\r\n            \r\n          >\r\n            <td>{}</td>\r\n            <td>{i.billType}</td>\r\n            <td><button \r\n              className=\"btn-sm\"\r\n              style={{ backgroundColor: \"#7121AD\", color: \"white\", marginRight:\"4px\" }}\r\n            onClick={() => this.setState({ editModalShow: true, id: i._id, billType: i.billType, status: i.status })}\r\n            >Edit</button> \r\n            <button \r\n            className=\"btn-sm\"\r\n            style={{ backgroundColor: \"#BA0D32 \", color: \"white\" }} \r\n            onClick={() => this.deleteBillType(i._id)}>Delete</button></td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n     \r\n    </table>\r\n    </div>\r\n  );\r\n};\r\n}\r\n\r\n\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\WholeSaleBuyer\\Tabales\\OrderDetailsTable.jsx",["1007","1008","1009"],"import React, { Component } from \"react\";\r\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\r\nimport swal from \"sweetalert\";\r\nimport { EditOrderDetailsMoadal } from \"../Modals/EditOrderDetailsMoadal\";\r\n\r\nexport class OrderDetailsTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { editModalShow: false };\r\n  }\r\n\r\n  deleteCat(id) {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this Recode!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        fetch(\"http://localhost:5000/api/order-details\", {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            username: \"chathura\",\r\n          },\r\n          body: JSON.stringify({\r\n            id: id,\r\n          }),\r\n        })\r\n          .then((res) => res.json())\r\n          .then((result) => {\r\n            swal({\r\n              title: \"Order Rejected Succesfully\",\r\n              icon: \"success\",\r\n              button: \"Done\",\r\n            });\r\n            setTimeout(\r\n              function () {\r\n                window.location.reload();\r\n              }.bind(this),\r\n              1500\r\n            );\r\n          });\r\n      } else {\r\n        swal(\"Your imaginary file is safe!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      buyerName,\r\n      email,\r\n      productCategory,\r\n      quantity,\r\n      paymentMethode,\r\n      status,\r\n    } = this.state;\r\n    let EditModelClose = () => this.setState({ editModalShow: false });\r\n    return (\r\n      <div>\r\n        <ButtonToolbar>\r\n          <EditOrderDetailsMoadal\r\n            show={this.state.editModalShow}\r\n            onHide={EditModelClose}\r\n            id={id}\r\n            buyerName={buyerName}\r\n            email={email}\r\n            productCategory={productCategory}\r\n            quantity={quantity}\r\n            paymentMethode={paymentMethode}\r\n            status={status}\r\n          />\r\n        </ButtonToolbar>\r\n        <table\r\n          className=\"table table-bordered table-sm\"\r\n          style={{ width: \"1200px\" }}\r\n        >\r\n          <thead>\r\n            <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" }}>\r\n              <th scope=\"col\">Id</th>\r\n              <th scope=\"col\">Buyer Name</th>\r\n              <th scope=\"col\">Email</th>\r\n              <th scope=\"col\">Product Category</th>\r\n              <th scope=\"col\">Quantity</th>\r\n              <th scope=\"col\">Payment Methode</th>\r\n              <th scope=\"col\">Status</th>\r\n\r\n              <th scope=\"col\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.orderDetails.map((i) => (\r\n              <tr key={i._id}>\r\n                <td>{i.orderId}</td>\r\n                <td>{i.buyerName}</td>\r\n                <td>{i.email}</td>\r\n                <td>{i.productCategory}</td>\r\n                <td>{i.quantity}</td>\r\n                <td>{i.paymentMethode}</td>\r\n                <td>{i.status}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn-sm\"\r\n                    style={{\r\n                      backgroundColor: \"#7121AD\",\r\n                      color: \"white\",\r\n                      marginRight: \"4px\",\r\n                    }}\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        editModalShow: true,\r\n                        id: i._id,\r\n                        productCategory: i.productCategory,\r\n                      })\r\n                    }\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    className=\"btn-sm\"\r\n                    style={{ backgroundColor: \"#dc3545 \", color: \"white\" }}\r\n                    onClick={() => this.deleteCat(i._id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\common\\clock.jsx",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\reusables\\radio.jsx",["1010","1011","1012"],"import React, { Component } from \"react\";\r\n\r\nconst Radio = ({ label, name, value, onChange, error }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{ fontWeight: \"bold\" }}>Gender</div>\r\n      <div className=\"form-check form-check-inline\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          value=\"Male\"\r\n          name=\"Gender\"\r\n        />\r\n        <label className=\"form-check-label\" for=\"inlineRadio1\">\r\n          Male\r\n        </label>\r\n      </div>\r\n      <div className=\"form-check form-check-inline\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          checked\r\n          value=\"Female\"\r\n          name=\"Gender\"\r\n        />\r\n        <label className=\"form-check-label\" for=\"inlineRadio2\">\r\n          Female\r\n        </label>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Radio;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\reusables\\textarea.jsx",["1013"],"import React, { Component } from \"react\";\r\n\r\nconst TextArea = ({ label, name, value, onChange, error }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label style={{ fontWeight: \"bold\" }} htmlFor={name}>\r\n        {label}\r\n      </label>\r\n      <textarea\r\n        cols=\"30\"\r\n        rows=\"3\"\r\n        className=\"form-control\"\r\n        style={{ border: \"1px solid #050139\" }}\r\n        value={value}\r\n        name={name}\r\n        autoComplete=\"off\"\r\n        onChange={onChange}\r\n      ></textarea>\r\n\r\n      {error && (\r\n        <div className=\"alert alert-danger\" style={{ padding: 3 }}>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextArea;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\reusables\\select.jsx",["1014"],"import React, { Component } from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group my-2\">\r\n      <label style={{ fontWeight: \"bold\" }} htmlFor={name}>\r\n        {label}\r\n      </label>\r\n      <select\r\n        name={name}\r\n        id={name}\r\n        {...rest}\r\n        className=\"form-control\"\r\n        style={{ border: \"1px solid #050139\" }}\r\n      >\r\n        <option value=\"\" />\r\n\r\n        {options.map((opt) => (\r\n          <option key={opt._id} value={opt.categoryName}>\r\n            {opt.categoryName}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && (\r\n        <div className=\"alert alert-danger\" style={{ padding: 3 }}>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\reusables\\input.jsx",["1015"],"import React, { Component } from \"react\";\r\n\r\nconst Input = ({ name, label, value, onChange, error, type }) => {\r\n  return (\r\n    <div className=\"form-group my-2\">\r\n      <label style={{ fontWeight: \"bold\" }} htmlFor={name}>\r\n        {label}\r\n      </label>\r\n      <input\r\n        id={name}\r\n        type={type}\r\n        className=\"form-control\"\r\n        value={value}\r\n        name={name}\r\n        autoComplete=\"off\"\r\n        onChange={onChange}\r\n        style={{ border: \"1px solid #050139\" }}\r\n      />\r\n      {error && (\r\n        <div className=\"alert alert-danger\" style={{ padding: 3 }}>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\FinanceTeamMember\\Modals\\EditBillTypeModal.jsx",["1016"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class EditBillTypeModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { snackbaropen: false, snackbarmsg: '' };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n \r\n\r\n    handleSubmit(event, props) {\r\n        event.preventDefault();\r\n        fetch('http://localhost:5000/api/bill-type/', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: event.target.id.value,\r\n                billType: event.target.billType.value,\r\n                status: event.target.status.value\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                swal({\r\n                    title: \"Bill Type Updated Succesfully\",\r\n                    icon: \"success\",\r\n                    button: \"Done\",\r\n                  });\r\n            }, (error) => {\r\n                \r\n            }\r\n\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Category\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"id\">\r\n                                        <Form.Label>ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"id\" required disabled defaultValue={this.props.id} hidden/>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Bill Type</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"billType\" required placeholder=\"Bill Type\" defaultValue={this.props.billType} />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"status\" defaultValue={this.props.status}>\r\n                                            <option selected disabled>{this.props.status}</option>\r\n                                            <option>ACTIVE</option>\r\n                                            <option>INACTIVE</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <br />\r\n                                    <Form.Group>\r\n                                        <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Edit Category\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\WholeSaleBuyer\\Modals\\EditOrderDetailsMoadal.jsx",["1017","1018","1019"],"import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport swal from \"sweetalert\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport class EditOrderDetailsMoadal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { snackbaropen: false, snackbarmsg: \"\", categories: [] };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  snackbarClose = (event) => {\r\n    this.setState({ snackbaropen: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/categories\")\r\n      .then((result) => {\r\n        const categories = result.data;\r\n\r\n        this.setState({ categories: categories });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    fetch(\"http://localhost:5000/api/order-details\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        username: \"thiranya\",\r\n      },\r\n      body: JSON.stringify({\r\n        id: event.target.id.value,\r\n        productCategory: event.target.productCategory.value,\r\n        quantity: event.target.quantity.value,\r\n        paymentMethode: event.target.paymentMethode.value,\r\n        //status: event.target.status.value,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          swal({\r\n            title: \"Order Status Changed Successfully\",\r\n            icon: \"success\",\r\n            button: \"Done\",\r\n          });\r\n          setTimeout(\r\n            function () {\r\n              window.location.reload();\r\n            }.bind(this),\r\n            1500\r\n          );\r\n        },\r\n        (error) => {\r\n          this.setState({ snackbaropen: true, snackbarmsg: \"Failed\" });\r\n        }\r\n      );\r\n  }\r\n\r\n  //   handleSubmit = (event) => {\r\n\r\n  //       return <Redirect to='/login' />\r\n\r\n  //   }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n          open={this.state.snackbaropen}\r\n          autoHideDuration={6000}\r\n          onClose={this.snackbarClose}\r\n          message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"danger\"\r\n              onClick={this.snackbarClose}\r\n            ></IconButton>,\r\n          ]}\r\n        />\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          //centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Update Details\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col sm={6}>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                  <Form.Group>\r\n                    <Form.Group controlId=\"orderId\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        name=\"id\"\r\n                        required\r\n                        placeholder=\"id\"\r\n                        defaultValue={this.props.id}\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <Form.Label>Product Category</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      required\r\n                      name=\"productCategory\"\r\n                      defaultValue={this.props.productCategory}\r\n                    >\r\n                      {this.state.categories.map((i) => (\r\n                        <option key={i._id}>{i.categoryName}</option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"quantity\">\r\n                    <Form.Label>Quntity</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"quantity\"\r\n                      required\r\n                      placeholder=\"Quntity\"\r\n                      defaultValue={this.props.quantity}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"paymentMethode\">\r\n                    <Form.Label>Payment Methode</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"paymentMethode\"\r\n                      required\r\n                      placeholder=\"Payment Methode\"\r\n                      defaultValue={this.props.paymentMethode}\r\n                    />\r\n                    <div style={{ background: \"#f8d7da\" }}>\r\n                      {this.state.validationError}\r\n                    </div>\r\n                    <option selected>Cash</option>\r\n                    <option>Card</option>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                      Edit Details\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"danger\" onClick={this.props.onHide}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\common\\searchBox.jsx",["1020"],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\Tabales\\OrderDetailsTable.jsx",["1021","1022","1023"],"import React, { Component } from \"react\";\r\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\r\nimport swal from \"sweetalert\";\r\nimport { EditProductStockDetailsMoadal } from \"../Modals/EditProductStockDetailsMoadal\";\r\n\r\nexport class OrderDetailsTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { editModalShow: false };\r\n  }\r\n\r\n  deleteCat(id) {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this Recode!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        fetch(\"http://localhost:5000/api/order-details\", {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            username: \"chathura\",\r\n          },\r\n          body: JSON.stringify({\r\n            id: id,\r\n          }),\r\n        })\r\n          .then((res) => res.json())\r\n          .then((result) => {\r\n            swal({\r\n              title: \"Order Rejected Succesfully\",\r\n              icon: \"success\",\r\n              button: \"Done\",\r\n            });\r\n            setTimeout(\r\n              function () {\r\n                window.location.reload();\r\n              }.bind(this),\r\n              1500\r\n            );\r\n          });\r\n      } else {\r\n        swal(\"Your imaginary file is safe!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      buyerName,\r\n      email,\r\n      productCategory,\r\n      quantity,\r\n      paymentMethode,\r\n      status,\r\n    } = this.state;\r\n    let EditModelClose = () => this.setState({ editModalShow: false });\r\n    return (\r\n      <div>\r\n        <ButtonToolbar>\r\n          <EditProductStockDetailsMoadal\r\n            show={this.state.editModalShow}\r\n            onHide={EditModelClose}\r\n            id={id}\r\n            buyerName={buyerName}\r\n            email={email}\r\n            productCategory={productCategory}\r\n            quantity={quantity}\r\n            paymentMethode={paymentMethode}\r\n            status={status}\r\n          />\r\n        </ButtonToolbar>\r\n        <table\r\n          className=\"table table-bordered table-sm\"\r\n          style={{ width: \"1200px\" }}\r\n        >\r\n          <thead>\r\n            <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" }}>\r\n              <th scope=\"col\">Id</th>\r\n              <th scope=\"col\">Buyer Name</th>\r\n              <th scope=\"col\">Email</th>\r\n              <th scope=\"col\">Product Category</th>\r\n              <th scope=\"col\">Quantity</th>\r\n              <th scope=\"col\">Payment Methode</th>\r\n              <th scope=\"col\">Status</th>\r\n\r\n              <th scope=\"col\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.orderDetails.map((i) => (\r\n              <tr key={i._id}>\r\n                <td>{i.orderId}</td>\r\n                <td>{i.buyerName}</td>\r\n                <td>{i.email}</td>\r\n                <td>{i.productCategory}</td>\r\n                <td>{i.quantity}</td>\r\n                <td>{i.paymentMethode}</td>\r\n                <td>{i.status}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn-sm\"\r\n                    style={{\r\n                      backgroundColor: \"#7121AD\",\r\n                      color: \"white\",\r\n                      marginRight: \"4px\",\r\n                    }}\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        editModalShow: true,\r\n                        id: i._id,\r\n                        productCategory: i.productCategory,\r\n                      })\r\n                    }\r\n                  >\r\n                    Accept\r\n                  </button>\r\n                  <button\r\n                    className=\"btn-sm\"\r\n                    style={{ backgroundColor: \"#dc3545 \", color: \"white\" }}\r\n                    onClick={() => this.deleteCat(i._id)}\r\n                  >\r\n                    Reject\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\Tabales\\FeedbackTable.jsx",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\Tabales\\PreviousProductionRoundTable.jsx",["1024","1025","1026"],"import React, { Component } from \"react\";\r\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\r\nimport swal from \"sweetalert\";\r\nimport { EditPreviousProductionRoundDetailsModal } from \"../Modals/EditPreviousProductionRoundDetailsModal\";\r\n\r\nexport class PreviousProductionRoundTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { editModalShow: false };\r\n  }\r\n\r\n  deleteCat(id) {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this Recode!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        fetch(\"http://localhost:5000/api/prevProRound-details\", {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            username: \"chathura\",\r\n          },\r\n          body: JSON.stringify({\r\n            id: id,\r\n          }),\r\n        })\r\n          .then((res) => res.json())\r\n          .then((result) => {\r\n            swal({\r\n              title: \"Previous Production Round Deleted Succesfully\",\r\n              icon: \"success\",\r\n              button: \"Done\",\r\n            });\r\n            setTimeout(\r\n              function () {\r\n                window.location.reload();\r\n              }.bind(this),\r\n              1500\r\n            );\r\n          });\r\n      } else {\r\n        swal(\"Your imaginary file is safe!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      productCategory,\r\n      quantity,\r\n      completedQuantity,\r\n      remaningQuantity,\r\n      status,\r\n    } = this.state;\r\n    let EditModelClose = () => this.setState({ editModalShow: false });\r\n    return (\r\n      <div>\r\n        <ButtonToolbar>\r\n          <EditPreviousProductionRoundDetailsModal\r\n            show={this.state.editModalShow}\r\n            onHide={EditModelClose}\r\n            id={id}\r\n            productCategory={productCategory}\r\n            quantity={quantity}\r\n            completedQuantity={completedQuantity}\r\n            remaningQuantity={remaningQuantity}\r\n            status={status}\r\n          />\r\n        </ButtonToolbar>\r\n        <table\r\n          className=\"table table-bordered table-sm\"\r\n          style={{ width: \"1200px\" }}\r\n        >\r\n          <thead>\r\n            <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" }}>\r\n              <th scope=\"col\">Id</th>\r\n              <th scope=\"col\">Product Category</th>\r\n              <th scope=\"col\">Quntity</th>\r\n              <th scope=\"col\">Completed Quantity</th>\r\n              <th scope=\"col\">Remaining Quantity</th>\r\n              <th scope=\"col\">Status</th>\r\n              <th scope=\"col\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.preproductionRound.map((i) => (\r\n              <tr key={i._id}>\r\n                <td>{i.productId}</td>\r\n                <td>{i.productCategory}</td>\r\n                <td>{i.quantity}</td>\r\n                <td>{i.completedQuantity}</td>\r\n                <td>{i.remainingQuantity}</td>\r\n                <td>{i.status}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn-sm\"\r\n                    style={{\r\n                      backgroundColor: \"#7121AD\",\r\n                      color: \"white\",\r\n                      marginRight: \"4px\",\r\n                    }}\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        editModalShow: true,\r\n                        id: i._id,\r\n                        productCategory: i.productCategory,\r\n                        quantity: i.quantity,\r\n                        completedQuantity: i.completedQuantity,\r\n                        remainingQuantity: i.remainingQuantity,\r\n                      })\r\n                    }\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    className=\"btn-sm\"\r\n                    style={{ backgroundColor: \"#dc3545 \", color: \"white\" }}\r\n                    onClick={() => this.deleteCat(i._id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\utils\\paginate.js",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\utils\\reportGenerator.js",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\Tabales\\ProductListTable.jsx",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\Tabales\\ProductonRoundTable.jsx",["1027","1028","1029"],"import React, { Component } from \"react\";\r\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\r\nimport swal from \"sweetalert\";\r\nimport { EditProductionRoundDetailsModal } from \"../Modals/EditProductionRoundDetailsModal\";\r\n\r\nexport class ProductonRoundTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { editModalShow: false };\r\n  }\r\n\r\n  deleteCat(id) {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this Recode!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        fetch(\"http://localhost:5000/api/newProRound-details\", {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            username: \"chathura\",\r\n          },\r\n          body: JSON.stringify({\r\n            id: id,\r\n          }),\r\n        })\r\n          .then((res) => res.json())\r\n          .then((result) => {\r\n            swal({\r\n              title: \"New Production Round Deleted Succesfully\",\r\n              icon: \"success\",\r\n              button: \"Done\",\r\n            });\r\n            setTimeout(\r\n              function () {\r\n                window.location.reload();\r\n              }.bind(this),\r\n              1500\r\n            );\r\n          });\r\n      } else {\r\n        swal(\"Your imaginary file is safe!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { id, productCategory, quantity, esDays, esEmployees } = this.state;\r\n    let EditModelClose = () => this.setState({ editModalShow: false });\r\n    return (\r\n      <div>\r\n        <ButtonToolbar>\r\n          <EditProductionRoundDetailsModal\r\n            show={this.state.editModalShow}\r\n            onHide={EditModelClose}\r\n            id={id}\r\n            productCategory={productCategory}\r\n            quantity={quantity}\r\n            esDays={esDays}\r\n            esEmployees={esEmployees}\r\n          />\r\n        </ButtonToolbar>\r\n        <table\r\n          className=\"table table-bordered table-sm\"\r\n          style={{ width: \"1200px\" }}\r\n        >\r\n          <thead>\r\n            <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" }}>\r\n              <th scope=\"col\">Id</th>\r\n              <th scope=\"col\">Product Category</th>\r\n              <th scope=\"col\">Quntity</th>\r\n              <th scope=\"col\">Estimated Days</th>\r\n              <th scope=\"col\">Estimated Employees</th>\r\n              <th scope=\"col\">Status</th>\r\n              <th scope=\"col\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.productionRound.map((i) => (\r\n              <tr key={i._id}>\r\n                <td>{i.productId}</td>\r\n                <td>{i.productCategory}</td>\r\n                <td>{i.quantity}</td>\r\n                <td>{i.esDays}</td>\r\n                <td>{i.esEmployees}</td>\r\n                <td>{i.status}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn-sm\"\r\n                    style={{\r\n                      backgroundColor: \"#7121AD\",\r\n                      color: \"white\",\r\n                      marginRight: \"4px\",\r\n                    }}\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        editModalShow: true,\r\n                        id: i._id,\r\n                        productCategory: i.productCategory,\r\n                        quantity: i.quantity,\r\n                        esDays: i.esDays,\r\n                        esEmployees: i.esEmployees,\r\n                      })\r\n                    }\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    className=\"btn-sm\"\r\n                    style={{ backgroundColor: \"#dc3545\", color: \"white\" }}\r\n                    onClick={() => this.deleteCat(i._id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\tables\\returnedproductstable.jsx",["1030"],"import React, { Component } from \"react\";\r\n\r\nconst ReturnedProductsTable = ({\r\n  filteredItems,\r\n  onItemDelete,\r\n  onSet,\r\n  onSetPopup,\r\n}) => {\r\n  return (\r\n    <table\r\n      className=\"table table-bordered table-sm\"\r\n      style={{ width: \"1200px\" }}\r\n    >\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" }}>\r\n          <th scope=\"col\">Item Code</th>\r\n          <th scope=\"col\">Item Type</th>\r\n          <th scope=\"col\">Category</th>\r\n          <th scope=\"col\">Quantity</th>\r\n          <th scope=\"col\">Buyer</th>\r\n          <th scope=\"col\">Returned date</th>\r\n          <th scope=\"col\">Reason</th>\r\n          <th scope=\"col\">Handle</th>\r\n          <th scope=\"col\">Handle</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {filteredItems.map((r) => (\r\n          <tr key={r._id}>\r\n            <td>{r.rCode}</td>\r\n            <td\r\n              className={\r\n                r.rType === \"Material\" ? \"table-success\" : \"table-primary\"\r\n              }\r\n              style={{\r\n                border:\r\n                  r.rType === \"Material\"\r\n                    ? \"1px solid black\"\r\n                    : \"1px solid black\",\r\n              }}\r\n            >\r\n              {r.rType}\r\n            </td>\r\n            <td>{r.rCategory}</td>\r\n            <td>{r.rQuantity}</td>\r\n            <td>{r.rBuyer}</td>\r\n            <td>{r.rDate}</td>\r\n            <td>{r.rReason}</td>\r\n            <td>\r\n              <button\r\n                className=\"btn-sm\"\r\n                onClick={() => onSetPopup(r._id)}\r\n                style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n              >\r\n                Edit\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                onClick={() => onItemDelete(r)}\r\n                className=\"btn-sm\"\r\n                style={{ backgroundColor: \"#dc3545 \", color: \"white\" }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default ReturnedProductsTable;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\forms\\editreturnedproductform.jsx",["1031","1032","1033","1034","1035"],"import React, { Component } from \"react\";\r\nimport FormSuper from \"../reusables/formsuper\";\r\nimport Joi, { join } from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport ItemCodeTable from \"../tables/itemcodestable\";\r\nimport SearchBox from \"../reusables/searchBox\";\r\nimport ListGroup from \"../reusables/listgroup\";\r\nimport swal from \"sweetalert\";\r\n\r\nclass EditReturnedProductForm extends FormSuper {\r\n  state = {\r\n    data: {\r\n      _id: \"\",\r\n      Code: \"\",\r\n      Type: \"Product\",\r\n      Category: \"\",\r\n      Quantity: \"\",\r\n      Buyer: \"\",\r\n      ReturnedDate: \"\",\r\n      Reason: \"\",\r\n    },\r\n    iCodes: [],\r\n    searchQuery: \"\",\r\n    errors: {},\r\n    selectedGenre: \"All\",\r\n    materialCodeObjects: [],\r\n    categoryObjects: [],\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    Code: Joi.string().required(),\r\n    Type: Joi.string(),\r\n    Category: Joi.string().required(),\r\n    Quantity: Joi.number().required(),\r\n    Buyer: Joi.string().required(),\r\n    ReturnedDate: Joi.date().required(),\r\n    Reason: Joi.string().required(),\r\n  };\r\n\r\n  componentDidMount() {\r\n    const ob = {\r\n      _id: this.props.returnedOb._id,\r\n      Code: this.props.returnedOb.rCode,\r\n      Type: this.props.returnedOb.rType,\r\n      Category: this.props.returnedOb.rCategory,\r\n      Quantity: this.props.returnedOb.rQuantity,\r\n      Buyer: this.props.returnedOb.rBuyer,\r\n      ReturnedDate: this.props.returnedOb.rDate,\r\n      Reason: this.props.returnedOb.rReason,\r\n    };\r\n\r\n    this.setState({ data: ob });\r\n    //take the category set from db\r\n    //take the Material codes from db\r\n\r\n    axios.get(\"http://localhost:5000/category/\").then((result) => {\r\n      const categoryObjs = result.data;\r\n\r\n      //this.setState({categoryObjects: categoryObjs});\r\n      this.setState({\r\n        categoryObjects: categoryObjs,\r\n      });\r\n    });\r\n\r\n    //take the Product codes from db\r\n    //and put them into single array name iCodes after put them into codes table after set search and fiter them and put again\r\n  }\r\n\r\n  doSubmit() {\r\n    // console.log(\"submitted\", this.state.data);\r\n\r\n    const { data } = this.state;\r\n\r\n    const jsonOb = {\r\n      _id: data._id,\r\n      rCode: data.Code,\r\n      rType: data.Type,\r\n      rCategory: data.Category,\r\n      rQuantity: data.Quantity,\r\n      rBuyer: data.Buyer,\r\n      rDate: data.ReturnedDate,\r\n      rReason: data.Reason,\r\n    };\r\n\r\n    console.log(jsonOb);\r\n    axios\r\n      .post(\"http://localhost:5000/returned/update/\" + data._id, jsonOb)\r\n      .then((result) => console.log(result.data));\r\n\r\n    swal({\r\n      text: \"Returned Item added successfully.\",\r\n      icon: \"success\",\r\n      timer: \"1500\",\r\n    });\r\n\r\n    this.props.onSetAndClose(jsonOb);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"Code\", \"Item Code\")}\r\n              {this.renderInput(\"Type\", \"Item Type\")}\r\n              {this.renderSelect(\r\n                \"Category\",\r\n                \"Category\",\r\n                this.state.categoryObjects\r\n              )}\r\n              {this.renderInput(\"Quantity\", \"Item Quantity\")}\r\n              {this.renderInput(\"Buyer\", \"Buyer Name\")}\r\n              {this.renderInput(\"ReturnedDate\", \"Returned date\", \"date\")}\r\n              {this.renderInput(\"Reason\", \"Reason for return\")}\r\n              {this.renderButton(\"Update product\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditReturnedProductForm;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\reusables\\formpopup.jsx",["1036","1037"],"import React, { Component } from \"react\";\r\nimport { Dialog, DialogTitle, DialogContent } from \"@material-ui/core\";\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\nconst FormPopup = ({ title, children, openPopup, onClose }) => {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={openPopup}\r\n        fullWidth=\"200\"\r\n        style={{\r\n          maxHeight: 1000,\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        <DialogTitle\r\n          style={{\r\n            height: 56,\r\n          }}\r\n        >\r\n          <div\r\n            style={{ display: \"flex\", textAlign: \"center\", color: \"#7121AD\" }}\r\n          >\r\n            <h5 style={{ flexGrow: 1 }}>{title}</h5>\r\n            <button\r\n              className=\"btn-danger\"\r\n              onClick={() => onClose()}\r\n              style={{\r\n                color: \"white\",\r\n                borderRadius: \"2px\",\r\n                borderColor: \"#BA0D32\",\r\n                padding: \"2px\",\r\n                width: \"30px\",\r\n                height: \"30px\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <div>x</div>\r\n            </button>\r\n          </div>\r\n        </DialogTitle>\r\n\r\n        <DialogContent dividers>\r\n          <div>{children}</div>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormPopup;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\reusables\\selectsearch.jsx",["1038"],"import React, { Component } from \"react\";\r\n\r\nconst SelectSearch = ({ categories, categoryValue, onChange }) => {\r\n  return (\r\n    <select\r\n      value={categoryValue}\r\n      onChange={(e) => onChange(e.currentTarget.value)}\r\n      style={{ border: \"2px solid #050139\" }}\r\n      className=\"form-select form-select-sm mt-3\"\r\n      aria-label=\".form-select-sm example\"\r\n    >\r\n      <option value={\"first\"}>Open the category menu</option>\r\n      {categories.map((cat) => (\r\n        <option key={cat._id} value={cat.categoryName}>\r\n          {cat.categoryName}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default SelectSearch;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\reusables\\dialogbox.jsx",["1039"],"import React, { Component } from \"react\";\r\n\r\nconst DialogBox = ({ show, deleteOrNot }) => {\r\n  if (!show) return <React.Fragment />;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"overlay\">\r\n        <div className=\"dialog\">\r\n          <div className=\"dialog__content\">\r\n            <h2 className=\"dialog__title\">Delete a Item?</h2>\r\n            <p className=\"dialog__description\">\r\n              Are you sure you want to delete this Item?\r\n            </p>\r\n          </div>\r\n\r\n          <hr />\r\n\r\n          <div className=\"dialog__footer\">\r\n            <button\r\n              onClick={() => deleteOrNot(\"no\")}\r\n              className=\"dialog__cancel\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              onClick={() => deleteOrNot(\"yes\")}\r\n              className=\"dialog__confirm\"\r\n            >\r\n              Yes, delete it\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DialogBox;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\forms\\edititemrequestform.jsx",["1040","1041","1042"],"import React, { Component } from \"react\";\r\nimport FormSuper from \"../reusables/formsuper\";\r\nimport Joi, { join } from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass EditItemRequestForm extends FormSuper {\r\n  state = {\r\n    data: {\r\n      _id: \"\",\r\n      Code: \"\",\r\n      Type: \"\",\r\n      Category: \"\",\r\n      Quantity: \"\",\r\n      RequestDate: \"\",\r\n      Status: \"\",\r\n    },\r\n\r\n    types: [\r\n      { _id: \"123\", categoryName: \"Product\" },\r\n      { _id: \"143\", categoryName: \"Material\" },\r\n    ],\r\n    iCodes: [],\r\n    genres: [\"All\", \"Product\", \"Material\"],\r\n    searchQuery: \"\",\r\n    errors: {},\r\n    selectedGenre: \"All\",\r\n    materialCodeObjects: [],\r\n    categoryObjects: [],\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    Code: Joi.string().required(),\r\n    Type: Joi.string().required(),\r\n    Category: Joi.string().required(),\r\n    Quantity: Joi.number().required(),\r\n    RequestDate: Joi.date().required(),\r\n    Status: Joi.string(),\r\n  };\r\n\r\n  componentDidMount() {\r\n    const ob = {\r\n      _id: this.props.requestOb._id,\r\n      Code: this.props.requestOb.reqCode,\r\n      Type: this.props.requestOb.reqType,\r\n      Category: this.props.requestOb.reqCategory,\r\n      Quantity: this.props.requestOb.reqQuantity,\r\n      RequestDate: this.props.requestOb.reqDate,\r\n      Status: this.props.requestOb.reqStatus,\r\n    };\r\n\r\n    this.setState({ data: ob });\r\n    //take the category set from db\r\n    //take the Material codes from db\r\n    axios.get(\"http://localhost:5000/category/\").then((result) => {\r\n      const categoryObjs = result.data;\r\n      console.log(categoryObjs);\r\n      //this.setState({categoryObjects: categoryObjs});\r\n      this.setState({\r\n        categoryObjects: categoryObjs,\r\n      });\r\n    });\r\n\r\n    //take the Product codes from db\r\n    //and put them into single array name iCodes after put them into codes table after set search and fiter them and put again\r\n  }\r\n\r\n  doSubmit() {\r\n    const { data } = this.state;\r\n    console.log(data);\r\n\r\n    const jsonOb = {\r\n      _id: data._id,\r\n      reqCode: data.Code,\r\n      reqType: data.Type,\r\n      reqCategory: data.Category,\r\n      reqQuantity: data.Quantity,\r\n      reqDate: data.RequestDate,\r\n      reqStatus: data.Status,\r\n    };\r\n\r\n    //add in database\r\n    axios\r\n      .post(\"http://localhost:5000/requests/update/\" + data._id, jsonOb)\r\n      .then((result) => console.log(result.data));\r\n\r\n    swal({\r\n      text: \"Request added successfully.\",\r\n      icon: \"success\",\r\n      timer: \"1500\",\r\n    });\r\n\r\n    this.props.onSetAndClose(jsonOb);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"Code\", \"Item Code\")}\r\n              {this.renderSelect(\"Type\", \"Item Type\", this.state.types)}\r\n              {this.renderSelect(\r\n                \"Category\",\r\n                \"Category\",\r\n                this.state.categoryObjects\r\n              )}\r\n              {this.renderInput(\"Quantity\", \"Item Quantity\")}\r\n              {this.renderInput(\"RequestDate\", \"Request date\", \"date\")}\r\n              {this.renderButton(\"update request\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditItemRequestForm;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\tables\\table.jsx",["1043"],"import React, { Component } from \"react\";\r\n\r\nconst Table = ({\r\n  filteredItems,\r\n  onItemDelete,\r\n  onSet,\r\n  onSetPopup,\r\n  onSetWastedPop,\r\n}) => {\r\n  return (\r\n    <table\r\n      className=\"table table-bordered table-sm\"\r\n      style={{ width: \"1200px\" }}\r\n    >\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" }}>\r\n          <th scope=\"col\">Item Code</th>\r\n          <th scope=\"col\">Item Type</th>\r\n          <th scope=\"col\">Category</th>\r\n          <th scope=\"col\">Quantity</th>\r\n          <th scope=\"col\">Receive date</th>\r\n          <th scope=\"col\">Handle</th>\r\n          <th scope=\"col\">Handle</th>\r\n          <th scope=\"col\">Handle</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {filteredItems.map((i) => (\r\n          <tr key={i._id}>\r\n            <td>{i.iCode}</td>\r\n            <td\r\n              className={\r\n                i.iType === \"Material\" ? \"table-success\" : \"table-primary\"\r\n              }\r\n              style={{\r\n                border:\r\n                  i.iType === \"Material\"\r\n                    ? \"1px solid black\"\r\n                    : \"1px solid black\",\r\n              }}\r\n            >\r\n              {i.iType}\r\n            </td>\r\n            <td>{i.iCategory}</td>\r\n            <td>1</td>\r\n            <td>{i.iAddedDate}</td>\r\n            <td>\r\n              <button\r\n                className=\"btn-sm\"\r\n                onClick={() => onSetPopup(i._id)}\r\n                style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n              >\r\n                Edit\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                onClick={() => onItemDelete(i)}\r\n                className=\"btn-sm\"\r\n                style={{ backgroundColor: \"#dc3545\", color: \"white\" }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </td>\r\n\r\n            <td>\r\n              <button\r\n                onClick={() => onSetWastedPop(i._id)}\r\n                className=\"btn-sm\"\r\n                style={{ backgroundColor: \"#dc3545\", color: \"white\" }}\r\n              >\r\n                Wasted\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\tables\\wasteditemtable.jsx",["1044"],"import React, { Component } from \"react\";\r\n\r\nconst WastedItemTable = ({\r\n  filteredItems,\r\n  onItemDelete,\r\n  onSet,\r\n  onSetPopup,\r\n}) => {\r\n  return (\r\n    <table\r\n      className=\"table table-bordered table-sm\"\r\n      style={{ width: \"1200px\" }}\r\n    >\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" }}>\r\n          <th scope=\"col\">Item Code</th>\r\n          <th scope=\"col\">Item Type</th>\r\n          <th scope=\"col\">Category</th>\r\n          <th scope=\"col\">Quantity</th>\r\n          <th scope=\"col\">Supplier</th>\r\n          <th scope=\"col\">Wasted date</th>\r\n          <th scope=\"col\">Reason</th>\r\n          <th scope=\"col\">Handle</th>\r\n          <th scope=\"col\">Handle</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {filteredItems.map((w) => (\r\n          <tr key={w._id}>\r\n            <td>{w.wCode}</td>\r\n            <td\r\n              className={\r\n                w.wType === \"Material\" ? \"table-success\" : \"table-primary\"\r\n              }\r\n              style={{\r\n                border:\r\n                  w.wType === \"Material\"\r\n                    ? \"1px solid black\"\r\n                    : \"1px solid black\",\r\n              }}\r\n            >\r\n              {w.wType}\r\n            </td>\r\n            <td>{w.wCategory}</td>\r\n            <td>{w.wQuantity}</td>\r\n            <td>{w.wSupplier}</td>\r\n            <td>{w.wDate}</td>\r\n            <td>{w.wReason}</td>\r\n            <td>\r\n              <button\r\n                className=\"btn-sm\"\r\n                onClick={() => onSetPopup(w._id)}\r\n                style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n              >\r\n                Edit\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                onClick={() => onItemDelete(w)}\r\n                className=\"btn-sm\"\r\n                style={{ backgroundColor: \"#dc3545 \", color: \"white\" }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default WastedItemTable;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\forms\\editWastedItemForm.jsx",["1045","1046","1047"],"import React, { Component } from \"react\";\r\nimport FormSuper from \"../reusables/formsuper\";\r\nimport Joi, { join } from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass EditWastedItemForm extends FormSuper {\r\n  state = {\r\n    data: {\r\n      _id: \"\",\r\n      Code: \"\",\r\n      Type: \"\",\r\n      Category: \"\",\r\n      Quantity: \"\",\r\n      Supplier: \"\",\r\n      WastedDate: \"\",\r\n      Reason: \"\",\r\n    },\r\n    categories: [\"category1\", \"category2\", \"category3\"],\r\n    types: [\r\n      { _id: \"123\", categoryName: \"Product\" },\r\n      { _id: \"143\", categoryName: \"Material\" },\r\n    ],\r\n    iCodes: [],\r\n    genres: [\"All\", \"Product\", \"Material\"],\r\n    searchQuery: \"\",\r\n    errors: {},\r\n    selectedGenre: \"All\",\r\n    materialCodeObjects: [],\r\n    categoryObjects: [],\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    Code: Joi.string().required(),\r\n    Type: Joi.string().required(),\r\n    Category: Joi.string().required(),\r\n    Quantity: Joi.number().required(),\r\n    Supplier: Joi.string().required(),\r\n    WastedDate: Joi.date().required(),\r\n    Reason: Joi.string().required(),\r\n  };\r\n\r\n  componentDidMount() {\r\n    //take the category set from db\r\n    //take the Material codes from db\r\n    const ob = {\r\n      _id: this.props.wastedOb._id,\r\n      Code: this.props.wastedOb.wCode,\r\n      Type: this.props.wastedOb.wType,\r\n      Category: this.props.wastedOb.wCategory,\r\n      Quantity: this.props.wastedOb.wQuantity,\r\n      Supplier: this.props.wastedOb.wSupplier,\r\n      WastedDate: this.props.wastedOb.wDate,\r\n      Reason: this.props.wastedOb.wReason,\r\n    };\r\n\r\n    console.log(ob.WastedDate);\r\n\r\n    this.setState({ data: ob });\r\n\r\n    axios.get(\"http://localhost:5000/category/\").then((result) => {\r\n      const categoryObjs = result.data;\r\n      console.log(categoryObjs);\r\n      //this.setState({categoryObjects: categoryObjs});\r\n      this.setState({\r\n        categoryObjects: categoryObjs,\r\n      });\r\n    });\r\n\r\n    //take the Product codes from db\r\n    //and put them into single array name iCodes after put them into codes table after set search and fiter them and put again\r\n  }\r\n\r\n  doSubmit() {\r\n    const { data } = this.state;\r\n\r\n    const jsonOb = {\r\n      _id: data._id,\r\n      wCode: data.Code,\r\n      wType: data.Type,\r\n      wCategory: data.Category,\r\n      wQuantity: data.Quantity,\r\n      wSupplier: data.Supplier,\r\n      wDate: data.WastedDate,\r\n      wReason: data.Reason,\r\n    };\r\n\r\n    //update in database\r\n    axios\r\n      .post(\"http://localhost:5000/wasted/update/\" + data._id, jsonOb)\r\n      .then((result) => console.log(\"updated\"));\r\n\r\n    swal({\r\n      text: \"Wasted Item updated successfully.\",\r\n      icon: \"success\",\r\n      timer: \"1500\",\r\n    });\r\n\r\n    this.props.onSetAndClose(jsonOb);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"Code\", \"Item Code\")}\r\n              {this.renderSelect(\"Type\", \"Item Type\", this.state.types)}\r\n              {this.renderSelect(\r\n                \"Category\",\r\n                \"Category\",\r\n                this.state.categoryObjects\r\n              )}\r\n              {this.renderInput(\"Quantity\", \"Item Quantity\")}\r\n              {this.renderInput(\"Supplier\", \"Supplier Name\")}\r\n              {this.renderInput(\"WastedDate\", \"Wasted date\", \"date\")}\r\n              {this.renderInput(\"Reason\", \"Reason For wasted\")}\r\n              {this.renderButton(\"Update Item\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditWastedItemForm;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\forms\\itemrequestform.jsx",["1048","1049","1050"],"import React, { Component } from \"react\";\r\nimport FormSuper from \"../reusables/formsuper\";\r\nimport Joi, { join } from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ItemRequestForm extends FormSuper {\r\n  state = {\r\n    data: {\r\n      Code: \"\",\r\n      Type: \"\",\r\n      Category: \"\",\r\n      Quantity: \"\",\r\n      RequestDate: \"\",\r\n      Status: \"pending\",\r\n    },\r\n\r\n    types: [\r\n      { _id: \"123\", categoryName: \"Product\" },\r\n      { _id: \"143\", categoryName: \"Material\" },\r\n    ],\r\n    iCodes: [],\r\n    genres: [\"All\", \"Product\", \"Material\"],\r\n    searchQuery: \"\",\r\n    errors: {},\r\n    selectedGenre: \"All\",\r\n    materialCodeObjects: [],\r\n    categoryObjects: [],\r\n  };\r\n\r\n  schema = {\r\n    Code: Joi.string().required(),\r\n    Type: Joi.string().required(),\r\n    Category: Joi.string().required(),\r\n    Quantity: Joi.number().required(),\r\n    RequestDate: Joi.date().required(),\r\n    Status: Joi.string(),\r\n  };\r\n\r\n  componentDidMount() {\r\n    //take the category set from db\r\n    //take the Material codes from db\r\n\r\n    axios.get(\"http://localhost:5000/codes/material/\").then((result) => {\r\n      const materialCodesObjs = result.data;\r\n      console.log(materialCodesObjs);\r\n      axios.get(\"http://localhost:5000/category/\").then((result) => {\r\n        const categoryObjs = result.data;\r\n        console.log(categoryObjs);\r\n        //this.setState({categoryObjects: categoryObjs});\r\n        this.setState({\r\n          materialCodeObjects: materialCodesObjs,\r\n          categoryObjects: categoryObjs,\r\n        });\r\n      });\r\n    });\r\n\r\n    //take the Product codes from db\r\n    //and put them into single array name iCodes after put them into codes table after set search and fiter them and put again\r\n  }\r\n\r\n  doSubmit() {\r\n    const { data } = this.state;\r\n    console.log(data);\r\n\r\n    // const jsonOb = {\r\n    //   reqCode: data.Code,\r\n    //   reqType: data.Type,\r\n    //   reqCategory: data.Category,\r\n    //   reqQuantity: data.Quantity,\r\n    //   reqDate: data.RequestDate,\r\n    // };\r\n\r\n    //add in database\r\n    axios.post(\"http://localhost:5000/requests/add/\", data).then((result) => {\r\n      axios.get(\"http://localhost:5000/requests/\").then((result) => {\r\n        const requests = result.data;\r\n\r\n        this.props.onSetRequest(requests);\r\n      });\r\n    });\r\n\r\n    swal({\r\n      text: \"Request added successfully.\",\r\n      icon: \"success\",\r\n      timer: \"1500\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"Code\", \"Item Code\")}\r\n              {this.renderSelect(\"Type\", \"Item Type\", this.state.types)}\r\n              {this.renderSelect(\r\n                \"Category\",\r\n                \"Category\",\r\n                this.state.categoryObjects\r\n              )}\r\n              {this.renderInput(\"Quantity\", \"Item Quantity\")}\r\n              {this.renderInput(\"RequestDate\", \"Request date\", \"date\")}\r\n              {this.renderButton(\"add request\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemRequestForm;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\forms\\newWastedItemForm.jsx",["1051","1052","1053"],"import React, { Component } from \"react\";\r\nimport FormSuper from \"../reusables/formsuper\";\r\nimport Joi, { join } from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport TextArea from \"../reusables/textarea\";\r\nimport moment from \"moment\";\r\n\r\nclass NewWastedItemForm extends FormSuper {\r\n  state = {\r\n    data: {\r\n      _id: \"\",\r\n      Code: \"\",\r\n      Type: \"\",\r\n      Category: \"\",\r\n      Quantity: \"\",\r\n      Supplier: \"\",\r\n      WastedDate: \"\",\r\n      Reason: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    Code: Joi.string(),\r\n    Type: Joi.string(),\r\n    Category: Joi.string(),\r\n    Quantity: Joi.number(),\r\n    Supplier: Joi.string(),\r\n    WastedDate: Joi.date(),\r\n    Reason: Joi.string().required(),\r\n  };\r\n\r\n  componentDidMount() {\r\n    const wastedDate = moment(new Date()).format(\"YYYY-MM-DD\");\r\n\r\n    const wOb = {\r\n      _id: this.props.wastedOb._id,\r\n      Code: this.props.wastedOb.iCode,\r\n      Type: this.props.wastedOb.iType,\r\n      Category: this.props.wastedOb.iCategory,\r\n      Quantity: this.props.wastedOb.iQuantity,\r\n      Supplier: this.props.wastedOb.iSupplier,\r\n      WastedDate: wastedDate,\r\n      Reason: \"\",\r\n    };\r\n\r\n    this.setState({ data: wOb });\r\n    console.log(wOb);\r\n  }\r\n\r\n  doSubmit() {\r\n    // console.log(\"submitted\", this.state.data);\r\n    const jsonOb = this.state.data;\r\n    console.log(jsonOb);\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/wasted/add\", jsonOb)\r\n      .then((result) => console.log(result.data));\r\n    // axios\r\n    //   .post(\"http://localhost:5000/items/add\", jsonOb)\r\n    //   .then((result) => console.log(result.data));\r\n\r\n    swal({\r\n      text: \"Wasted Item added successfully.\",\r\n      icon: \"success\",\r\n      timer: \"1500\",\r\n    });\r\n\r\n    this.props.onClose(jsonOb);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderTextArea(\"Reason\", \"Reason For Drop\")}\r\n\r\n          {this.renderButton(\"Add Item\")}\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewWastedItemForm;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\forms\\edititemform.jsx",["1054","1055","1056"],"import React, { Component } from \"react\";\r\nimport FormSuper from \"../reusables/formsuper\";\r\nimport Joi, { join } from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass EditItemForm extends FormSuper {\r\n  state = {\r\n    data: {\r\n      _id: \"\",\r\n      Code: \"\",\r\n      Type: \"\",\r\n      Category: \"\",\r\n      Quantity: \"\",\r\n      Supplier: \"\",\r\n      AddedDate: \"\",\r\n    },\r\n    categories: [\"category1\", \"category2\", \"category3\"],\r\n    types: [\r\n      { _id: \"123\", categoryName: \"Product\" },\r\n      { _id: \"143\", categoryName: \"Material\" },\r\n    ],\r\n    iCodes: [],\r\n    genres: [\"All\", \"Product\", \"Material\"],\r\n    searchQuery: \"\",\r\n    errors: {},\r\n    selectedGenre: \"All\",\r\n    materialCodeObjects: [],\r\n    categoryObjects: [],\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    Code: Joi.string().required(),\r\n    Type: Joi.string().required(),\r\n    Category: Joi.string().required(),\r\n    Quantity: Joi.number().required(),\r\n    Supplier: Joi.string(),\r\n    AddedDate: Joi.date().required(),\r\n  };\r\n\r\n  componentDidMount() {\r\n    //take the category set from db\r\n    //take the Material codes from db\r\n    const ob = {\r\n      _id: this.props.itemOb._id,\r\n      Code: this.props.itemOb.iCode,\r\n      Type: this.props.itemOb.iType,\r\n      Category: this.props.itemOb.iCategory,\r\n      Quantity: this.props.itemOb.iQuantity,\r\n      Supplier: this.props.itemOb.iSupplier,\r\n      AddedDate: this.props.itemOb.iAddedDate,\r\n    };\r\n\r\n    this.setState({ data: ob });\r\n\r\n    axios.get(\"http://localhost:5000/category/\").then((result) => {\r\n      const categoryObjs = result.data;\r\n      console.log(categoryObjs);\r\n      //this.setState({categoryObjects: categoryObjs});\r\n      this.setState({\r\n        categoryObjects: categoryObjs,\r\n      });\r\n    });\r\n\r\n    //take the Product codes from db\r\n    //and put them into single array name iCodes after put them into codes table after set search and fiter them and put again\r\n  }\r\n\r\n  doSubmit() {\r\n    const { data } = this.state;\r\n\r\n    const jsonOb = {\r\n      _id: data._id,\r\n      iCode: data.Code,\r\n      iType: data.Type,\r\n      iCategory: data.Category,\r\n      iQuantity: data.Quantity,\r\n      iSupplier: data.Supplier,\r\n      iAddedDate: data.AddedDate,\r\n    };\r\n\r\n    //update in database\r\n    axios\r\n      .post(\"http://localhost:5000/items/update/\" + data._id, jsonOb)\r\n      .then((result) => console.log(\"updated\"));\r\n\r\n    swal({\r\n      text: \"Item updated successfully.\",\r\n      icon: \"success\",\r\n      timer: \"1500\",\r\n    });\r\n\r\n    this.props.onSetAndClose(jsonOb);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"Code\", \"Item Code\")}\r\n              {this.renderSelect(\"Type\", \"Item Type\", this.state.types)}\r\n              {this.renderSelect(\r\n                \"Category\",\r\n                \"Category\",\r\n                this.state.categoryObjects\r\n              )}\r\n              {this.renderInput(\"Quantity\", \"Item Quantity\")}\r\n              {this.renderInput(\"AddedDate\", \"Received date\", \"date\")}\r\n              {this.renderButton(\"Update Item\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditItemForm;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\reusables\\pagination.jsx",["1057","1058"],"import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = (props) => {\r\n  const { itemsCount, pageSize, onPageChange, currentPage } = props;\r\n\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  //console.log(currentPage);\r\n  if (pagesCount === 1) return null;\r\n  //const pages = [1, 2, 3];\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li key={page} style={{ cursor: \"pointer\" }}>\r\n            <a\r\n              onClick={() => {\r\n                onPageChange(page);\r\n              }}\r\n              className=\"page-link\"\r\n              style={{\r\n                backgroundColor: page === currentPage ? \"#7121AD\" : \"white\",\r\n                color: \"black\",\r\n                borderRadius: \"3px\",\r\n              }}\r\n            >\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\forms\\newdeleteprofilefeedback.jsx",["1059","1060","1061","1062"],"import React, { Component } from \"react\";\r\nimport FormSuper from \"../reusables/formsuper\";\r\nimport Joi, { join } from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport TextArea from \"../reusables/textarea\";\r\nimport moment from \"moment\";\r\n\r\nclass NewDeleteProfileFeedback extends FormSuper {\r\n  state = {\r\n    data: {\r\n      Name: \"\",\r\n      Reason: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    Name: Joi.string(),\r\n    Reason: Joi.string().required(),\r\n  };\r\n\r\n  componentDidMount() {\r\n    const fOb = {\r\n      Name: this.props.name,\r\n      Reason: \"\",\r\n    };\r\n\r\n    this.setState({ data: fOb });\r\n    // console.log(fOb);\r\n  }\r\n\r\n  doSubmit() {\r\n    const jsonOb = this.state.data;\r\n    console.log(jsonOb);\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/feedbackForDelete/add\", jsonOb)\r\n      .then((result) => console.log(result.data));\r\n\r\n    swal({\r\n      text: \"Profile deleted successfully!.\",\r\n      icon: \"success\",\r\n      timer: \"1500\",\r\n    });\r\n\r\n    this.props.logoutAndClose();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderTextArea(\"Reason\", \"Reason For Drop\")}\r\n\r\n          {this.renderButton(\"Delete\")}\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewDeleteProfileFeedback;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\tables\\itemrequeststable.jsx",["1063"],"import React, { Component } from \"react\";\r\n//itemRequestTable\r\nconst ItemRequestTable = ({ filteredItems, onItemDelete, onSetPopup }) => {\r\n  return (\r\n    <table\r\n      className=\"table table-bordered table-sm\"\r\n      style={{ width: \"1200px\" }}\r\n    >\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" }}>\r\n          <th scope=\"col\">Item Code</th>\r\n          <th scope=\"col\">Item Type</th>\r\n          <th scope=\"col\">Category</th>\r\n          <th scope=\"col\">Quantity</th>\r\n          <th scope=\"col\">Request date</th>\r\n          <th scope=\"col\">Status</th>\r\n          <th scope=\"col\">Handle</th>\r\n          <th scope=\"col\">Handle</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {filteredItems.map((request) => (\r\n          <tr key={request._id}>\r\n            <td>{request.reqCode}</td>\r\n            <td\r\n              className={\r\n                request.reqType === \"Material\"\r\n                  ? \"table-success\"\r\n                  : \"table-primary\"\r\n              }\r\n              style={{\r\n                border:\r\n                  request.reqType === \"Material\"\r\n                    ? \"1px solid black\"\r\n                    : \"1px solid black\",\r\n              }}\r\n            >\r\n              {request.reqType}\r\n            </td>\r\n            <td>{request.reqCategory}</td>\r\n            <td>{request.reqQuantity}</td>\r\n            <td>{request.reqDate}</td>\r\n            <td>{request.reqStatus}</td>\r\n\r\n            <td>\r\n              <button\r\n                className=\"btn-sm\"\r\n                style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                onClick={() => onSetPopup(request._id)}\r\n              >\r\n                Edit\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <button\r\n                onClick={() => onItemDelete(request)}\r\n                className=\"btn-sm\"\r\n                style={{ backgroundColor: \"#dc3545 \", color: \"white\" }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default ItemRequestTable;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\forms\\formprofileedit.jsx",["1064","1065","1066"],"import React, { Component } from \"react\";\r\nimport FormSuper from \"../reusables/formsuper\";\r\nimport Joi, { join } from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport Radio from \"../reusables/radio\";\r\n\r\nclass FormProfileEdit extends FormSuper {\r\n  state = {\r\n    data: {\r\n      _id: \"\",\r\n      FullName: \"\",\r\n      BirthDate: \"\",\r\n      Email: \"\",\r\n      Contact: \"\",\r\n      Age: \"\",\r\n      Gender: \"\",\r\n      Address: \"\",\r\n      Designation: \"\",\r\n      BankName: \"\",\r\n      AccountNumber: \"\",\r\n      Branch: \"\",\r\n      BranchCode: \"\",\r\n      NumberOfFamilyMembers: \"\",\r\n    },\r\n\r\n    errors: {},\r\n    genders: [\r\n      { _id: \"1\", categoryName: \"Male\" },\r\n      { _id: \"2\", categoryName: \"Female\" },\r\n    ],\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    FullName: Joi.string().required(),\r\n    BirthDate: Joi.date().required(),\r\n    Email: Joi.string().required().email(),\r\n    Contact: Joi.string().required(),\r\n    Age: Joi.number().required(),\r\n    Gender: Joi.string().required(),\r\n    Address: Joi.string().required(),\r\n    Designation: Joi.string().required(),\r\n    BankName: Joi.string().required(),\r\n    AccountNumber: Joi.string().required(),\r\n    Branch: Joi.string().required(),\r\n    BranchCode: Joi.string().required(),\r\n    NumberOfFamilyMembers: Joi.number().required(),\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.userOb.fullName);\r\n    const user = this.props.userOb;\r\n\r\n    this.setState({ data: user });\r\n  }\r\n\r\n  doSubmit() {\r\n    // console.log(\"submitted\", this.state.data);\r\n    const jsonOb = this.state.data;\r\n\r\n    console.log(\"submitted\", jsonOb);\r\n    axios\r\n      .post(\"http://localhost:5000/users/update/\" + jsonOb._id, jsonOb)\r\n      .then((result) => console.log(result.data));\r\n\r\n    swal({\r\n      text: \"Profile updated successfully.\",\r\n      icon: \"success\",\r\n      timer: \"1500\",\r\n    });\r\n\r\n    this.props.onSetAndClose(jsonOb);\r\n    //axios\r\n    //  .post(\"http://localhost:5000/items/add/record\", jsonOb)\r\n    // .then((result) => console.log(result.data));\r\n\r\n    //this.props.history.push(\"/items\");\r\n    // window.location = \"/myprofile\";\r\n  }\r\n\r\n  handleGenderChange = ({ currentTarget }) => {\r\n    const data = { ...this.state.data };\r\n    data[currentTarget.name] = currentTarget.value;\r\n\r\n    this.setState({ data: data });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"FullName\", \"Full Name\")}\r\n          {this.renderInput(\"BirthDate\", \"Birth date\", \"date\")}\r\n          {this.renderInput(\"Email\", \"Email\")}\r\n          {this.renderInput(\"Contact\", \"Contact Number\")}\r\n          {this.renderInput(\"Age\", \"Age\")}\r\n          {this.renderSelect(\"Gender\", \"Gender\", this.state.genders)}\r\n          {this.renderInput(\"Address\", \"Address\")}\r\n          {this.renderInput(\"Designation\", \"Designation\")}\r\n          {this.renderInput(\"BankName\", \"Bank name\")}\r\n          {this.renderInput(\"AccountNumber\", \"Account Number\")}\r\n          {this.renderInput(\"Branch\", \"Branch\")}\r\n          {this.renderInput(\"BranchCode\", \"Branch Code\")}\r\n          {this.renderInput(\"NumberOfFamilyMembers\", \"Number of family\")}\r\n\r\n          {this.renderButton(\"Update Profile\")}\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormProfileEdit;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\tables\\profileTable.jsx",["1067"],"import React, { useState } from \"react\";\r\nimport userPic from \"../../../pages/assets/pem56.png\";\r\n\r\nconst ProfileTable = ({ userOb, onSetPopup, onSetReasonDeletePopup }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <table\r\n        className=\"table table-bordered table-sm my-3\"\r\n        style={{ width: \"1000px\" }}\r\n      >\r\n        <thead></thead>\r\n\r\n        <tbody>\r\n          <tr>\r\n            <td colSpan=\"2\" style={{ textAlign: \"center\", fontSize: 20 }}>\r\n              <img src={userPic} alt=\"\" width=\"150\" height=\"150\" />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Full name</td>\r\n            <td>{userOb.FullName}</td>\r\n          </tr>\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Date of birth</td>\r\n            <td>{userOb.BirthDate}</td>\r\n          </tr>\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Email address</td>\r\n            <td>{userOb.Email}</td>\r\n          </tr>\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Contact number</td>\r\n            <td>{userOb.Contact}</td>\r\n          </tr>\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Age</td>\r\n            <td>{userOb.Age}</td>\r\n          </tr>\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Gender</td>\r\n            <td>{userOb.Gender}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Address</td>\r\n            <td>{userOb.Address}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Designation</td>\r\n            <td>{userOb.Designation}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Bank Name</td>\r\n            <td>{userOb.BankName}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Account Number</td>\r\n            <td>{userOb.AccountNumber}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Branch</td>\r\n            <td>{userOb.Branch}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Branch code</td>\r\n            <td>{userOb.BranchCode}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td style={{ fontWeight: \"bold\" }}>Number of Family members</td>\r\n            <td>{userOb.NumberOfFamilyMembers}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-4\"></div>\r\n        <div className=\"col\">\r\n          <button\r\n            onClick={() => onSetPopup()}\r\n            className=\" btn m-1\"\r\n            style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n          >\r\n            Edit Profile\r\n          </button>\r\n\r\n          <button\r\n            className=\"btn\"\r\n            style={{ backgroundColor: \"#dc3545 \", color: \"white\" }}\r\n            onClick={() => onSetReasonDeletePopup(userOb.FullName, userOb._id)}\r\n          >\r\n            Delete Profile\r\n          </button>\r\n        </div>\r\n        <div className=\"col-2\"></div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProfileTable;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\forms\\edititemrecordform.jsx",["1068","1069"],"import React, { Component } from \"react\";\r\nimport FormSuper from \"../reusables/formsuper\";\r\nimport Joi, { join } from \"joi-browser\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass EditItemRecordForm extends FormSuper {\r\n  state = {\r\n    data: {\r\n      _id: \"\",\r\n      Code: \"\",\r\n      Type: \"\",\r\n      Category: \"\",\r\n      Quantity: \"\",\r\n      Supplier: \"\",\r\n      AddedDate: \"\",\r\n    },\r\n    categories: [\"category1\", \"category2\", \"category3\"],\r\n    types: [\r\n      { _id: \"123\", categoryName: \"Product\" },\r\n      { _id: \"143\", categoryName: \"Material\" },\r\n    ],\r\n    iCodes: [],\r\n    genres: [\"All\", \"Product\", \"Material\"],\r\n    searchQuery: \"\",\r\n    errors: {},\r\n    selectedGenre: \"All\",\r\n    materialCodeObjects: [],\r\n    categoryObjects: [],\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    Code: Joi.string().required(),\r\n    Type: Joi.string().required(),\r\n    Category: Joi.string().required(),\r\n    Quantity: Joi.number().required(),\r\n    Supplier: Joi.string().required(),\r\n    AddedDate: Joi.date().required(),\r\n  };\r\n\r\n  componentDidMount() {\r\n    const ob = {\r\n      _id: this.props.itemRecordOb._id,\r\n      Code: this.props.itemRecordOb.iCode,\r\n      Type: this.props.itemRecordOb.iType,\r\n      Category: this.props.itemRecordOb.iCategory,\r\n      Quantity: this.props.itemRecordOb.iQuantity,\r\n      Supplier: this.props.itemRecordOb.iSupplier,\r\n      AddedDate: this.props.itemRecordOb.iAddedDate,\r\n    };\r\n\r\n    //take the category set from db\r\n    //take the Material codes from db\r\n    axios.get(\"http://localhost:5000/codes/material/\").then((result) => {\r\n      const materialCodesObjs = result.data;\r\n      console.log(materialCodesObjs);\r\n      axios.get(\"http://localhost:5000/category/\").then((result) => {\r\n        const categoryObjs = result.data;\r\n        console.log(categoryObjs);\r\n        //this.setState({categoryObjects: categoryObjs});\r\n        this.setState({\r\n          data: ob,\r\n          materialCodeObjects: materialCodesObjs,\r\n          categoryObjects: categoryObjs,\r\n        });\r\n      });\r\n    });\r\n\r\n    //take the Product codes from db\r\n    //and put them into single array name iCodes after put them into codes table after set search and fiter them and put again\r\n  }\r\n\r\n  doSubmit() {\r\n    const { data } = this.state;\r\n\r\n    const jsonOb = {\r\n      _id: data._id,\r\n      iCode: data.Code,\r\n      iType: data.Type,\r\n      iCategory: data.Category,\r\n      iQuantity: data.Quantity,\r\n      iSupplier: data.Supplier,\r\n      iAddedDate: data.AddedDate,\r\n    };\r\n\r\n    //update in database\r\n    axios\r\n      .post(\r\n        \"http://localhost:5000/items/update/unique/record/\" + data._id,\r\n        jsonOb\r\n      )\r\n      .then((result) => console.log(\"updated\"));\r\n\r\n    swal({\r\n      text: \"Item updated successfully.\",\r\n      icon: \"success\",\r\n      timer: \"1500\",\r\n    });\r\n\r\n    this.props.onSetAndClose(jsonOb);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"Code\", \"Item Code\")}\r\n              {this.renderSelect(\"Type\", \"Item Type\", this.state.types)}\r\n              {this.renderSelect(\r\n                \"Category\",\r\n                \"Category\",\r\n                this.state.categoryObjects\r\n              )}\r\n              {this.renderInput(\"Quantity\", \"Item Quantity\")}\r\n              {this.renderInput(\"Supplier\", \"Supplier Name\")}\r\n              {this.renderInput(\"AddedDate\", \"Received date\", \"date\")}\r\n              {this.renderButton(\"Update Item\")}\r\n              <Link\r\n                to=\"/it/new/myItem\"\r\n                className=\"btn  my-4\"\r\n                style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n              >\r\n                Add as Wasted\r\n              </Link>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditItemRecordForm;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\reusables\\notice.jsx",["1070"],"import React, { Component } from \"react\";\r\n\r\nconst Notice = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: 150,\r\n        fontSize: 40,\r\n        backgroundColor: \"white\",\r\n        color: \"black\",\r\n        textAlign: \"center\",\r\n        border: \"3px solid black\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          height: 40,\r\n          fontSize: 20,\r\n          color: \"black\",\r\n          textAlign: \"center\",\r\n          borderBottom: \"2px solid black\",\r\n        }}\r\n      >\r\n        Notices\r\n      </div>\r\n      Search records using date.\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notice;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\storeManager\\tables\\tableverticle.jsx",["1071"],"import React, { Component } from \"react\";\r\n\r\nconst TableVertilcle = ({\r\n  records,\r\n  handleDelete,\r\n  onSet,\r\n  onSetPopup,\r\n  onReport,\r\n}) => {\r\n  return (\r\n    <div>\r\n      {records.map((r) => (\r\n        <div className=\"row\">\r\n          <div className=\"col\"></div>\r\n          <div className=\"col\">\r\n            <h2>Item record</h2>\r\n            <table\r\n              key={r._id}\r\n              className=\"table table-bordered table-sm\"\r\n              style={{ width: \"1000px\" }}\r\n            >\r\n              <tbody key={r._id}>\r\n                <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" }}>\r\n                  <th scope=\"col\">Record</th>\r\n                  <th scope=\"col\">details</th>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td style={{ fontWeight: \"bold\" }}>Item Code</td>\r\n                  <td>{r.iCode}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td style={{ fontWeight: \"bold\" }}>Type</td>\r\n                  <td>{r.iType}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td style={{ fontWeight: \"bold\" }}>Category</td>\r\n                  <td>{r.iCategory}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td style={{ fontWeight: \"bold\" }}>quantity</td>\r\n                  <td>{r.iQuantity}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td style={{ fontWeight: \"bold\" }}>Supplier Name</td>\r\n                  <td>{r.iSupplier}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td style={{ fontWeight: \"bold\" }}>Received date</td>\r\n                  <td>{r.iAddedDate}</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <th scope=\"col\" style={{ fontWeight: \"bold\" }}>\r\n                    Actions\r\n                  </th>\r\n                  <td>\r\n                    <button\r\n                      style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\r\n                      onClick={() => onSetPopup(r._id)}\r\n                      className=\"btn-sm mx-2\"\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleDelete(r)}\r\n                      style={{ backgroundColor: \"#dc3545 \", color: \"white\" }}\r\n                      className=\"btn-sm\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div\r\n            className=\"col\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <button onClick={() => onReport(r)} className=\"btn btn-success\">\r\n              Generate Report\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableVertilcle;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Modals\\AddMaterialCodeModal.jsx",["1072","1073","1074"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport swal from 'sweetalert';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nexport class AddMaterialCodeModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            snackbaropen: false,  \r\n            snackbarmsg: '',\r\n            materialNameError:'',\r\n            materialCodeError:''\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const isValid = this.validate(event);\r\n        if(isValid){\r\n            fetch('http://localhost:5000/api/meterial-code/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'username': 'chathura'\r\n                },\r\n                body: JSON.stringify({\r\n                    materialName: event.target.materialName.value,\r\n                    materialCode: event.target.materialCode.value,\r\n                    status: event.target.status.value\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    swal({\r\n                        title: \"Material Code Added Succesfully\",\r\n                        icon: \"success\",\r\n                        button: \"Done\",\r\n                    });\r\n                    this.setState({\r\n                        materialNameError: '',\r\n                        materialCodeError:''\r\n        \r\n                    }) \r\n                    setTimeout(function() {\r\n                        window.location.reload(); \r\n                    }.bind(this), 1500); \r\n                }, (error) => {\r\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n                }\r\n\r\n                )\r\n        }\r\n    }\r\n\r\n    validate(event){\r\n        let materialNameError = '';\r\n        let materialCodeError = '';\r\n        \r\n        if(!event.target.materialName.value){\r\n            materialNameError = \"Material Name  Cannot Be Blank\"\r\n        }\r\n        if(!event.target.materialCode.value){\r\n            materialCodeError = \"Material Code Cannot Be Blank\"\r\n        }\r\n        \r\n\r\n        if(materialNameError || materialCodeError){\r\n         \r\n            this.setState({\r\n                materialNameError: materialNameError,\r\n                materialCodeError:materialCodeError\r\n\r\n            })\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                //centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add Material Code\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Material Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"materialName\"  placeholder=\"Material Name\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.materialNameError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Material Code</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"materialCode\"  placeholder=\"Material Name\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.materialCodeError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"status\">\r\n                                            <option selected>ACTIVE</option>\r\n                                            <option>INACTIVE</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <br />\r\n                                    <Form.Group>\r\n                                        <Button  style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Add Material Code\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Tables\\MaterialCodeTable.jsx",["1075","1076","1077"],"import React, { Component } from \"react\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport { EditMaterialCodeModal } from '../Modals/EditMaterialCodeModal';\r\n\r\nexport class MaterialCodeTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { cate: [], editModalShow: false }\r\n  }\r\n\r\n  deleteMatCode (id){\r\n    swal({\r\n      title: \"Are you sure?\", \r\n      text: \"Once deleted, you will not be able to recover this Recode!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    })\r\n    .then((willDelete) => {\r\n      if (willDelete) {\r\n        fetch('http://localhost:5000/api/meterial-code', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: id\r\n               \r\n            })\r\n        }).then(res => res.json())\r\n        .then((result) => {\r\n          swal({\r\n            title: \"Material Code Deleted Succesfully\",\r\n            icon: \"success\",\r\n            button: \"Done\",\r\n          });\r\n          setTimeout(function() {\r\n            window.location.reload(); \r\n          }.bind(this), 1500);\r\n      });\r\n      \r\n      } else {\r\n        swal(\"Your imaginary file is safe!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {id, matirialName, materialCode, status } = this.state;\r\n    let EditModelClose = () => this.setState({ editModalShow: false })\r\n  return (\r\n    <div>\r\n       <ButtonToolbar>\r\n      <EditMaterialCodeModal\r\n          show={this.state.editModalShow}\r\n          onHide={EditModelClose}\r\n          id={id}\r\n          matirialName={matirialName}\r\n          materialCode={materialCode}\r\n          status={status}\r\n      />\r\n      </ButtonToolbar>\r\n    <table className=\"table table-bordered table-sm m-2\" style={{width:\"1000px\"}}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" } }>\r\n          <th scope=\"col\">Id</th>\r\n          <th scope=\"col\">Material Name</th>\r\n          <th scope=\"col\">Material Code</th>\r\n          <th scope=\"col\">Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.props.filteredItems.map((i) => (\r\n          <tr\r\n            key={i._id}\r\n          >\r\n            <td>1</td>\r\n            <td>{i.materialName}</td>\r\n            <td>{i.materialCode}</td>\r\n            <td><button \r\n            className=\"btn-sm\"\r\n            style={{ backgroundColor: \"#7121AD\", color: \"white\", marginRight:\"4px\" }}\r\n            onClick={() => this.setState({ editModalShow: true, id: i._id, matirialName: i.materialName, materialCode: i.materialCode, status: i.status })}\r\n            >Edit</button> \r\n            <button \r\n            className=\"btn-sm\"\r\n            style={{ backgroundColor: \"#BA0D32 \", color: \"white\" }} \r\n            onClick={() => this.deleteMatCode(i._id)}>Delete</button></td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n    </div>\r\n  );\r\n  }\r\n};\r\n\r\n\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Modals\\AddNewUserModal.jsx",["1078","1079","1080","1081"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport swal from 'sweetalert';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport default class AddNewUserModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            snackbaropen: false,  \r\n            snackbarmsg: '',\r\n            userRoles:[],\r\n            CategoryNameError:''\r\n             \r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    componentDidMount() { \r\n        axios\r\n          .get(\"http://localhost:5000/api/user-roles\")\r\n          .then((result) => {\r\n            const userRoles = result.data;\r\n    \r\n            this.setState({ userRoles: userRoles });\r\n          })\r\n          .catch((err) => console.log(err.message));\r\n      }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const isValid = this.validate();\r\n        // if(isValid){\r\n            fetch('http://localhost:5000/api/user', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'username': 'chathura'\r\n                },\r\n                body: JSON.stringify({\r\n                    fullName: event.target.fullName.value,\r\n                    email: event.target.email.value,\r\n                    userRole: event.target.userRole.value,\r\n                    password: event.target.password.value,\r\n                    status: event.target.status.value\r\n\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    swal({\r\n                        title: \"User Added Succesfully\",\r\n                        icon: \"success\",\r\n                        button: \"Done\",\r\n                    }); \r\n                    this.setState({CategoryNameError:''})\r\n                    setTimeout(function() {\r\n                        window.location.reload(); \r\n                      }.bind(this), 1000);\r\n                }, (error) => {\r\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n                }\r\n\r\n                )\r\n        // }\r\n    }\r\n\r\n    validate(){\r\n        let CategoryNameError = \"\";\r\n\r\n        if(!this.state.CategoryNameError){\r\n            CategoryNameError = \"Category Name Cannot Be Blank\"\r\n        }\r\n\r\n        if(CategoryNameError){\r\n            this.setState({CategoryNameError:CategoryNameError})\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                //centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add User\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"fullName\"  placeholder=\"Name\" />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Email</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"email\"  placeholder=\"Email\" />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>User Role</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"userRole\">\r\n                                           {this.state.userRoles.map((i) => (\r\n                                            <option key={i._id}\r\n                                                    >{i.userRole}</option>\r\n                                        ))}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"status\">\r\n                                            <option selected>ACTIVE</option>\r\n                                            <option>INACTIVE</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Password</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"password\"  placeholder=\"Password\" />\r\n                                    </Form.Group>\r\n                                    <br></br>\r\n                                    <Form.Group>\r\n                                        <Button  style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Add User\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Tables\\RejectUsersTable.jsx",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Tables\\ProductCodesTable.jsx",["1082","1083","1084"],"import React, { Component } from \"react\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport { EditProductCodeModal } from '../Modals/EditProductCodeModal';\r\n\r\n\r\nexport class ProductCodesTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { cate: [], editModalShow: false }\r\n  }\r\n\r\n  deleteProCode(id){\r\n    swal({\r\n      title: \"Are you sure?\", \r\n      text: \"Once deleted, you will not be able to recover this Recode!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    })\r\n    .then((willDelete) => {\r\n      if (willDelete) {\r\n        fetch('http://localhost:5000/api/product-code', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: id\r\n               \r\n            })\r\n        }).then(res => res.json())\r\n        .then((result) => {\r\n          swal({\r\n            title: \"Product Code Deleted Succesfully\",\r\n            icon: \"success\",\r\n            button: \"Done\",\r\n          });\r\n          setTimeout(function() {\r\n            window.location.reload(); \r\n          }.bind(this), 1500); \r\n      });\r\n      } else {\r\n        swal(\"Your imaginary file is safe!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render(){\r\n    const {id, productCode, productCategory, status } = this.state;\r\n    let EditModelClose = () => this.setState({ editModalShow: false })\r\n  return (\r\n    <div>\r\n      <ButtonToolbar>\r\n      <EditProductCodeModal\r\n          show={this.state.editModalShow} \r\n          onHide={EditModelClose}\r\n          id={id}\r\n          productCode={productCode}\r\n          productCategory={productCategory}\r\n          status={status}\r\n      />\r\n      </ButtonToolbar>\r\n    <table className=\"table table-bordered table-sm m-2\" style={{width:\"1000px\"}}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" } }>\r\n          <th scope=\"col\">Id</th>\r\n          <th scope=\"col\">Product Code</th>\r\n          <th scope=\"col\">Product Category</th>\r\n          <th scope=\"col\">Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.props.filteredItems.map((i) => (\r\n          <tr\r\n            key={i._id}\r\n            \r\n          > \r\n            <td></td>\r\n            <td>{i.productCode}</td>\r\n            <td>{i.productCategory}</td>\r\n            <td><button \r\n            className=\"btn-sm\"\r\n            style={{ backgroundColor: \"#7121AD\", color: \"white\", marginRight:\"4px\" }}\r\n            onClick={() => this.setState({ editModalShow: true, id: i._id, productCode: i.productCode, productCategory: i.productCategory, status: i.status })}\r\n            >Edit</button> \r\n            <button \r\n            className=\"btn-sm\"\r\n            style={{ backgroundColor: \"#BA0D32 \", color: \"white\" }} \r\n            onClick={() => this.deleteProCode(i._id)}>Delete</button></td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n    </div>\r\n  );\r\n};\r\n};\r\n\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Tables\\UserListTable.jsx",[],"C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Modals\\AddProductCodeModal.jsx",["1085","1086","1087"],"import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport swal from 'sweetalert';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport class AddProductCodeModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  \r\n            snackbaropen: false, \r\n            snackbarmsg: '',\r\n            categories: [],\r\n            productCodeError:'',\r\n            productCategoryError:''\r\n         };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios\r\n          .get(\"http://localhost:5000/api/categories\")\r\n          .then((result) => {\r\n            const categories = result.data;\r\n    \r\n            this.setState({ categories: categories });\r\n          })\r\n          .catch((err) => console.log(err.message));\r\n      }\r\n\r\n    handleSubmit(event) {\r\n\r\n        event.preventDefault();\r\n        const isValid = this.validate(event);\r\n        if(isValid){\r\n            fetch('http://localhost:5000/api/product-code/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'username': 'chathura'\r\n                },\r\n                body: JSON.stringify({\r\n                    productCode: event.target.productCode.value,\r\n                    productCategory: event.target.productCategory.value,\r\n                    status: event.target.status.value\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    swal({\r\n                        title: \"Product Code Added Succesfully\",\r\n                        icon: \"success\",\r\n                        button: \"Done\",\r\n                    });\r\n                    this.setState({\r\n                        productCodeError:'',\r\n                        productCategoryError:''\r\n                    })\r\n                    setTimeout(function() {\r\n                        window.location.reload(); \r\n                      }.bind(this), 1500);\r\n                }, (error) => {\r\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n                }\r\n\r\n                )\r\n        }\r\n    }\r\n\r\n    validate(event){\r\n        let productCodeError = \"\";\r\n        let productCategoryError = \"\";\r\n      \r\n       \r\n        if(!event.target.productCode.value){\r\n            productCodeError = \"Product Code Cannot Be Blank\"\r\n        }\r\n        if(!event.target.productCategory.value){\r\n            productCategoryError = \"Please Select Product Category\"\r\n        }\r\n        \r\n       \r\n\r\n        if(productCodeError){\r\n            this.setState({\r\n                productCodeError:productCodeError,\r\n                productCategoryError:productCategoryError\r\n            })\r\n            return false;\r\n        }else{\r\n            return true;\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                //centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add Product Code\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Product Code</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"productCode\"  placeholder=\"Product Code\" />\r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.productCodeError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Product Category</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"productCategory\">\r\n                                        {this.state.categories.map((i) => (\r\n                                            <option key={i._id}\r\n                                                    >{i.categoryName}</option>\r\n                                        ))}\r\n                                        </Form.Control>  \r\n                                        <div style={{background:\"#f8d7da\"}}>{this.state.productCategoryError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control as=\"select\"  name=\"status\">\r\n                                            <option selected>ACTIVE</option>\r\n                                            <option>INACTIVE</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <br />\r\n                                    <Form.Group>\r\n                                        <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Add Product Code\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Tables\\CategoriesTable.jsx",["1088","1089","1090","1091"],"import React, { Component } from \"react\";\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport { EditCategoryModal } from '../Modals/EditCategoryModal';\r\n\r\nexport class CategoriesTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { cate: [], editModalShow: false }\r\n  }\r\n\r\n  deleteCat(id){\r\n    swal({\r\n      title: \"Are you sure?\", \r\n      text: \"Once deleted, you will not be able to recover this Recode!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    })\r\n    .then((willDelete) => {\r\n      if (willDelete) {\r\n        fetch('http://localhost:5000/api/categories', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: id\r\n               \r\n            })\r\n        }).then(res => res.json())\r\n        .then((result) => {\r\n          swal({\r\n            title: \"Category Deleted Succesfully\",\r\n            icon: \"success\",\r\n            button: \"Done\",\r\n          }); \r\n          setTimeout(function() {\r\n            window.location.reload(); \r\n          }.bind(this), 1500);\r\n      });\r\n      } else {\r\n        swal(\"Your imaginary file is safe!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {id, name, status, version } = this.state;\r\n    let EditModelClose = () => this.setState({ editModalShow: false })\r\n  return (\r\n    <div>\r\n       <ButtonToolbar>\r\n\r\n        <EditCategoryModal\r\n            show={this.state.editModalShow}\r\n            onHide={EditModelClose}\r\n            id={id}\r\n            name={name}\r\n            status={status}\r\n        />\r\n        </ButtonToolbar>\r\n    <table className=\"table table-bordered table-sm m-2\" style={{width:\"1000px\"}}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" } }>\r\n          <th scope=\"col\">Id</th>\r\n          <th scope=\"col\">Category</th>\r\n          <th scope=\"col\">Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.props.filteredItems.map((i) => (\r\n          <tr\r\n            key={i._id}\r\n            \r\n          >\r\n            <td>{i.userRoleNo}</td>\r\n            <td>{i.categoryName}</td>\r\n            <td><button \r\n              className=\"btn-sm\"\r\n              style={{ backgroundColor: \"#7121AD\", color: \"white\", marginRight:\"4px\" }}\r\n            onClick={() => this.setState({ editModalShow: true, id: i._id, name: i.categoryName, status: i.status })}\r\n            >Edit</button> \r\n            <button \r\n            className=\"btn-sm\"\r\n            style={{ backgroundColor: \"#BA0D32 \", color: \"white\" }} \r\n            onClick={() => this.deleteCat(i._id)}>Delete</button></td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n     \r\n    </table>\r\n    </div>\r\n  );\r\n};\r\n}\r\n\r\n\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Modals\\AddCategoryModal.jsx",["1092","1093","1094"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport swal from 'sweetalert';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport class AddCategoryModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            snackbaropen: false,  \r\n            snackbarmsg: '',\r\n            CategoryNameError:''\r\n             \r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const isValid = this.validate();\r\n        if(isValid){\r\n            fetch('http://localhost:5000/api/categories', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'username': 'chathura'\r\n                },\r\n                body: JSON.stringify({\r\n                    categoryName: event.target.categoryName.value,\r\n                    status: event.target.status.value\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    swal({\r\n                        title: \"Category Added Succesfully\",\r\n                        icon: \"success\",\r\n                        button: \"Done\",\r\n                    }); \r\n                    this.setState({CategoryNameError:''})\r\n                    setTimeout(function() {\r\n                        window.location.reload(); \r\n                      }.bind(this), 1000);\r\n                }, (error) => {\r\n                    this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n                }\r\n\r\n                )\r\n        }\r\n    }\r\n\r\n    validate(){\r\n        let CategoryNameError = \"\";\r\n\r\n        if(!this.state.CategoryNameError){\r\n            CategoryNameError = \"Category Name Cannot Be Blank\"\r\n        }\r\n\r\n        if(CategoryNameError){\r\n            this.setState({CategoryNameError:CategoryNameError})\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"danger\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                //centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add Category\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"categoryName\"  placeholder=\"Category Name\" />\r\n                                          <div style={{background:\"#f8d7da\"}}>{this.state.CategoryNameError}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"status\">\r\n                                            <option selected>ACTIVE</option>\r\n                                            <option>INACTIVE</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <br></br>\r\n                                    <Form.Group>\r\n                                        <Button  style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Add Category\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Tables\\UserRolesTable.jsx",["1095"],"import React, { Component } from \"react\";\r\nconst UserRolesTable = ({ filteredItems}) => {\r\n  return (\r\n    <table className=\"table table-bordered table-sm m-2\" style={{width:\"1000px\"}}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" } }>\r\n          <th scope=\"col\">Id</th>\r\n          <th scope=\"col\">User Role</th>\r\n          <th scope=\"col\">Status</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {filteredItems.map((i) => (\r\n          <tr \r\n            key={i._id}\r\n           \r\n          >\r\n            <td>{i.userRoleNo}</td>\r\n            <td>{i.userRole}</td>\r\n            <td>{i.status}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default UserRolesTable;\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\Modals\\EditProductStockDetailsMoadal.jsx",["1096","1097","1098"],"import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport swal from \"sweetalert\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport class EditProductStockDetailsMoadal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { snackbaropen: false, snackbarmsg: \"\", categories: [] };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  snackbarClose = (event) => {\r\n    this.setState({ snackbaropen: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/categories\")\r\n      .then((result) => {\r\n        const categories = result.data;\r\n\r\n        this.setState({ categories: categories });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    fetch(\"http://localhost:5000/update/order\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        username: \"thiranya\",\r\n      },\r\n      body: JSON.stringify({\r\n        id: event.target.id.value,\r\n        status: event.target.status.value,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          swal({\r\n            title: \"Order Status Changed Successfully\",\r\n            icon: \"success\",\r\n            button: \"Done\",\r\n          });\r\n          setTimeout(\r\n            function () {\r\n              window.location.reload();\r\n            }.bind(this),\r\n            1500\r\n          );\r\n        },\r\n        (error) => {\r\n          this.setState({ snackbaropen: true, snackbarmsg: \"Failed\" });\r\n        }\r\n      );\r\n  }\r\n\r\n  //   handleSubmit = (event) => {\r\n\r\n  //       return <Redirect to='/login' />\r\n\r\n  //   }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n          open={this.state.snackbaropen}\r\n          autoHideDuration={6000}\r\n          onClose={this.snackbarClose}\r\n          message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"danger\"\r\n              onClick={this.snackbarClose}\r\n            ></IconButton>,\r\n          ]}\r\n        />\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          //centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Update Details\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col sm={6}>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                  <Form.Group>\r\n                    <Form.Group controlId=\"orderId\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        name=\"id\"\r\n                        required\r\n                        placeholder=\"id\"\r\n                        defaultValue={this.props.id}\r\n                      />\r\n                    </Form.Group>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group>\r\n                    <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                      Status\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      style={{ border: \"1px solid #050139\" }}\r\n                      as=\"select\"\r\n                      name=\"status\"\r\n                      defaultValue={this.props.status}\r\n                    >\r\n                      <div style={{ background: \"#f8d7da\" }}>\r\n                        {this.state.validationError}\r\n                      </div>\r\n                      <option selected>Pending</option>\r\n                      <option>Accepted</option>\r\n                      <option>Rejected</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                      Accept Order\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"danger\" onClick={this.props.onHide}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\Modals\\EditPreviousProductionRoundDetailsModal.jsx",["1099","1100","1101"],"import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport swal from \"sweetalert\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport class EditPreviousProductionRoundDetailsModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { snackbaropen: false, snackbarmsg: \"\", categories: [] };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  snackbarClose = (event) => {\r\n    this.setState({ snackbaropen: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/categories\")\r\n      .then((result) => {\r\n        const categories = result.data;\r\n\r\n        this.setState({ categories: categories });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    fetch(\"http://localhost:5000/api/prevProRound-details\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        username: \"thiranya\",\r\n      },\r\n      body: JSON.stringify({\r\n        id: event.target.id.value,\r\n        productCategory: event.target.productCategory.value,\r\n        status: event.target.status.value,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          swal({\r\n            title: \"Status Changed Succesfully\",\r\n            icon: \"success\",\r\n            button: \"Done\",\r\n          });\r\n          setTimeout(\r\n            function () {\r\n              window.location.reload();\r\n            }.bind(this),\r\n            1500\r\n          );\r\n        },\r\n        (error) => {\r\n          this.setState({ snackbaropen: true, snackbarmsg: \"Failed\" });\r\n        }\r\n      );\r\n  }\r\n\r\n  //   handleSubmit = (event) => {\r\n\r\n  //       return <Redirect to='/login' />\r\n\r\n  //   }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n          open={this.state.snackbaropen}\r\n          autoHideDuration={6000}\r\n          onClose={this.snackbarClose}\r\n          message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"danger\"\r\n              onClick={this.snackbarClose}\r\n            ></IconButton>,\r\n          ]}\r\n        />\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          //centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Edit Status\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col sm={6}>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                  <Form.Group>\r\n                    <Form.Group controlId=\"proId\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        name=\"id\"\r\n                        required\r\n                        placeholder=\"id\"\r\n                        defaultValue={this.props.id}\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Label>Product Category</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      required\r\n                      name=\"productCategory\"\r\n                      defaultValue={this.props.productCategory}\r\n                    >\r\n                      {this.state.categories.map((i) => (\r\n                        <option key={i._id}>{i.categoryName}</option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"status\">\r\n                    <Form.Label>Status</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      name=\"status\"\r\n                      required\r\n                      placeholder=\"Status\"\r\n                      defaultValue={this.props.status}\r\n                    >\r\n                      <div style={{ background: \"#f8d7da\" }}>\r\n                        {this.state.validationError}\r\n                      </div>\r\n                      <option selected>Pending</option>\r\n                      <option>Completed</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                      Update Status\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"danger\" onClick={this.props.onHide}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\ProductionManager\\Modals\\EditProductionRoundDetailsModal.jsx",["1102","1103","1104"],"import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport swal from \"sweetalert\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport class EditProductionRoundDetailsModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { snackbaropen: false, snackbarmsg: \"\", categories: [] };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  snackbarClose = (event) => {\r\n    this.setState({ snackbaropen: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/api/categories\")\r\n      .then((result) => {\r\n        const categories = result.data;\r\n\r\n        this.setState({ categories: categories });\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    fetch(\"http://localhost:5000/api/newProRound-details\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        username: \"thiranya\",\r\n      },\r\n      body: JSON.stringify({\r\n        id: event.target.id.value,\r\n        productCategory: event.target.productCategory.value,\r\n        quantity: event.target.quantity.value,\r\n        esDays: event.target.esDays.value,\r\n        esEmployees: event.target.esEmployees.value,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          swal({\r\n            title: \"Details Updated Succesfully\",\r\n            icon: \"success\",\r\n            button: \"Done\",\r\n          });\r\n          setTimeout(\r\n            function () {\r\n              window.location.reload();\r\n            }.bind(this),\r\n            1500\r\n          );\r\n        },\r\n        (error) => {\r\n          this.setState({ snackbaropen: true, snackbarmsg: \"Failed\" });\r\n        }\r\n      );\r\n  }\r\n\r\n  //   handleSubmit = (event) => {\r\n\r\n  //       return <Redirect to='/login' />\r\n\r\n  //   }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n          open={this.state.snackbaropen}\r\n          autoHideDuration={6000}\r\n          onClose={this.snackbarClose}\r\n          message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"danger\"\r\n              onClick={this.snackbarClose}\r\n            ></IconButton>,\r\n          ]}\r\n        />\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          //centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Update Details\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col sm={6}>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                  <Form.Group>\r\n                    <Form.Group controlId=\"proId\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        name=\"id\"\r\n                        required\r\n                        placeholder=\"id\"\r\n                        defaultValue={this.props.id}\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Label>Product Category</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      required\r\n                      name=\"productCategory\"\r\n                      defaultValue={this.props.productCategory}\r\n                    >\r\n                      {this.state.categories.map((i) => (\r\n                        <option key={i._id}>{i.categoryName}</option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"quantity\">\r\n                    <Form.Label>Quntity</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"quantity\"\r\n                      required\r\n                      placeholder=\"Quntity\"\r\n                      defaultValue={this.props.quantity}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"esDays\">\r\n                    <Form.Label>Estimated Days</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"esDays\"\r\n                      required\r\n                      placeholder=\"Estimated Days\"\r\n                      defaultValue={this.props.esDays}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"esEmployees\">\r\n                    <Form.Label>Estimated Employees</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"esEmployees\"\r\n                      required\r\n                      placeholder=\"Estimated Employees\"\r\n                      defaultValue={this.props.esEmployees}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                      Update Production Round\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"danger\" onClick={this.props.onHide}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Modals\\EditMaterialCodeModal.jsx",["1105"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class EditMaterialCodeModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { snackbaropen: false, snackbarmsg: '' };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => { \r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    handleSubmit(event, props) {\r\n        event.preventDefault();\r\n        //alert(event.target.name.value);\r\n\r\n        fetch('http://localhost:5000/api/meterial-code/', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: event.target.id.value,\r\n                materialName: event.target.matName.value,\r\n                materialCode: event.target.matCode.value,\r\n                status: event.target.status.value,\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                swal({\r\n                    title: \"Metirial Code Updated Succesfully\",\r\n                    icon: \"success\",\r\n                    button: \"Done\",\r\n                  });\r\n            }, (error) => {\r\n                this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n            }\r\n\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Matirial COde\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"id\">\r\n                                        <Form.Label>ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"id\" required disabled defaultValue={this.props.id} hidden/>\r\n                                    </Form.Group>\r\n                                    \r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Material Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"matName\" required placeholder=\"Material Name\" defaultValue={this.props.matirialName} />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Material Code</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"matCode\" required placeholder=\"Material Code\" defaultValue={this.props.materialCode} />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"status\" defaultValue={this.props.status}>\r\n                                            <option selected disabled>{this.props.status}</option>\r\n                                            <option>ACTIVE</option>\r\n                                            <option>INACTIVE</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <br />\r\n                                    <Form.Group>\r\n                                        <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Edit Matirial Code\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Modals\\EditProductCodeModal.jsx",["1106"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport swal from 'sweetalert';\r\nimport axios from \"axios\";\r\n\r\nexport class EditProductCodeModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { snackbaropen: false, snackbarmsg: '', categories:[] };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => { \r\n        this.setState({ snackbaropen: false });\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios\r\n          .get(\"http://localhost:5000/api/categories\")\r\n          .then((result) => {\r\n            const categories = result.data;\r\n    \r\n            this.setState({ categories: categories });\r\n          })\r\n          .catch((err) => console.log(err.message));\r\n      }\r\n\r\n    handleSubmit(event, props) {\r\n        event.preventDefault();\r\n        //alert(event.target.name.value);\r\n\r\n        fetch('http://localhost:5000/api/product-code/', { \r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: event.target.id.value,\r\n                productCode: event.target.productCode.value,\r\n                productCategory: event.target.productCategory.value,\r\n                status: event.target.status.value,\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                swal({\r\n                    title: \"Product Code Updated Succesfully\",\r\n                    icon: \"success\",\r\n                    button: \"Done\",\r\n                  });\r\n            }, (error) => {\r\n                this.setState({ snackbaropen: true, snackbarmsg: 'Failed' })\r\n            }\r\n\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Product Code\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"id\">\r\n                                        <Form.Label>ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"id\" required disabled defaultValue={this.props.id} hidden/>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Product Code</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"productCode\" required placeholder=\"Product Code\" defaultValue={this.props.productCode} />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Product Category</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"productCategory\" defaultValue={this.props.productCategory}>\r\n                                        {this.state.categories.map((i) => (\r\n                                            <option key={i._id}\r\n                                                    >{i.categoryName}</option>\r\n                                        ))}\r\n                                        </Form.Control>  \r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"status\" defaultValue={this.props.status}>\r\n                                            <option selected>ACTIVE</option>\r\n                                            <option>INACTIVE</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <br />\r\n                                    <Form.Group>\r\n                                        <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Edit Product Code\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\thero\\OneDrive\\Documents\\factory-management\\factory-management\\factory-managment-frontend\\src\\components\\SuperAdmin\\Modals\\EditCategoryModal.jsx",["1107"],"import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form, FormGroup } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class EditCategoryModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { snackbaropen: false, snackbarmsg: '' };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n \r\n    handleSubmit(event, props) {\r\n        event.preventDefault();\r\n        fetch('http://localhost:5000/api/categories/', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'username': 'chathura'\r\n            },\r\n            body: JSON.stringify({\r\n                id: event.target.id.value,\r\n                categoryName: event.target.name.value,\r\n                status: event.target.status.value,\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                swal({\r\n                    title: \"Category Updated Succesfully\",\r\n                    icon: \"success\",\r\n                    button: \"Done\",\r\n                  });\r\n            }, (error) => {\r\n                \r\n            }\r\n\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                    open={this.state.snackbaropen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.snackbarClose}\r\n                    message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n                    action={[\r\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={this.snackbarClose}></IconButton>\r\n                    ]}\r\n                />\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Category\r\n              </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"id\">\r\n                                        <Form.Label>ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"id\" required disabled defaultValue={this.props.id} hidden/>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"name\">\r\n                                        <Form.Label>Name</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"name\" required placeholder=\"Category Name\" defaultValue={this.props.name} />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Status</Form.Label>\r\n                                        <Form.Control as=\"select\" required name=\"status\" defaultValue={this.props.status}>\r\n                                            <option selected disabled>{this.props.status}</option>\r\n                                            <option>ACTIVE</option>\r\n                                            <option>INACTIVE</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <br />\r\n                                    <Form.Group>\r\n                                        <Button style={{ backgroundColor: \"#7121AD\", color: \"white\" }} variant=\"primary\" type=\"submit\" >\r\n                                            Edit Category\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}",{"ruleId":"1108","replacedBy":"1109"},{"ruleId":"1110","replacedBy":"1111"},{"ruleId":"1112","severity":1,"message":"1113","line":2,"column":27,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":33},{"ruleId":"1112","severity":1,"message":"1116","line":2,"column":35,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":41},{"ruleId":"1117","severity":1,"message":"1118","line":98,"column":21,"nodeType":"1119","messageId":"1120","endLine":98,"endColumn":23},{"ruleId":"1117","severity":1,"message":"1121","line":101,"column":26,"nodeType":"1119","messageId":"1120","endLine":101,"endColumn":28},{"ruleId":"1117","severity":1,"message":"1121","line":106,"column":26,"nodeType":"1119","messageId":"1120","endLine":106,"endColumn":28},{"ruleId":"1117","severity":1,"message":"1121","line":111,"column":26,"nodeType":"1119","messageId":"1120","endLine":111,"endColumn":28},{"ruleId":"1117","severity":1,"message":"1121","line":116,"column":26,"nodeType":"1119","messageId":"1120","endLine":116,"endColumn":28},{"ruleId":"1117","severity":1,"message":"1121","line":121,"column":26,"nodeType":"1119","messageId":"1120","endLine":121,"endColumn":28},{"ruleId":"1117","severity":1,"message":"1121","line":126,"column":26,"nodeType":"1119","messageId":"1120","endLine":126,"endColumn":28},{"ruleId":"1117","severity":1,"message":"1118","line":142,"column":21,"nodeType":"1119","messageId":"1120","endLine":142,"endColumn":23},{"ruleId":"1117","severity":1,"message":"1121","line":149,"column":26,"nodeType":"1119","messageId":"1120","endLine":149,"endColumn":28},{"ruleId":"1117","severity":1,"message":"1121","line":162,"column":26,"nodeType":"1119","messageId":"1120","endLine":162,"endColumn":28},{"ruleId":"1117","severity":1,"message":"1121","line":176,"column":30,"nodeType":"1119","messageId":"1120","endLine":176,"endColumn":32},{"ruleId":"1117","severity":1,"message":"1121","line":191,"column":30,"nodeType":"1119","messageId":"1120","endLine":191,"endColumn":32},{"ruleId":"1117","severity":1,"message":"1121","line":236,"column":27,"nodeType":"1119","messageId":"1120","endLine":236,"endColumn":29},{"ruleId":"1117","severity":1,"message":"1121","line":264,"column":27,"nodeType":"1119","messageId":"1120","endLine":264,"endColumn":29},{"ruleId":"1112","severity":1,"message":"1122","line":4,"column":10,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":29},{"ruleId":"1112","severity":1,"message":"1123","line":6,"column":10,"nodeType":"1114","messageId":"1115","endLine":6,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":6,"column":17,"nodeType":"1114","messageId":"1115","endLine":6,"endColumn":23},{"ruleId":"1112","severity":1,"message":"1125","line":7,"column":10,"nodeType":"1114","messageId":"1115","endLine":7,"endColumn":23},{"ruleId":"1112","severity":1,"message":"1126","line":78,"column":12,"nodeType":"1114","messageId":"1115","endLine":78,"endColumn":17},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":3,"column":17,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":23},{"ruleId":"1112","severity":1,"message":"1127","line":4,"column":8,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":13},{"ruleId":"1112","severity":1,"message":"1128","line":108,"column":19,"nodeType":"1114","messageId":"1115","endLine":108,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1129","line":141,"column":19,"nodeType":"1114","messageId":"1115","endLine":141,"endColumn":23},{"ruleId":"1117","severity":1,"message":"1121","line":158,"column":91,"nodeType":"1119","messageId":"1120","endLine":158,"endColumn":93},{"ruleId":"1112","severity":1,"message":"1130","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1131","line":3,"column":25,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":28},{"ruleId":"1112","severity":1,"message":"1132","line":3,"column":30,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":33},{"ruleId":"1112","severity":1,"message":"1133","line":3,"column":41,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":50},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1134","line":6,"column":8,"nodeType":"1114","messageId":"1115","endLine":6,"endColumn":24},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1135","line":5,"column":10,"nodeType":"1114","messageId":"1115","endLine":5,"endColumn":16},{"ruleId":"1112","severity":1,"message":"1136","line":7,"column":10,"nodeType":"1114","messageId":"1115","endLine":7,"endColumn":24},{"ruleId":"1112","severity":1,"message":"1137","line":7,"column":26,"nodeType":"1114","messageId":"1115","endLine":7,"endColumn":31},{"ruleId":"1112","severity":1,"message":"1138","line":12,"column":8,"nodeType":"1114","messageId":"1115","endLine":12,"endColumn":18},{"ruleId":"1112","severity":1,"message":"1139","line":13,"column":10,"nodeType":"1114","messageId":"1115","endLine":13,"endColumn":18},{"ruleId":"1112","severity":1,"message":"1140","line":152,"column":26,"nodeType":"1114","messageId":"1115","endLine":152,"endColumn":37},{"ruleId":"1112","severity":1,"message":"1141","line":152,"column":39,"nodeType":"1114","messageId":"1115","endLine":152,"endColumn":47},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":3,"column":17,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":23},{"ruleId":"1112","severity":1,"message":"1142","line":133,"column":9,"nodeType":"1114","messageId":"1115","endLine":133,"endColumn":22},{"ruleId":"1112","severity":1,"message":"1143","line":6,"column":8,"nodeType":"1114","messageId":"1115","endLine":6,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1144","line":1,"column":28,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":36},{"ruleId":"1112","severity":1,"message":"1145","line":8,"column":8,"nodeType":"1114","messageId":"1115","endLine":8,"endColumn":17},{"ruleId":"1112","severity":1,"message":"1136","line":9,"column":10,"nodeType":"1114","messageId":"1115","endLine":9,"endColumn":24},{"ruleId":"1112","severity":1,"message":"1137","line":9,"column":26,"nodeType":"1114","messageId":"1115","endLine":9,"endColumn":31},{"ruleId":"1112","severity":1,"message":"1144","line":1,"column":28,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":36},{"ruleId":"1112","severity":1,"message":"1123","line":2,"column":8,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":13},{"ruleId":"1112","severity":1,"message":"1146","line":4,"column":10,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":14},{"ruleId":"1112","severity":1,"message":"1136","line":9,"column":10,"nodeType":"1114","messageId":"1115","endLine":9,"endColumn":24},{"ruleId":"1112","severity":1,"message":"1137","line":9,"column":26,"nodeType":"1114","messageId":"1115","endLine":9,"endColumn":31},{"ruleId":"1147","severity":1,"message":"1148","line":16,"column":5,"nodeType":"1149","messageId":"1120","endLine":16,"endColumn":14},{"ruleId":"1147","severity":1,"message":"1150","line":17,"column":5,"nodeType":"1149","messageId":"1120","endLine":17,"endColumn":16},{"ruleId":"1151","severity":1,"message":"1152","line":32,"column":13,"nodeType":"1153","messageId":"1154","endLine":32,"endColumn":39,"fix":"1155"},{"ruleId":"1112","severity":1,"message":"1144","line":1,"column":28,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":36},{"ruleId":"1112","severity":1,"message":"1123","line":2,"column":8,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":13},{"ruleId":"1112","severity":1,"message":"1156","line":5,"column":8,"nodeType":"1114","messageId":"1115","endLine":5,"endColumn":17},{"ruleId":"1112","severity":1,"message":"1136","line":9,"column":10,"nodeType":"1114","messageId":"1115","endLine":9,"endColumn":24},{"ruleId":"1112","severity":1,"message":"1137","line":9,"column":26,"nodeType":"1114","messageId":"1115","endLine":9,"endColumn":31},{"ruleId":"1151","severity":1,"message":"1157","line":61,"column":13,"nodeType":"1153","messageId":"1154","endLine":61,"endColumn":47,"fix":"1158"},{"ruleId":"1151","severity":1,"message":"1157","line":166,"column":7,"nodeType":"1153","messageId":"1154","endLine":166,"endColumn":41,"fix":"1159"},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":3,"column":17,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":23},{"ruleId":"1112","severity":1,"message":"1160","line":3,"column":25,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":38},{"ruleId":"1112","severity":1,"message":"1142","line":55,"column":9,"nodeType":"1114","messageId":"1115","endLine":55,"endColumn":22},{"ruleId":"1112","severity":1,"message":"1130","line":2,"column":10,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1131","line":2,"column":25,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":28},{"ruleId":"1112","severity":1,"message":"1132","line":2,"column":30,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":33},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1161","severity":1,"message":"1162","line":70,"column":17,"nodeType":"1163","messageId":"1120","endLine":70,"endColumn":21,"fix":"1164"},{"ruleId":"1112","severity":1,"message":"1165","line":93,"column":7,"nodeType":"1114","messageId":"1115","endLine":93,"endColumn":27},{"ruleId":"1112","severity":1,"message":"1166","line":105,"column":7,"nodeType":"1114","messageId":"1115","endLine":105,"endColumn":18},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":3,"column":17,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":23},{"ruleId":"1112","severity":1,"message":"1160","line":3,"column":25,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":38},{"ruleId":"1112","severity":1,"message":"1130","line":2,"column":10,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1131","line":2,"column":25,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":28},{"ruleId":"1112","severity":1,"message":"1132","line":2,"column":30,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":33},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1161","severity":1,"message":"1162","line":59,"column":17,"nodeType":"1163","messageId":"1120","endLine":59,"endColumn":21,"fix":"1167"},{"ruleId":"1112","severity":1,"message":"1130","line":2,"column":10,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1131","line":2,"column":25,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":28},{"ruleId":"1112","severity":1,"message":"1132","line":2,"column":30,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":33},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1161","severity":1,"message":"1162","line":60,"column":17,"nodeType":"1163","messageId":"1120","endLine":60,"endColumn":21,"fix":"1168"},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":3,"column":17,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":23},{"ruleId":"1112","severity":1,"message":"1160","line":3,"column":25,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":38},{"ruleId":"1112","severity":1,"message":"1142","line":55,"column":9,"nodeType":"1114","messageId":"1115","endLine":55,"endColumn":22},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":3,"column":17,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":23},{"ruleId":"1112","severity":1,"message":"1160","line":3,"column":25,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":38},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":3,"column":17,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":23},{"ruleId":"1112","severity":1,"message":"1160","line":3,"column":25,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":38},{"ruleId":"1112","severity":1,"message":"1142","line":55,"column":9,"nodeType":"1114","messageId":"1115","endLine":55,"endColumn":22},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":3,"column":17,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":23},{"ruleId":"1112","severity":1,"message":"1142","line":78,"column":9,"nodeType":"1114","messageId":"1115","endLine":78,"endColumn":22},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":3,"column":17,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":23},{"ruleId":"1112","severity":1,"message":"1142","line":65,"column":9,"nodeType":"1114","messageId":"1115","endLine":65,"endColumn":22},{"ruleId":"1112","severity":1,"message":"1130","line":2,"column":10,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1131","line":2,"column":25,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":28},{"ruleId":"1112","severity":1,"message":"1132","line":2,"column":30,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":33},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1161","severity":1,"message":"1162","line":57,"column":17,"nodeType":"1163","messageId":"1120","endLine":57,"endColumn":21,"fix":"1169"},{"ruleId":"1117","severity":1,"message":"1121","line":30,"column":25,"nodeType":"1119","messageId":"1120","endLine":30,"endColumn":27},{"ruleId":"1117","severity":1,"message":"1121","line":32,"column":22,"nodeType":"1119","messageId":"1120","endLine":32,"endColumn":24},{"ruleId":"1170","severity":1,"message":"1171","line":117,"column":24,"nodeType":"1172","endLine":117,"endColumn":36},{"ruleId":"1112","severity":1,"message":"1130","line":2,"column":10,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1131","line":2,"column":25,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":28},{"ruleId":"1112","severity":1,"message":"1132","line":2,"column":30,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":33},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1161","severity":1,"message":"1162","line":57,"column":17,"nodeType":"1163","messageId":"1120","endLine":57,"endColumn":21,"fix":"1173"},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":3,"column":17,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":23},{"ruleId":"1112","severity":1,"message":"1160","line":3,"column":25,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":38},{"ruleId":"1112","severity":1,"message":"1142","line":55,"column":9,"nodeType":"1114","messageId":"1115","endLine":55,"endColumn":22},{"ruleId":"1112","severity":1,"message":"1130","line":2,"column":10,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1131","line":2,"column":25,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":28},{"ruleId":"1112","severity":1,"message":"1132","line":2,"column":30,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":33},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1161","severity":1,"message":"1162","line":61,"column":17,"nodeType":"1163","messageId":"1120","endLine":61,"endColumn":21,"fix":"1174"},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":3,"column":17,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":23},{"ruleId":"1112","severity":1,"message":"1160","line":3,"column":25,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":38},{"ruleId":"1112","severity":1,"message":"1127","line":4,"column":8,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":13},{"ruleId":"1112","severity":1,"message":"1175","line":8,"column":10,"nodeType":"1114","messageId":"1115","endLine":8,"endColumn":32},{"ruleId":"1112","severity":1,"message":"1129","line":103,"column":19,"nodeType":"1114","messageId":"1115","endLine":103,"endColumn":23},{"ruleId":"1112","severity":1,"message":"1129","line":136,"column":19,"nodeType":"1114","messageId":"1115","endLine":136,"endColumn":23},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":3,"column":17,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":23},{"ruleId":"1112","severity":1,"message":"1160","line":3,"column":25,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":38},{"ruleId":"1112","severity":1,"message":"1176","line":4,"column":10,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":29},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1160","line":3,"column":25,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":38},{"ruleId":"1112","severity":1,"message":"1176","line":4,"column":10,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":29},{"ruleId":"1112","severity":1,"message":"1177","line":5,"column":9,"nodeType":"1114","messageId":"1115","endLine":5,"endColumn":22},{"ruleId":"1112","severity":1,"message":"1178","line":6,"column":8,"nodeType":"1114","messageId":"1115","endLine":6,"endColumn":27},{"ruleId":"1112","severity":1,"message":"1179","line":32,"column":19,"nodeType":"1114","messageId":"1115","endLine":32,"endColumn":28},{"ruleId":"1117","severity":1,"message":"1121","line":34,"column":34,"nodeType":"1119","messageId":"1120","endLine":34,"endColumn":36},{"ruleId":"1117","severity":1,"message":"1121","line":34,"column":68,"nodeType":"1119","messageId":"1120","endLine":34,"endColumn":70},{"ruleId":"1112","severity":1,"message":"1179","line":72,"column":19,"nodeType":"1114","messageId":"1115","endLine":72,"endColumn":28},{"ruleId":"1117","severity":1,"message":"1121","line":74,"column":34,"nodeType":"1119","messageId":"1120","endLine":74,"endColumn":36},{"ruleId":"1117","severity":1,"message":"1121","line":74,"column":66,"nodeType":"1119","messageId":"1120","endLine":74,"endColumn":68},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":3,"column":17,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":23},{"ruleId":"1112","severity":1,"message":"1160","line":3,"column":25,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":38},{"ruleId":"1112","severity":1,"message":"1180","line":3,"column":40,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":44},{"ruleId":"1112","severity":1,"message":"1176","line":4,"column":10,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":29},{"ruleId":"1112","severity":1,"message":"1177","line":5,"column":9,"nodeType":"1114","messageId":"1115","endLine":5,"endColumn":22},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":3,"column":17,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":23},{"ruleId":"1112","severity":1,"message":"1160","line":3,"column":25,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":38},{"ruleId":"1112","severity":1,"message":"1181","line":4,"column":10,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":14},{"ruleId":"1112","severity":1,"message":"1131","line":4,"column":15,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":18},{"ruleId":"1112","severity":1,"message":"1132","line":4,"column":19,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":22},{"ruleId":"1112","severity":1,"message":"1182","line":4,"column":23,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":32},{"ruleId":"1112","severity":1,"message":"1183","line":4,"column":33,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":38},{"ruleId":"1112","severity":1,"message":"1181","line":4,"column":10,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":14},{"ruleId":"1112","severity":1,"message":"1131","line":4,"column":16,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":19},{"ruleId":"1112","severity":1,"message":"1132","line":4,"column":21,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":24},{"ruleId":"1112","severity":1,"message":"1182","line":4,"column":26,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":35},{"ruleId":"1112","severity":1,"message":"1183","line":4,"column":37,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":42},{"ruleId":"1112","severity":1,"message":"1181","line":4,"column":10,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":14},{"ruleId":"1112","severity":1,"message":"1131","line":4,"column":16,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":19},{"ruleId":"1112","severity":1,"message":"1132","line":4,"column":21,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":24},{"ruleId":"1112","severity":1,"message":"1182","line":4,"column":26,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":35},{"ruleId":"1112","severity":1,"message":"1183","line":4,"column":37,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":42},{"ruleId":"1112","severity":1,"message":"1181","line":4,"column":10,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":14},{"ruleId":"1112","severity":1,"message":"1131","line":4,"column":16,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":19},{"ruleId":"1112","severity":1,"message":"1132","line":4,"column":21,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":24},{"ruleId":"1112","severity":1,"message":"1182","line":4,"column":26,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":35},{"ruleId":"1112","severity":1,"message":"1183","line":4,"column":37,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":42},{"ruleId":"1112","severity":1,"message":"1181","line":4,"column":10,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":14},{"ruleId":"1112","severity":1,"message":"1131","line":4,"column":16,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":19},{"ruleId":"1112","severity":1,"message":"1132","line":4,"column":21,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":24},{"ruleId":"1112","severity":1,"message":"1182","line":4,"column":26,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":35},{"ruleId":"1112","severity":1,"message":"1183","line":4,"column":37,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":42},{"ruleId":"1112","severity":1,"message":"1181","line":4,"column":10,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":14},{"ruleId":"1112","severity":1,"message":"1131","line":4,"column":16,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":19},{"ruleId":"1112","severity":1,"message":"1132","line":4,"column":21,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":24},{"ruleId":"1112","severity":1,"message":"1182","line":4,"column":26,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":35},{"ruleId":"1112","severity":1,"message":"1183","line":4,"column":37,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":42},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1185","line":3,"column":15,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":19},{"ruleId":"1112","severity":1,"message":"1156","line":7,"column":8,"nodeType":"1114","messageId":"1115","endLine":7,"endColumn":17},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1185","line":3,"column":15,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":19},{"ruleId":"1112","severity":1,"message":"1124","line":5,"column":10,"nodeType":"1114","messageId":"1115","endLine":5,"endColumn":16},{"ruleId":"1112","severity":1,"message":"1186","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":16},{"ruleId":"1112","severity":1,"message":"1186","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":16},{"ruleId":"1112","severity":1,"message":"1186","line":7,"column":10,"nodeType":"1114","messageId":"1115","endLine":7,"endColumn":16},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":3,"column":17,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":23},{"ruleId":"1112","severity":1,"message":"1137","line":5,"column":26,"nodeType":"1114","messageId":"1115","endLine":5,"endColumn":31},{"ruleId":"1112","severity":1,"message":"1187","line":5,"column":39,"nodeType":"1114","messageId":"1115","endLine":5,"endColumn":45},{"ruleId":"1112","severity":1,"message":"1188","line":5,"column":47,"nodeType":"1114","messageId":"1115","endLine":5,"endColumn":51},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":3,"column":17,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":23},{"ruleId":"1112","severity":1,"message":"1189","line":7,"column":8,"nodeType":"1114","messageId":"1115","endLine":7,"endColumn":19},{"ruleId":"1112","severity":1,"message":"1123","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":3,"column":17,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":23},{"ruleId":"1112","severity":1,"message":"1137","line":5,"column":26,"nodeType":"1114","messageId":"1115","endLine":5,"endColumn":31},{"ruleId":"1112","severity":1,"message":"1187","line":5,"column":39,"nodeType":"1114","messageId":"1115","endLine":5,"endColumn":45},{"ruleId":"1112","severity":1,"message":"1188","line":5,"column":47,"nodeType":"1114","messageId":"1115","endLine":5,"endColumn":51},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1112","severity":1,"message":"1190","line":6,"column":10,"nodeType":"1114","messageId":"1115","endLine":6,"endColumn":18},{"ruleId":"1161","severity":1,"message":"1162","line":68,"column":25,"nodeType":"1163","messageId":"1120","endLine":68,"endColumn":29,"fix":"1191"},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1123","line":2,"column":10,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":2,"column":17,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":23},{"ruleId":"1112","severity":1,"message":"1160","line":2,"column":25,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":38},{"ruleId":"1112","severity":1,"message":"1123","line":2,"column":10,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":2,"column":17,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":23},{"ruleId":"1161","severity":1,"message":"1162","line":42,"column":13,"nodeType":"1163","messageId":"1120","endLine":42,"endColumn":17,"fix":"1192"},{"ruleId":"1112","severity":1,"message":"1123","line":2,"column":10,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":2,"column":17,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":23},{"ruleId":"1161","severity":1,"message":"1162","line":42,"column":13,"nodeType":"1163","messageId":"1120","endLine":42,"endColumn":17,"fix":"1193"},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1112","severity":1,"message":"1190","line":6,"column":10,"nodeType":"1114","messageId":"1115","endLine":6,"endColumn":18},{"ruleId":"1112","severity":1,"message":"1194","line":27,"column":15,"nodeType":"1114","messageId":"1115","endLine":27,"endColumn":22},{"ruleId":"1161","severity":1,"message":"1162","line":51,"column":25,"nodeType":"1163","messageId":"1120","endLine":51,"endColumn":29,"fix":"1195"},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1112","severity":1,"message":"1190","line":7,"column":10,"nodeType":"1114","messageId":"1115","endLine":7,"endColumn":18},{"ruleId":"1112","severity":1,"message":"1194","line":39,"column":15,"nodeType":"1114","messageId":"1115","endLine":39,"endColumn":22},{"ruleId":"1161","severity":1,"message":"1162","line":65,"column":25,"nodeType":"1163","messageId":"1120","endLine":65,"endColumn":29,"fix":"1196"},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1112","severity":1,"message":"1190","line":7,"column":10,"nodeType":"1114","messageId":"1115","endLine":7,"endColumn":18},{"ruleId":"1112","severity":1,"message":"1194","line":40,"column":15,"nodeType":"1114","messageId":"1115","endLine":40,"endColumn":22},{"ruleId":"1161","severity":1,"message":"1162","line":67,"column":25,"nodeType":"1163","messageId":"1120","endLine":67,"endColumn":29,"fix":"1197"},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1198","line":6,"column":8,"nodeType":"1114","messageId":"1115","endLine":6,"endColumn":13},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1199","line":2,"column":13,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":20},{"ruleId":"1112","severity":1,"message":"1199","line":2,"column":13,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":20},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1112","severity":1,"message":"1186","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":16},{"ruleId":"1112","severity":1,"message":"1186","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":16},{"ruleId":"1112","severity":1,"message":"1186","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":16},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1112","severity":1,"message":"1123","line":2,"column":10,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":2,"column":17,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":23},{"ruleId":"1161","severity":1,"message":"1162","line":42,"column":13,"nodeType":"1163","messageId":"1120","endLine":42,"endColumn":17,"fix":"1200"},{"ruleId":"1112","severity":1,"message":"1123","line":2,"column":10,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":2,"column":17,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":23},{"ruleId":"1161","severity":1,"message":"1162","line":42,"column":17,"nodeType":"1163","messageId":"1120","endLine":42,"endColumn":21,"fix":"1201"},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1202","severity":1,"message":"1203","line":22,"column":11,"nodeType":"1204","messageId":"1205","endLine":22,"endColumn":39},{"ruleId":"1202","severity":1,"message":"1203","line":23,"column":11,"nodeType":"1204","messageId":"1205","endLine":23,"endColumn":23},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1112","severity":1,"message":"1190","line":7,"column":10,"nodeType":"1114","messageId":"1115","endLine":7,"endColumn":18},{"ruleId":"1161","severity":1,"message":"1162","line":60,"column":15,"nodeType":"1163","messageId":"1120","endLine":60,"endColumn":19,"fix":"1206"},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1123","line":2,"column":10,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":2,"column":17,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":23},{"ruleId":"1161","severity":1,"message":"1162","line":42,"column":17,"nodeType":"1163","messageId":"1120","endLine":42,"endColumn":21,"fix":"1207"},{"ruleId":"1112","severity":1,"message":"1123","line":2,"column":10,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":2,"column":17,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":23},{"ruleId":"1161","severity":1,"message":"1162","line":42,"column":17,"nodeType":"1163","messageId":"1120","endLine":42,"endColumn":21,"fix":"1208"},{"ruleId":"1112","severity":1,"message":"1123","line":2,"column":10,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":2,"column":17,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":23},{"ruleId":"1161","severity":1,"message":"1162","line":42,"column":17,"nodeType":"1163","messageId":"1120","endLine":42,"endColumn":21,"fix":"1209"},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1185","line":3,"column":15,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":19},{"ruleId":"1112","severity":1,"message":"1210","line":5,"column":8,"nodeType":"1114","messageId":"1115","endLine":5,"endColumn":21},{"ruleId":"1112","severity":1,"message":"1211","line":6,"column":8,"nodeType":"1114","messageId":"1115","endLine":6,"endColumn":17},{"ruleId":"1112","severity":1,"message":"1156","line":7,"column":8,"nodeType":"1114","messageId":"1115","endLine":7,"endColumn":17},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1212","line":3,"column":10,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":13},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1185","line":3,"column":15,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":19},{"ruleId":"1112","severity":1,"message":"1146","line":6,"column":10,"nodeType":"1114","messageId":"1115","endLine":6,"endColumn":14},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1185","line":3,"column":15,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":19},{"ruleId":"1112","severity":1,"message":"1146","line":6,"column":10,"nodeType":"1114","messageId":"1115","endLine":6,"endColumn":14},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1185","line":3,"column":15,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":19},{"ruleId":"1112","severity":1,"message":"1146","line":6,"column":10,"nodeType":"1114","messageId":"1115","endLine":6,"endColumn":14},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1185","line":3,"column":15,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":19},{"ruleId":"1112","severity":1,"message":"1213","line":6,"column":8,"nodeType":"1114","messageId":"1115","endLine":6,"endColumn":16},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1185","line":3,"column":15,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":19},{"ruleId":"1112","severity":1,"message":"1146","line":6,"column":10,"nodeType":"1114","messageId":"1115","endLine":6,"endColumn":14},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1170","severity":1,"message":"1214","line":18,"column":13,"nodeType":"1172","endLine":28,"endColumn":14},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1185","line":3,"column":15,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":19},{"ruleId":"1112","severity":1,"message":"1213","line":6,"column":8,"nodeType":"1114","messageId":"1115","endLine":6,"endColumn":16},{"ruleId":"1112","severity":1,"message":"1215","line":7,"column":8,"nodeType":"1114","messageId":"1115","endLine":7,"endColumn":14},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1185","line":3,"column":15,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":19},{"ruleId":"1112","severity":1,"message":"1198","line":6,"column":8,"nodeType":"1114","messageId":"1115","endLine":6,"endColumn":13},{"ruleId":"1112","severity":1,"message":"1144","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":25},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1185","line":3,"column":15,"nodeType":"1114","messageId":"1115","endLine":3,"endColumn":19},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1112","severity":1,"message":"1190","line":6,"column":10,"nodeType":"1114","messageId":"1115","endLine":6,"endColumn":18},{"ruleId":"1161","severity":1,"message":"1162","line":57,"column":23,"nodeType":"1163","messageId":"1120","endLine":57,"endColumn":27,"fix":"1216"},{"ruleId":"1112","severity":1,"message":"1123","line":2,"column":10,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":2,"column":17,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":23},{"ruleId":"1161","severity":1,"message":"1162","line":42,"column":13,"nodeType":"1163","messageId":"1120","endLine":42,"endColumn":17,"fix":"1217"},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1112","severity":1,"message":"1190","line":7,"column":10,"nodeType":"1114","messageId":"1115","endLine":7,"endColumn":18},{"ruleId":"1112","severity":1,"message":"1194","line":40,"column":15,"nodeType":"1114","messageId":"1115","endLine":40,"endColumn":22},{"ruleId":"1161","severity":1,"message":"1162","line":68,"column":25,"nodeType":"1163","messageId":"1120","endLine":68,"endColumn":29,"fix":"1218"},{"ruleId":"1112","severity":1,"message":"1123","line":2,"column":10,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":2,"column":17,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":23},{"ruleId":"1161","severity":1,"message":"1162","line":43,"column":13,"nodeType":"1163","messageId":"1120","endLine":43,"endColumn":17,"fix":"1219"},{"ruleId":"1112","severity":1,"message":"1133","line":4,"column":41,"nodeType":"1114","messageId":"1115","endLine":4,"endColumn":50},{"ruleId":"1112","severity":1,"message":"1190","line":7,"column":10,"nodeType":"1114","messageId":"1115","endLine":7,"endColumn":18},{"ruleId":"1161","severity":1,"message":"1162","line":69,"column":25,"nodeType":"1163","messageId":"1120","endLine":69,"endColumn":29,"fix":"1220"},{"ruleId":"1112","severity":1,"message":"1123","line":2,"column":10,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":15},{"ruleId":"1112","severity":1,"message":"1124","line":2,"column":17,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":23},{"ruleId":"1161","severity":1,"message":"1162","line":42,"column":13,"nodeType":"1163","messageId":"1120","endLine":42,"endColumn":17,"fix":"1221"},{"ruleId":"1112","severity":1,"message":"1222","line":51,"column":30,"nodeType":"1114","messageId":"1115","endLine":51,"endColumn":37},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1112","severity":1,"message":"1190","line":6,"column":10,"nodeType":"1114","messageId":"1115","endLine":6,"endColumn":18},{"ruleId":"1161","severity":1,"message":"1162","line":51,"column":25,"nodeType":"1163","messageId":"1120","endLine":51,"endColumn":29,"fix":"1223"},{"ruleId":"1112","severity":1,"message":"1184","line":1,"column":17,"nodeType":"1114","messageId":"1115","endLine":1,"endColumn":26},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1112","severity":1,"message":"1190","line":7,"column":10,"nodeType":"1114","messageId":"1115","endLine":7,"endColumn":18},{"ruleId":"1161","severity":1,"message":"1162","line":57,"column":15,"nodeType":"1163","messageId":"1120","endLine":57,"endColumn":19,"fix":"1224"},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1112","severity":1,"message":"1190","line":7,"column":10,"nodeType":"1114","messageId":"1115","endLine":7,"endColumn":18},{"ruleId":"1161","severity":1,"message":"1162","line":58,"column":15,"nodeType":"1163","messageId":"1120","endLine":58,"endColumn":19,"fix":"1225"},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1112","severity":1,"message":"1190","line":7,"column":10,"nodeType":"1114","messageId":"1115","endLine":7,"endColumn":18},{"ruleId":"1161","severity":1,"message":"1162","line":60,"column":15,"nodeType":"1163","messageId":"1120","endLine":60,"endColumn":19,"fix":"1226"},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},{"ruleId":"1112","severity":1,"message":"1133","line":2,"column":41,"nodeType":"1114","messageId":"1115","endLine":2,"endColumn":50},"no-native-reassign",["1227"],"no-negated-in-lhs",["1228"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'EditAssignmentModal' is defined but never used.","'Table' is defined but never used.","'Button' is defined but never used.","'computeStyles' is defined but never used.","'Leave' is assigned a value but never used.","'Chart' is defined but never used.","'dateStr' is assigned a value but never used.","'date' is assigned a value but never used.","'Modal' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'FormGroup' is defined but never used.","'RejectUsersTable' is defined but never used.","'result' is defined but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'Pagination' is defined but never used.","'paginate' is defined but never used.","'currentPage' is assigned a value but never used.","'pageSize' is assigned a value but never used.","'AddModelClose' is assigned a value but never used.","'userPic' is defined but never used.","'useState' is defined but never used.","'DialogBox' is defined but never used.","'Link' is defined but never used.","no-dupe-keys","Duplicate key 'openPopup'.","ObjectExpression","Duplicate key 'itemRequest'.","no-useless-rename","Destructuring assignment itemRequests unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"1229","text":"1230"},"'ListGroup' is defined but never used.","Destructuring assignment returnedProducts unnecessarily renamed.",{"range":"1231","text":"1232"},{"range":"1233","text":"1232"},"'ButtonToolbar' is defined but never used.","no-extra-bind","The function binding is unnecessary.","CallExpression",{"range":"1234","text":"1235"},"'productCategoryError' is assigned a value but never used.","'statusError' is assigned a value but never used.",{"range":"1236","text":"1235"},{"range":"1237","text":"1235"},{"range":"1238","text":"1235"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"range":"1239","text":"1235"},{"range":"1240","text":"1235"},"'AddFactoryDetailsModal' is defined but never used.","'AddNewBillTypeModal' is defined but never used.","'SalariesTable' is defined but never used.","'GenarateSalesReport' is defined but never used.","'CashBills' is assigned a value but never used.","'Form' is defined but never used.","'Card' is defined but never used.","'Container' is defined but never used.","'Image' is defined but never used.","'Component' is defined but never used.","'join' is defined but never used.","'format' is defined but never used.","'Bounce' is defined but never used.","'Flip' is defined but never used.","'generatePDF' is defined but never used.","'Redirect' is defined but never used.",{"range":"1241","text":"1235"},{"range":"1242","text":"1235"},{"range":"1243","text":"1235"},"'isValid' is assigned a value but never used.",{"range":"1244","text":"1235"},{"range":"1245","text":"1235"},{"range":"1246","text":"1235"},"'Radio' is defined but never used.","'FaIcons' is defined but never used.",{"range":"1247","text":"1235"},{"range":"1248","text":"1235"},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",{"range":"1249","text":"1235"},{"range":"1250","text":"1235"},{"range":"1251","text":"1235"},{"range":"1252","text":"1235"},"'ItemCodeTable' is defined but never used.","'SearchBox' is defined but never used.","'red' is defined but never used.","'TextArea' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'moment' is defined but never used.",{"range":"1253","text":"1235"},{"range":"1254","text":"1235"},{"range":"1255","text":"1235"},{"range":"1256","text":"1235"},{"range":"1257","text":"1235"},{"range":"1258","text":"1235"},"'version' is assigned a value but never used.",{"range":"1259","text":"1235"},{"range":"1260","text":"1235"},{"range":"1261","text":"1235"},{"range":"1262","text":"1235"},"no-global-assign","no-unsafe-negation",[1018,1044],"itemRequests",[2525,2559],"returnedProducts",[5210,5244],[2163,2174],"",[1954,1965],[1892,1903],[1754,1765],[1755,1766],[1961,1972],[2597,2608],[1320,1331],[1268,1279],[1794,1805],[2317,2328],[2326,2337],[1292,1303],[1293,1304],[1836,1847],[1307,1318],[1364,1375],[1333,1344],[2008,2019],[1310,1321],[2332,2343],[1307,1318],[2385,2396],[1288,1299],[1796,1807],[1666,1677],[1743,1754],[1837,1848]]