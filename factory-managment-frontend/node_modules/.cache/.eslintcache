[{"/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/index.js":"1","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/App.js":"2","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/Dashboard.jsx":"3","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/ProductionManager/AddNewProductionRound.jsx":"4","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/ProductionManager/VIewNewProductionRound.jsx":"5","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/ProductionManager/ProManagerDashboard.jsx":"6","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/ProductionManager/ViewProductList.jsx":"7","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/ProductionManager/AddPreviousProductionRound.jsx":"8","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/ProductionManager/AddStockDetails.jsx":"9","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/ProductionManager/VIewPreviousProductionRound.jsx":"10","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/ProductionManager/ViewOrderDetails.jsx":"11","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/ProductionManager/ViewFeedback.jsx":"12","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/SuperAdmin/login.jsx":"13","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/WholesaleBuyer/wholesalBuyerDashboard.jsx":"14","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/WholesaleBuyer/FeedbackPage.jsx":"15","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/WholesaleBuyer/ViewStockDetails.jsx":"16","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/WholesaleBuyer/ReturnOrder.jsx":"17","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/WholesaleBuyer/ViewPlacedOrderDetails.jsx":"18","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/WholesaleBuyer/AddOrder.jsx":"19","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/ProManagersideNav/EmpSidebar.jsx":"20","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/WholeSaleBuyer/wholesaleBuyerSideNav/EmpSidebar.jsx":"21","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/util/acceprtedreportGenerator.js":"22","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/util/reportGenerator.js":"23","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/WholeSaleBuyer/util/acceprtedreportGenerator.js":"24","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/WholeSaleBuyer/wholesaleBuyerSideNav/EmpSidebarData.js":"25","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/Tabales/ProductListTable.jsx":"26","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/Tabales/PreviousProductionRoundTable.jsx":"27","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/Tabales/ProductonRoundTable.jsx":"28","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/Tabales/OrderDetailsTable.jsx":"29","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/Tabales/FeedbackTable.jsx":"30","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/common/searchBox.jsx":"31","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/WholeSaleBuyer/Tabales/OrderDetailsTable.jsx":"32","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/WholeSaleBuyer/common/searchBox.jsx":"33","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/WholeSaleBuyer/Tabales/ProductStockTable.jsx":"34","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/WholeSaleBuyer/wholesaleBuyerSideNav/SubMenu.jsx":"35","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/ProManagersideNav/EmpSidebarData.js":"36","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/Modals/EditPreviousProductionRoundDetailsModal.jsx":"37","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/Modals/EditProductionRoundDetailsModal.jsx":"38","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/Modals/EditProductStockDetailsMoadal.jsx":"39","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/WholeSaleBuyer/Modals/EditOrderDetailsMoadal.jsx":"40"},{"size":383,"mtime":1633092521508,"results":"41","hashOfConfig":"42"},{"size":312,"mtime":1633093359099,"results":"43","hashOfConfig":"42"},{"size":7524,"mtime":1633093310276,"results":"44","hashOfConfig":"42"},{"size":6796,"mtime":1633093059951,"results":"45","hashOfConfig":"42"},{"size":2340,"mtime":1633093067706,"results":"46","hashOfConfig":"42"},{"size":6303,"mtime":1633093065802,"results":"47","hashOfConfig":"42"},{"size":1162,"mtime":1633093069982,"results":"48","hashOfConfig":"42"},{"size":6754,"mtime":1633092438302,"results":"49","hashOfConfig":"42"},{"size":6026,"mtime":1633092438306,"results":"50","hashOfConfig":"42"},{"size":2405,"mtime":1633092438306,"results":"51","hashOfConfig":"42"},{"size":2274,"mtime":1633092438306,"results":"52","hashOfConfig":"42"},{"size":1155,"mtime":1633092438306,"results":"53","hashOfConfig":"42"},{"size":3937,"mtime":1633093313716,"results":"54","hashOfConfig":"42"},{"size":5943,"mtime":1633092438306,"results":"55","hashOfConfig":"42"},{"size":4582,"mtime":1633092438306,"results":"56","hashOfConfig":"42"},{"size":2149,"mtime":1633092438306,"results":"57","hashOfConfig":"42"},{"size":4507,"mtime":1633092438306,"results":"58","hashOfConfig":"42"},{"size":2280,"mtime":1633092438306,"results":"59","hashOfConfig":"42"},{"size":7221,"mtime":1633092438306,"results":"60","hashOfConfig":"42"},{"size":1829,"mtime":1633093024327,"results":"61","hashOfConfig":"42"},{"size":1831,"mtime":1633093052027,"results":"62","hashOfConfig":"42"},{"size":1481,"mtime":1633092438302,"results":"63","hashOfConfig":"42"},{"size":1506,"mtime":1633092438302,"results":"64","hashOfConfig":"42"},{"size":1481,"mtime":1633092438302,"results":"65","hashOfConfig":"42"},{"size":1588,"mtime":1633093054295,"results":"66","hashOfConfig":"42"},{"size":935,"mtime":1633093029775,"results":"67","hashOfConfig":"42"},{"size":4230,"mtime":1633092438302,"results":"68","hashOfConfig":"42"},{"size":4010,"mtime":1633093032023,"results":"69","hashOfConfig":"42"},{"size":4048,"mtime":1633092438302,"results":"70","hashOfConfig":"42"},{"size":909,"mtime":1633092438302,"results":"71","hashOfConfig":"42"},{"size":419,"mtime":1633093016755,"results":"72","hashOfConfig":"42"},{"size":4025,"mtime":1633092438302,"results":"73","hashOfConfig":"42"},{"size":416,"mtime":1633092438302,"results":"74","hashOfConfig":"42"},{"size":1088,"mtime":1633092438302,"results":"75","hashOfConfig":"42"},{"size":1596,"mtime":1633093045331,"results":"76","hashOfConfig":"42"},{"size":2098,"mtime":1633093026359,"results":"77","hashOfConfig":"42"},{"size":4997,"mtime":1633092438302,"results":"78","hashOfConfig":"42"},{"size":5665,"mtime":1633093021083,"results":"79","hashOfConfig":"42"},{"size":4534,"mtime":1633092438302,"results":"80","hashOfConfig":"42"},{"size":5479,"mtime":1633092438302,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"108bq8n",{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"172"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"187"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"190"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"193"},"/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/index.js",[],"/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/App.js",["194","195","196"],"import \"./App.css\";\n\n// import routes from './route'\n// import NotFound from \"./components/storeManagerComponents/notfound\";\n\nimport Dashboard from \"./pages/Dashboard\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return <Dashboard />;\n}\n\nexport default App;\n  ","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/Dashboard.jsx",["197","198","199","200","201","202","203","204"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport ProManagerNav from \"../components/ProductionManager/ProManagersideNav/EmpSidebar\";\nimport WholesaleBuyerNav from \"../components/WholeSaleBuyer/wholesaleBuyerSideNav/EmpSidebar\";\n\nimport ProductionManagerDashboard from \"./ProductionManager/ProManagerDashboard\";\n\n// //super admin routers\n// import BasicInfo from \"./SuperAdmin/BasicInfo\";\n// import UserRoles from \"./SuperAdmin/UserRoles\";\n// import UserList from \"./SuperAdmin/UserList\";\n// import Categories from \"./SuperAdmin/Categories\";\n// import ProductCodes from \"./SuperAdmin/ProductCodes\";\n// import MaterialCodes from \"./SuperAdmin/MaterialCodes\";\nimport login from \"./SuperAdmin/login\";\n\n//production manager routes\nimport AddNewProductionRound from \"./ProductionManager/AddNewProductionRound\";\nimport VIewNewProductionRound from \"./ProductionManager/VIewNewProductionRound\";\nimport ViewProductList from \"./ProductionManager/ViewProductList\";\nimport AddPreviousProductionRound from \"./ProductionManager/AddPreviousProductionRound\";\nimport VIewPreviousProductionRound from \"./ProductionManager/VIewPreviousProductionRound\";\nimport AddStockDetails from \"./ProductionManager/AddStockDetails\";\nimport ViewOrderDetails from \"./ProductionManager/ViewOrderDetails\";\nimport ViewFeedback from \"./ProductionManager/ViewFeedback\";\n\n//wholesale buyer routes\nimport WholesaleDashboard from \"./WholesaleBuyer/wholesalBuyerDashboard\";\nimport FeedbackPage from \"./WholesaleBuyer/FeedbackPage\";\nimport ViewStockDetails from \"./WholesaleBuyer/ViewStockDetails\";\nimport ReturnOrder from \"./WholesaleBuyer/ReturnOrder\";\nimport ViewPlacedOrderDetails from \"./WholesaleBuyer/ViewPlacedOrderDetails\";\nimport AddOrder from \"./WholesaleBuyer/AddOrder\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      superAdmin: false,\n    };\n    this.renderSideNavigation = this.renderSideNavigation.bind(this);\n    this.renderDashboard = this.renderDashboard.bind(this);\n  }\n\n  renderSideNavigation() {\n    const user_role = localStorage.getItem(\"user_role\");\n    const is_login = localStorage.getItem(\"is_login\");\n    if (is_login != \"1\") {\n      return false;\n    } else {\n      // if (user_role == \"employee\") {\n      //   return <EmpsideNav />;\n      // }\n      // if (user_role == \"stock member\") {\n      //   return <NavBar />;\n      // }\n      if (user_role == \"production team member\") {\n        return <ProManagerNav />;\n      }\n      // if (user_role == \"Super Admin\") {\n      //   return <SuperAdminSideNav />;\n      // }\n      // if (user_role == \"finance team member\") {\n      //   return <FinanceTeamMemberSideNav />;\n      // }\n      if (user_role == \"Whole Sale Buyer\") {\n        return <WholesaleBuyerNav />;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  renderDashboard() {\n    const user_role = localStorage.getItem(\"user_role\");\n    const is_login = localStorage.getItem(\"is_login\");\n    if (is_login != \"1\") {\n      return (\n        <div>\n          <Route path=\"/\" exact component={login} />\n        </div>\n      );\n    } else {\n      //   if (user_role == \"employee\") {\n      //     return (\n      //       <div>\n      //         <Route path=\"/\" exact component={EmployeeDashboard} />\n      //         <Route path=\"/assignments\" exact component={Assignments} />\n      //         <Route path=\"/calendar\" exact component={Calendar} />\n      //         <Route path=\"/profile\" exact component={Profile} />\n      //         <Route path=\"/payments\" exact component={Payments} />\n      //         <Route path=\"/leave\" exact component={Leave} />\n      //       </div>\n      //     );\n      //   }\n      // if (user_role == \"Super Admin\") {\n      //   return (\n      //     <div>\n      //       <Route path=\"/\" exact component={SuperAdminDashboard} />\n      //       <Route path=\"/basic-info\" exact component={BasicInfo} />\n      //       <Route path=\"/user-roles\" exact component={UserRoles} />\n      //       <Route path=\"/user-list\" exact component={UserList} />\n      //       <Route path=\"/categories\" exact component={Categories} />\n      //       <Route path=\"/product-codes\" exact component={ProductCodes} />\n      //       <Route path=\"/metirial-codes\" exact component={MaterialCodes} />\n      //     </div>\n      //   );\n      // }\n      // if (user_role == \"finance team member\") {\n      //   return (\n      //     <div>\n      //       <Route path=\"/bill-types\" exact component={BillType} />\n      //       <Route path=\"/bills\" exact component={Bills} />\n      //     </div>\n      //   );\n      // }\n      if (user_role == \"production team member\") {\n        return (\n          <div>\n            <div>\n              <Route path=\"/\" exact component={ProductionManagerDashboard} />\n              <Route\n                path=\"/add-new-production-round\"\n                exact\n                component={AddNewProductionRound}\n              />\n              <Route\n                path=\"/view-production-rounds\"\n                exact\n                component={VIewNewProductionRound}\n              />\n              <Route\n                path=\"/add-pre-production-round\"\n                exact\n                component={AddPreviousProductionRound}\n              />\n              <Route\n                path=\"/view-preproduction-rounds\"\n                exact\n                component={VIewPreviousProductionRound}\n              />\n              <Route\n                path=\"/view-product-list\"\n                exact\n                component={ViewProductList}\n              />\n              <Route\n                path=\"/add-stock-details\"\n                exact\n                component={AddStockDetails}\n              />\n              <Route\n                path=\"/view-order-details\"\n                exact\n                component={ViewOrderDetails}\n              />\n              <Route path=\"/view-feedback\" exact component={ViewFeedback} />\n            </div>\n          </div>\n        );\n      }\n      // if (user_role == \"stock member\") {\n      //   return (\n      //     <div>\n      //       <div>\n      //         <Route path=\"/\" component={SMDashBoard}></Route>\n      //         <Route path=\"/myprofile\" component={MyProfile}></Route>\n      //         <Route path=\"/items/:id\" component={NewItemForm}></Route>\n      //         <Route path=\"/items\" component={Item}></Route>\n      //         <Route path=\"/itemsrecords\" component={ItemRecord}></Route>\n      //         {/* <Route path=\"/notfound\" component={NotFound}></Route> */}\n      //       </div>\n      //     </div>\n      //   );\n      // }\n      if (user_role == \"Whole Sale Buyer\") {\n        return (\n          <div>\n            <div>\n              <Route path=\"/\" exact component={WholesaleDashboard} />\n              <Route path=\"/add-order\" exact component={ViewStockDetails} />\n              <Route path=\"/add-order-details\" exact component={AddOrder} />\n              <Route path=\"/add-feedback\" exact component={FeedbackPage} />\n              <Route path=\"/return-order\" exact component={ReturnOrder} />\n              <Route\n                path=\"/placed-order\"\n                exact\n                component={ViewPlacedOrderDetails}\n              />\n            </div>\n          </div>\n        );\n      } else {\n        return false;\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderSideNavigation()}\n        {this.renderDashboard()}\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/ProductionManager/AddNewProductionRound.jsx",["205","206","207","208","209"],"import React, { Component } from \"react\";\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport addorder from \"../../pages/assets/addorderpic.png\";\nclass AddNewProductionRound extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      snackbaropen: false,\n      snackbarmsg: \"\",\n      categories: [],\n      validationError: \"\",\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/categories\")\n      .then((result) => {\n        const categories = result.data;\n\n        this.setState({ categories: categories });\n      })\n      .catch((err) => console.log(err.message));\n  }\n  \n  handleSubmit(event, props) {\n    // console.log(event);\n    const isValid = this.validate(event);\n    event.preventDefault();\n    //alert(event.target.name.value);\n\n    if (isValid) {\n      fetch(\"http://localhost:5000/api/newProRound-details\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          username: \"thirnaya\",\n        },\n        body: JSON.stringify({\n          productId: event.target.proId.value,\n          productCategory: event.target.productCategory.value,\n          quantity: event.target.quntity.value,\n          esDays: event.target.estDays.value,\n          esEmployees: event.target.estEmp.value,\n          status: event.target.status.value,\n        }),\n      })\n        .then((res) => res.json())\n        .then(\n          (result) => {\n            console.log(this.state);\n            swal({\n              title: \"New Production Round Details Added Succesfully\",\n              icon: \"success\",\n              button: \"Done\",\n            });\n            setTimeout(\n              function () {\n                window.location.reload();\n              }.bind(this),\n              1500\n            );\n          },\n          (error) => {\n            this.setState({ snackbaropen: true, snackbarmsg: \"Failed\" });\n          }\n        );\n    }\n  }\n  validate() {\n    let validationError = \"\";\n\n    if (!this.state.validationError) {\n      validationError = \"This Field Can Not Be Blank\";\n    }\n\n    if (validationError) {\n      this.setState({ validationError: validationError });\n      return false;\n    }\n\n    return true;\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <h1 className=\"heading\">Add New Production Round Details</h1>\n\n        <div className=\"center\">\n          <img src={addorder} alt=\"leavepic\" />\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-3\"></div>\n\n          <div className=\"col\">\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Group>\n                <Form.Group controlId=\"proId\">\n                  <Form.Label style={{ fontWeight: \"bold\" }}>\n                    Product Id\n                  </Form.Label>\n                  <Form.Control\n                    style={{ border: \"1px solid #050139\" }}\n                    type=\"text\"\n                    name=\"proId\"\n                    required\n                    placeholder=\"Product Id\"\n                  />\n                  <div style={{ background: \"#f8d7da\" }}>\n                    {this.state.validationError}\n                  </div>\n                </Form.Group>\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Product Category\n                </Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  as=\"select\"\n                  required\n                  name=\"productCategory\"\n                >\n                  <div style={{ background: \"#f8d7da\" }}>\n                    {this.state.validationError}\n                  </div>\n                  {this.state.categories.map((i) => (\n                    <option key={i._id}>{i.categoryName}</option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"quntity\">\n                <Form.Label style={{ fontWeight: \"bold\" }}>Quantity</Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  type=\"text\"\n                  name=\"quntity\"\n                  required\n                  placeholder=\"Quantity\"\n                />\n                <div style={{ background: \"#f8d7da\" }}>\n                  {this.state.validationError}\n                </div>\n              </Form.Group>\n              <Form.Group controlId=\"estDays\">\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Estimated Days\n                </Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  type=\"text\"\n                  name=\"estDays\"\n                  required\n                  placeholder=\"Estimated Days\"\n                />\n                <div style={{ background: \"#f8d7da\" }}>\n                  {this.state.validationError}\n                </div>\n              </Form.Group>\n              <Form.Group controlId=\"estEmp\">\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Estimated Employees\n                </Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  type=\"text\"\n                  name=\"estEmp\"\n                  required\n                  placeholder=\"Estimated Employees\"\n                />\n                <div style={{ background: \"#f8d7da\" }}>\n                  {this.state.validationError}\n                </div>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label style={{ fontWeight: \"bold\" }}>Status</Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  as=\"select\"\n                  required\n                  name=\"status\"\n                >\n                  <div style={{ background: \"#f8d7da\" }}>\n                    {this.state.validationError}\n                  </div>\n                  <option selected>Pending</option>\n                  <option>Completed</option>\n                </Form.Control>\n              </Form.Group>\n              <Form.Group>\n                <Button\n                  className=\"my-1\"\n                  style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\n                  type=\"submit\"\n                >\n                  Add Production Round\n                </Button>\n              </Form.Group>\n            </Form>\n          </div>\n\n          <div className=\"col-1\"></div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AddNewProductionRound;\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/ProductionManager/VIewNewProductionRound.jsx",["210","211","212","213"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\nimport { ProductonRoundTable } from \"../../components/ProductionManager/Tabales/ProductonRoundTable\";\nimport SearchBox from \"../../components/ProductionManager/common/searchBox\";\nimport \"./styles.css\";\nimport viewpic from \"../../pages/assets/viewpic2.png\";\n\nclass VIewNewProductionRound extends Component {\n  state = {\n    productionRound: [],\n    addModalShow: false,\n    searchQuery: \"\",\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/newProRound-details\")\n      .then((result) => {\n        const productionRound = result.data;\n\n        this.setState({ productionRound: productionRound });\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  handleSearch = (query) => {\n    this.setState({  \n      searchQuery: query,\n    });\n  };\n\n  filteredData() {\n    const { searchQuery, productionRound } = this.state;\n\n    let filtered = [];\n\n    if (searchQuery) {\n      filtered = productionRound.filter((r) =>\n        r.productCategory.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    } else {\n      filtered = productionRound;\n    }\n\n    return filtered;\n  }\n\n  render() {\n    //take the filtered list\n    let filtered = this.filteredData();\n\n    console.log(filtered);\n\n    let AddModelClose = () => this.setState({ addModalShow: false });\n    return (\n      <React.Fragment>\n        <h1 className=\"heading\">View New Production Round Details</h1>\n\n        <div className=\"center\">\n          <img src={viewpic} alt=\"leavepic\" />\n        </div>\n\n        <div className=\"row\">\n          <div className=\"row\">\n            <div className=\"col-4\"></div>\n            <div className=\"col\">\n              <SearchBox onChange={this.handleSearch} placeHolder=\"Search\" />\n            </div>\n            <div className=\"col-3\"></div>\n          </div>\n          <div className=\"col-10\"></div>\n          <div className=\"col\"></div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-2\"></div>\n          <div className=\"col\">\n            {/**pass the filtered data */}\n            <ProductonRoundTable productionRound={filtered} />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default VIewNewProductionRound;\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/ProductionManager/ProManagerDashboard.jsx",["214","215","216"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\nimport \"../ProductionManager/dashboard.css\";\nimport hello from \"../assets/hello.png\";\nimport clock from \"../assets/clock.png\";\nimport Clock from \"../../components/ProductionManager/common/clock\";\nimport generatePDF from \"../../components/ProductionManager/util/reportGenerator\";\nimport generateacceptedPDF from \"../../components/ProductionManager/util/acceprtedreportGenerator\";\n\nclass Dashboard extends Component {\n  state = {\n    factoryDetails: [],\n    user_name: \"\",\n    addModalShow: true,\n    productionRound: [],\n    acceptedRounds: [],\n    rejectedRounds: [],\n    orderCount: [],\n    productionRoundCount: [],\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/newProRound-details\")\n      .then((result) => {\n        const productionRound = result.data;\n  \n        this.setState({ productionRound: productionRound });\n      })\n      .catch((err) => console.log(err.message));\n\n    const user_name = localStorage.getItem(\"user_full_name\");\n    this.setState({ user_name: user_name });\n\n    axios\n      .get(\"http://localhost:5000/api/order-details\")\n      .then((result) => {\n        const orders = result.data;\n\n        const accepted = orders.filter((order) => order.status === \"Accepted\");\n        const rejected = orders.filter((order) => order.status === \"Rejected\");\n\n        console.log(accepted);\n        console.log(rejected);\n        this.setState({ acceptedRounds: accepted, rejectedRounds: rejected });\n      })\n      .catch((err) => console.log(err.message));\n\n    axios\n      .get(\"http://localhost:5000/api/order-details\")\n      .then((result) => {\n        const orderCount = result.data;\n\n        this.setState({ orderCount: orderCount });\n      })\n      .catch((err) => console.log(err.message));\n\n    axios\n      .get(\"http://localhost:5000/api/newProRound-details\")\n      .then((result) => {\n        const productionRoundCount = result.data;\n\n        this.setState({ productionRoundCount: productionRoundCount });\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  logout() {\n    localStorage.removeItem(\"user_full_name\");\n    localStorage.removeItem(\"user_email\");\n    localStorage.removeItem(\"is_login\");\n    window.location.reload();\n  }\n\n  render() {\n    const { productionRound, acceptedRounds, rejectedRounds } = this.state;\n    let AddModelClose = () => this.setState({ addModalShow: false });\n    return (\n      <React.Fragment>\n        <ButtonToolbar>\n          {/* <AddFactoryDetailsModal\n                        show={this.state.addModalShow && this.state.factoryDetails.length == 0}\n                        onHide={AddModelClose}\n                    /> */}\n        </ButtonToolbar>\n        <main>\n          <div className=\"main__container\">\n            {/* <!-- MAIN TITLE STARTS HERE --> */}\n\n            <div className=\"main__title\">\n              <img src={hello} alt=\"hello\" />\n              <div className=\"main__greeting\">\n                <h1>Hello, {this.state.user_name}</h1>\n                <p>Welcome to your profile.</p>\n              </div>\n              <button\n                style={{\n                  backgroundColor: \"#7121AD\",\n                  color: \"white\",\n                  width: \"100px\",\n                }}\n                onClick={this.logout}\n              >\n                Log Out\n              </button>\n            </div>\n\n            <div className=\"charts\">\n              <div className=\"charts__left\">\n                <div className=\"charts__left__title\">\n                  <div>\n                    <h1>Date and Time</h1>\n                  </div>\n                  <i className=\"fa fa-usd\" aria-hidden=\"true\"></i>\n                </div>\n                <div className=\"row mt-5\">\n                  <div className=\"col-md-6\">\n                    <img src={clock} alt=\"clock\" />\n                  </div>\n                  <div className=\"col-md-6\">\n                    <Clock />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"charts__right\">\n                <div className=\"charts__right__title\">\n                  <div>\n                    <h1>Report Genaration</h1>\n                  </div>\n                  <i className=\"fa fa-usd\" aria-hidden=\"true\"></i>\n                </div>\n\n                <div className=\"charts__right__cards\">\n                  <div className=\"card1\">\n                    <button onClick={() => generatePDF(productionRound)}>\n                      <h1>Production Round Details Report</h1>\n                    </button>\n                  </div>\n\n                  <div className=\"card2\">\n                    <button onClick={() => generateacceptedPDF(acceptedRounds)}>\n                      <h1>Accepted Order Details Report</h1>\n                    </button>\n                  </div>\n\n                  <div className=\"card3\">\n                    <button onClick={() => generateacceptedPDF(rejectedRounds)}>\n                      <h1>Rejected Order Details Report</h1>\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* <!-- MAIN TITLE ENDS HERE --> */}\n\n            {/* <!-- MAIN CARDS STARTS HERE --> */}\n            <div className=\"main__cards\">\n              <div className=\"carda\">\n                <div className=\"card_inner\">\n                  <p className=\"text-primary-p\">Number Of Orders</p>\n                  <span className=\"font-bold text-title\">\n                    {this.state.orderCount.length}\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"cardd\">\n                <div className=\"card_inner\">\n                  <p className=\"text-primary-p\">No Of Production Rounds</p>\n                  <span className=\"font-bold text-title\">\n                    {this.state.productionRoundCount.length}\n                  </span>\n                </div>\n              </div>\n            </div>\n            {/* <!-- MAIN CARDS ENDS HERE --> */}\n\n            {/* <!-- CHARTS STARTS HERE --> */}\n\n            {/* <!-- CHARTS ENDS HERE --> */}\n          </div>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Dashboard;\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/ProductionManager/ViewProductList.jsx",["217","218","219"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\nimport { ProductListTable } from \"../../components/ProductionManager/Tabales/ProductListTable\";\nimport \"./styles.css\";\nimport viewpic from \"../../pages/assets/viewpic.png\";\n\nclass ViewProductList extends Component {\n  state = {\n    ProductList: [],\n    addModalShow: false,\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/product-code/\")\n      .then((result) => {\n        const ProductList = result.data;\n\n        this.setState({ ProductList: ProductList });\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1 className=\"heading\">View Product List</h1>\n  \n        <div className=\"center\">\n          <img src={viewpic} alt=\"leavepic\" />\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-2\"></div>\n          <div className=\"col\">\n            <ProductListTable ProductList={this.state.ProductList} />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ViewProductList;\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/ProductionManager/AddPreviousProductionRound.jsx",["220","221","222","223","224"],"import React, { Component } from \"react\";\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport addorder from \"../../pages/assets/addorderpic.png\";\nclass AddPreviousProductionRound extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { snackbaropen: false, snackbarmsg: \"\", categories: [] };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/categories\")\n      .then((result) => {\n        const categories = result.data;\n\n        this.setState({ categories: categories });\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  handleSubmit(event, props) {\n    console.log(event);\n    const isValid = this.validate();\n    event.preventDefault();\n    //alert(event.target.name.value);\n\n    if (isValid) {\n      fetch(\"http://localhost:5000/api/prevProRound-details\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          username: \"thirnaya\",\n        },\n        body: JSON.stringify({\n          productId: event.target.proId.value,\n          productCategory: event.target.productCategory.value,\n          quantity: event.target.quntity.value,\n          completedQuantity: event.target.comquantity.value,\n          remainingQuantity: event.target.remquantity.value,\n          status: event.target.status.value,\n        }),\n      })\n        .then((res) => res.json())\n        .then(\n          (result) => {\n            swal({\n              title: \"Previous Production Round Details Added Succesfully\",\n              icon: \"success\",\n              button: \"Done\",\n            });\n            setTimeout(\n              function () {\n                window.location.reload();\n              }.bind(this),\n              1500\n            );\n          },\n          (error) => {\n            this.setState({ snackbaropen: true, snackbarmsg: \"Failed\" });\n          }\n        );\n    }\n  }\n\n  validate() {\n    let validationError = \"\";\n\n    if (!this.state.validationError) {\n      validationError = \"This Field Cannot Be Blank\";\n    }\n\n    if (validationError) {\n      this.setState({ validationError: validationError });\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1 className=\"heading\">Add Previous Production Round Details</h1>\n\n        <div className=\"center\">\n          <img src={addorder} alt=\"leavepic\" />\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-3\"></div>\n\n          <div className=\"col\">\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Group>\n                <Form.Group controlId=\"proId\">\n                  <Form.Label style={{ fontWeight: \"bold\" }}>\n                    Product Id\n                  </Form.Label>\n                  <Form.Control\n                    style={{ border: \"1px solid #050139\" }}\n                    type=\"text\"\n                    name=\"proId\"\n                    placeholder=\"Product Id\"\n                    required\n                  />\n                  <div style={{ background: \"#f8d7da\" }}>\n                    {this.state.validationError}\n                  </div>\n                </Form.Group>\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Product Category\n                </Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  as=\"select\"\n                  name=\"productCategory\"\n                  required\n                >\n                  <div style={{ background: \"#f8d7da\" }}>\n                    {this.state.validationError}\n                  </div>\n                  {this.state.categories.map((i) => (\n                    <option key={i._id}>{i.categoryName}</option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"quntity\">\n                <Form.Label style={{ fontWeight: \"bold\" }}>Quantity</Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  type=\"text\"\n                  name=\"quntity\"\n                  placeholder=\"Quantity\"\n                  required\n                />\n                <div style={{ background: \"#f8d7da\" }}>\n                  {this.state.validationError}\n                </div>\n              </Form.Group>\n              <Form.Group controlId=\"estDays\">\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Compeleted Quatity\n                </Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  type=\"text\"\n                  name=\"comquantity\"\n                  placeholder=\"Compeleted Quantity\"\n                  required\n                />\n                <div style={{ background: \"#f8d7da\" }}>\n                  {this.state.validationError}\n                </div>\n              </Form.Group>\n              <Form.Group controlId=\"estEmp\">\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Remaining Quantity\n                </Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  type=\"text\"\n                  name=\"remquantity\"\n                  placeholder=\"Remaining Quantity\"\n                  required\n                />\n                <div style={{ background: \"#f8d7da\" }}>\n                  {this.state.validationError}\n                </div>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label style={{ fontWeight: \"bold\" }}>Status</Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  as=\"select\"\n                  name=\"status\"\n                  required\n                >\n                  <div style={{ background: \"#f8d7da\" }}>\n                    {this.state.validationError}\n                  </div>\n                  <option selected>Pending</option>\n                  <option>Completed</option>\n                </Form.Control>\n              </Form.Group>\n              <Form.Group>\n                <Button\n                  className=\"my-1\"\n                  style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\n                  type=\"submit\"\n                >\n                  Add Details\n                </Button>\n              </Form.Group>\n            </Form>\n          </div>\n\n          <div className=\"col-1\"></div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AddPreviousProductionRound;\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/ProductionManager/AddStockDetails.jsx",["225","226","227","228","229"],"import React, { Component } from \"react\";\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport addorder from \"../../pages/assets/addorderpic.png\";\n\nclass AddStockDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { snackbaropen: false, snackbarmsg: \"\", categories: [] };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/categories\")\n      .then((result) => {\n        const categories = result.data;\n\n        this.setState({ categories: categories });\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  handleSubmit(event, props) {\n    console.log(event);\n    const isValid = this.validate();\n    event.preventDefault();\n    //alert(event.target.name.value);\n\n    if (isValid) {\n      fetch(\"http://localhost:5000/api/proStock-details\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          username: \"thirnaya\",\n        },\n        body: JSON.stringify({\n          productId: event.target.proId.value,\n          productCategory: event.target.productCategory.value,\n          //productImage: event.target.filename.value,\n          instock: event.target.instock.value,\n          quantity: event.target.quantity.value,\n          price: event.target.price.value,\n        }),\n      })\n        .then((res) => res.json())\n        .then(\n          (result) => {\n            swal({\n              title: \"Order Added Succesfully\",\n              icon: \"success\",\n              button: \"Done\",\n            });\n            setTimeout(\n              function () {\n                window.location.reload();\n              }.bind(this),\n              1500\n            );\n          },\n          (error) => {\n            this.setState({ snackbaropen: true, snackbarmsg: \"Failed\" });\n          }\n        );\n    }\n  }\n\n  validate() {\n    let validationError = \"\";\n\n    if (!this.state.validationError) {\n      validationError = \"This Field Cannot Be Blank\";\n    }\n\n    if (validationError) {\n      this.setState({ validationError: validationError });\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1 className=\"heading\">Add Stock Details</h1>\n\n        <div className=\"center\">\n          <img src={addorder} alt=\"leavepic\" />\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-3\"></div>\n\n          <div className=\"col\">\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Group>\n                <Form.Group controlId=\"proId\">\n                  <Form.Label style={{ fontWeight: \"bold\" }}>\n                    Product Id\n                  </Form.Label>\n                  <Form.Control\n                    style={{ border: \"1px solid #050139\" }}\n                    type=\"text\"\n                    name=\"proId\"\n                    placeholder=\"Product Id\"\n                    required\n                  />\n                  <div style={{ background: \"#f8d7da\" }}>\n                    {this.state.validationError}\n                  </div>\n                </Form.Group>\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Product Category\n                </Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  as=\"select\"\n                  name=\"productCategory\"\n                  required\n                >\n                  <div style={{ background: \"#f8d7da\" }}>\n                    {this.state.validationError}\n                  </div>\n                  {this.state.categories.map((i) => (\n                    <option key={i._id}>{i.categoryName}</option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label style={{ fontWeight: \"bold\" }}>Instock</Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  as=\"select\"\n                  name=\"instock\"\n                  required\n                >\n                  <div style={{ background: \"#f8d7da\" }}>\n                    {this.state.validationError}\n                  </div>\n                  <option selected>Instock</option>\n                  <option>Out Of Stock</option>\n                </Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"quantity\">\n                <Form.Label style={{ fontWeight: \"bold\" }}>Quantity</Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  type=\"text\"\n                  name=\"quantity\"\n                  placeholder=\"Quantity\"\n                  required\n                />\n                <div style={{ background: \"#f8d7da\" }}>\n                  {this.state.validationError}\n                </div>\n              </Form.Group>\n\n              <Form.Group controlId=\"price\">\n                <Form.Label style={{ fontWeight: \"bold\" }}>Price</Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  type=\"text\"\n                  name=\"price\"\n                  placeholder=\"Price\"\n                  required\n                />\n                <div style={{ background: \"#f8d7da\" }}>\n                  {this.state.validationError}\n                </div>\n              </Form.Group>\n\n              <Form.Group>\n                <Button\n                  className=\"my-1\"\n                  style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\n                  type=\"submit\"\n                >\n                  Add Stock Details\n                </Button>\n              </Form.Group>\n            </Form>\n          </div>\n\n          <div className=\"col-1\"></div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AddStockDetails;\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/ProductionManager/VIewPreviousProductionRound.jsx",["230","231","232","233"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\nimport { PreviousProductionRoundTable } from \"../../components/ProductionManager/Tabales/PreviousProductionRoundTable\";\nimport SearchBox from \"../../components/ProductionManager/common/searchBox\";\nimport \"./styles.css\";\nimport viewpic from \"../../pages/assets/viewpic4.png\";\n\nclass VIewPreviousProductionRound extends Component {\n  state = {\n    preproductionRound: [],\n    addModalShow: false,\n    searchQuery: \"\",\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/prevProRound-details\")\n      .then((result) => {\n        const preproductionRound = result.data;\n\n        this.setState({ preproductionRound: preproductionRound });\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  handleSearch = (query) => {\n    this.setState({\n      searchQuery: query,\n    });\n  };\n\n  filteredData() {\n    const { searchQuery, preproductionRound } = this.state;\n\n    let filtered = [];\n\n    if (searchQuery) {\n      filtered = preproductionRound.filter((r) =>\n        r.productCategory.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    } else {\n      filtered = preproductionRound;\n    }\n\n    return filtered;\n  }\n\n  render() {\n    //take the filtered list\n    let filtered = this.filteredData();\n\n    console.log(filtered);\n\n    let AddModelClose = () => this.setState({ addModalShow: false });\n    return (\n      <React.Fragment>\n        <h1 className=\"heading\">View Previous Production Round Details</h1>\n\n        <div className=\"center\">\n          <img src={viewpic} alt=\"leavepic\" />\n        </div>\n\n        <div className=\"row\">\n          <div className=\"row\">\n            <div className=\"col-4\"></div>\n            <div className=\"col\">\n              <SearchBox onChange={this.handleSearch} placeHolder=\"Search\" />\n            </div>\n            <div className=\"col-3\"></div>\n          </div>\n          <div className=\"col-10\"></div>\n          <div className=\"col\"></div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-2\"></div>\n          <div className=\"col\">\n            {/**pass the filtered data */}\n            <PreviousProductionRoundTable preproductionRound={filtered} />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default VIewPreviousProductionRound;\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/ProductionManager/ViewOrderDetails.jsx",["234","235","236","237"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\nimport { OrderDetailsTable } from \"../../components/ProductionManager/Tabales/OrderDetailsTable\";\nimport SearchBox from \"../../components/ProductionManager/common/searchBox\";\nimport \"./styles.css\";\nimport viewpic from \"../../pages/assets/viewpic.png\";\n\nclass ViewOrderDetails extends Component {\n  state = {\n    orderDetails: [],\n    addModalShow: false,\n    searchQuery: \"\",\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/order-details\")\n      .then((result) => {\n        const orderDetails = result.data;\n\n        this.setState({ orderDetails: orderDetails });\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  handleSearch = (query) => {\n    this.setState({\n      searchQuery: query,\n    });\n  };\n\n  filteredData() {\n    const { searchQuery, orderDetails } = this.state;\n\n    let filtered = [];\n\n    if (searchQuery) {\n      filtered = orderDetails.filter((r) =>\n        r.productCategory.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    } else {\n      filtered = orderDetails;\n    }\n\n    return filtered;\n  }\n\n  render() {\n    //take the filtered list\n    let filtered = this.filteredData();\n\n    console.log(filtered);\n\n    let AddModelClose = () => this.setState({ addModalShow: false });\n    return (\n      <React.Fragment>\n        <h1 className=\"heading\">View Order Details</h1>\n\n        <div className=\"center\">\n          <img src={viewpic} alt=\"leavepic\" />\n        </div>\n\n        <div className=\"row\">\n          <div className=\"row\">\n            <div className=\"col-4\"></div>\n            <div className=\"col\">\n              <SearchBox onChange={this.handleSearch} placeHolder=\"Search\" />\n            </div>\n            <div className=\"col-3\"></div>\n          </div>\n          <div className=\"col-10\"></div>\n          <div className=\"col\"></div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-2\"></div>\n          <div className=\"col\">\n            {/**pass the filtered data */}\n            <OrderDetailsTable orderDetails={filtered} />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ViewOrderDetails;\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/ProductionManager/ViewFeedback.jsx",["238","239","240"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\nimport { FeedbackTable } from \"../../components/ProductionManager/Tabales/FeedbackTable\";\nimport \"./styles.css\";\nimport viewpic from \"../../pages/assets/viewpic.png\";\n\nclass ViewFeedback extends Component {\n  state = {\n    FeedbackList: [],\n    addModalShow: false,\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/apifeedback-details/\")\n      .then((result) => {\n        const FeedbackList = result.data;\n\n        this.setState({ FeedbackList: FeedbackList });\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1 className=\"heading\">View Feedback List</h1>\n\n        <div className=\"center\">\n          <img src={viewpic} alt=\"leavepic\" />\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-2\"></div>\n          <div className=\"col\">\n            <FeedbackTable FeedbackList={this.state.FeedbackList} />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ViewFeedback;\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/SuperAdmin/login.jsx",["241","242","243"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport img1 from \"./fac1.png\";\nimport img2 from \"./signIn1.webp\";\n\nclass login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      addModalShow: false,\n    };\n    this.login = this.login.bind(this);\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/login\")\n      .then((result) => {\n        const user = result.data;\n\n        this.setState({ users: user });\n        // console.log(this.state.users.length);\n      })\n      .catch((err) => console.log(err.message));     \n  }\n\n  login(event) {\n    this.state.users.forEach((element) => {\n      if (element.email == event.target.email.value) {\n        const password = element.password;\n        if (password == event.target.password.value) {\n          const user_role = element.userRole;\n          localStorage.setItem(\"user_role\", user_role);\n          const user_full_name = element.fullName;\n          localStorage.setItem(\"user_full_name\", user_full_name);\n          localStorage.setItem(\"user_email\", element.email);\n          localStorage.setItem(\"is_login\", \"1\");\n          //   if(user_role == 'Super Admin'){\n          //       this.props.history.push('/super-admin-dashboard');\n          //       window.location.reload();\n          //   }\n          //   if(user_role == 'employee'){\n          //       this.props.history.push('/employee-dashboard');\n          //       window.location.reload();\n          //   }\n          //   if(user_role == 'production team member'){\n          //     this.props.history.push('/production-manager-dashboard');\n          //     window.location.reload();\n          // }\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"row mt-5\">\n          <div className=\"col-md-4\">\n            <img src={img1} alt=\"img1\" />\n          </div>\n          <div className=\"col-md-4\">\n            <form onSubmit={this.login} style={{ marginTop: \"150px\" }}>\n              <h3>Sign In</h3>\n\n              <div className=\"form-group\">\n                <label>Email address</label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  placeholder=\"Enter email\"\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  placeholder=\"Enter password\"\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <div className=\"custom-control custom-checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"custom-control-input\"\n                    id=\"customCheck1\"\n                  />\n                  <label\n                    className=\"custom-control-label\"\n                    htmlFor=\"customCheck1\"\n                  >\n                    Remember me\n                  </label>\n                </div>\n              </div>\n\n              <button\n                style={{\n                  backgroundColor: \"#7121AD\",\n                  color: \"white\",\n                  width: \"330px\",\n                }}\n                type=\"submit\"\n                className=\"btn btn-primary btn-block\"\n              >\n                Log In\n              </button>\n              <p className=\"forgot-password text-right\">\n                Forgot <a href=\"#\">password?</a>\n              </p>\n            </form>\n          </div>\n          <div className=\"col-md-4\">\n            <img src={img2} alt=\"img1\" style={{ marginTop: \"450px\" }} />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default login;\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/WholesaleBuyer/wholesalBuyerDashboard.jsx",["244","245","246"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\nimport \"../WholesaleBuyer/dashboard.css\";\nimport hello from \"../assets/hello.png\";\nimport clock from \"../assets/clock.png\";\nimport Clock from \"../../components/ProductionManager/common/clock\";\nimport generateacceptedPDF from \"../../components/WholeSaleBuyer/util/acceprtedreportGenerator\";\nclass Dashboard extends Component {\n  state = {\n    user_name: \"\",\n    addModalShow: true,\n    factoryDetails: [],\n    orderCount: [],\n    acceptedRounds: [],\n    rejectedRounds: [],\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/factory-details\")\n      .then((result) => {\n        const factoryDetails = result.data;\n\n        this.setState({ factoryDetails: factoryDetails });\n      })\n      .catch((err) => console.log(err.message));\n\n    const user_name = localStorage.getItem(\"user_full_name\");\n    this.setState({ user_name: user_name });\n\n    axios\n      .get(\"http://localhost:5000/api/order-details\")\n      .then((result) => {\n        const orders = result.data;\n\n        const accepted = orders.filter((order) => order.status === \"Accepted\");\n        const rejected = orders.filter((order) => order.status === \"Rejected\");\n\n        console.log(accepted);\n        console.log(rejected);\n        this.setState({ acceptedRounds: accepted, rejectedRounds: rejected });\n      })\n      .catch((err) => console.log(err.message));\n\n    axios\n      .get(\"http://localhost:5000/api/order-details\")\n      .then((result) => {\n        const orderCount = result.data;\n\n        this.setState({ orderCount: orderCount });\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  logout() {\n    localStorage.removeItem(\"user_full_name\");\n    localStorage.removeItem(\"user_email\");\n    localStorage.removeItem(\"is_login\");\n    window.location.reload();\n  }\n\n  render() {\n    const { acceptedRounds, rejectedRounds } = this.state;\n    let AddModelClose = () => this.setState({ addModalShow: false });\n    return (\n      <React.Fragment>\n        <ButtonToolbar>\n          {/* <AddFactoryDetailsModal\n                        show={this.state.addModalShow && this.state.factoryDetails.length == 0}\n                        onHide={AddModelClose}\n                    /> */}\n        </ButtonToolbar>\n        <main>\n          <div className=\"main__container\">\n            {/* <!-- MAIN TITLE STARTS HERE --> */}\n\n            <div className=\"main__title\">\n              <img src={hello} alt=\"hello\" />\n              <div className=\"main__greeting\">\n                <h1>Hello, {this.state.user_name}</h1>\n                <p>Welcome to your profile.</p>\n              </div>\n              <button\n                style={{\n                  backgroundColor: \"#7121AD\",\n                  color: \"white\",\n                  width: \"100px\",\n                }}\n                onClick={this.logout}\n              >\n                Log Out\n              </button>\n            </div>\n\n            <div className=\"charts\">\n              <div className=\"charts__left\">\n                <div className=\"charts__left__title\">\n                  <div>\n                    <h1>Date and Time</h1>\n                  </div>\n                  <i className=\"fa fa-usd\" aria-hidden=\"true\"></i>\n                </div>\n                <div className=\"row mt-5\">\n                  <div className=\"col-md-6\">\n                    <img src={clock} alt=\"clock\" />\n                  </div>\n                  <div className=\"col-md-6\">\n                    <Clock />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"charts__right\">\n                <div className=\"charts__right__title\">\n                  <div>\n                    <h1>Report Genaration</h1>\n                  </div>\n                  <i className=\"fa fa-usd\" aria-hidden=\"true\"></i>\n                </div>\n\n                <div className=\"charts__right__cards\">\n                  <div className=\"card1\">\n                    <button onClick={() => generateacceptedPDF(acceptedRounds)}>\n                      <h1>Order Details Report</h1>\n                    </button>\n                  </div>\n\n                  <div className=\"card2\">\n                    <button onClick={() => generateacceptedPDF(rejectedRounds)}>\n                      <h1>Rejected Order Details Report</h1>\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* <!-- MAIN TITLE ENDS HERE --> */}\n\n            {/* <!-- MAIN CARDS STARTS HERE --> */}\n            <div className=\"main__cards\">\n              <div className=\"carda\">\n                <div className=\"card_inner\">\n                  <p className=\"text-primary-p\">Number Of Pending Orders</p>\n                  <span className=\"font-bold text-title\">\n                    {this.state.orderCount.length}\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"cardd\">\n                <div className=\"card_inner\">\n                  <p className=\"text-primary-p\">No Of Rejected Orders</p>\n                  <span className=\"font-bold text-title\">\n                    {this.state.orderCount.length}\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"cardd\">\n                <div className=\"card_inner\">\n                  <p className=\"text-primary-p\">No Of Pending Orders</p>\n                  <span className=\"font-bold text-title\">\n                    {this.state.orderCount.length}\n                  </span>\n                </div>\n              </div>\n            </div>\n            {/* <!-- MAIN CARDS ENDS HERE --> */}\n\n            {/* <!-- CHARTS STARTS HERE --> */}\n\n            {/* <!-- CHARTS ENDS HERE --> */}\n          </div>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Dashboard;\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/WholesaleBuyer/FeedbackPage.jsx",["247","248","249","250","251"],"import React, { Component } from \"react\";\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport addorder from \"../../pages/assets/addorderpic.png\";\n\nclass FeedbackPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { snackbaropen: false, snackbarmsg: \"\", categories: [] };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/categories\")\n      .then((result) => {\n        const categories = result.data;\n\n        this.setState({ categories: categories });\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  handleSubmit(event, props) {\n    console.log(event);\n    const isValid = this.validate();\n    event.preventDefault();\n    //alert(event.target.name.value);\n\n    if (isValid) {\n      fetch(\"http://localhost:5000/api/feedback-details\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          username: \"thirnaya\",\n        },\n        body: JSON.stringify({\n          email: event.target.email.value,\n          mobileNumber: event.target.mobileNumber.value,\n          feedback: event.target.feedback.value,\n        }),\n      })\n        .then((res) => res.json())\n        .then(\n          (result) => {\n            swal({\n              title: \"New Production Round Details Added Succesfully\",\n              icon: \"success\",\n              button: \"Done\",\n            });\n            setTimeout(\n              function () {\n                window.location.reload();\n              }.bind(this),\n              1500\n            );\n          },\n          (error) => {\n            this.setState({ snackbaropen: true, snackbarmsg: \"Failed\" });\n          }\n        );\n    }\n  }\n\n  validate() {\n    let validationError = \"\";\n\n    if (!this.state.validationError) {\n      validationError = \"This Field Cannot Be Blank\";\n    }\n\n    if (validationError) {\n      this.setState({ validationError: validationError });\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1 className=\"heading\">Add Feedback</h1>\n\n        <div className=\"center\">\n          <img src={addorder} alt=\"leavepic\" />\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-3\"></div>\n\n          <div className=\"col\">\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Group controlId=\"email\">\n                <Form.Label style={{ fontWeight: \"bold\" }}>Email</Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  required\n                />\n                <div style={{ background: \"#f8d7da\" }}>\n                  {this.state.validationError}\n                </div>\n              </Form.Group>\n\n              <Form.Group controlId=\"mobileNumber\">\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Mobile Number\n                </Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  type=\"text\"\n                  name=\"mobileNumber\"\n                  placeholder=\"Mobile Number\"\n                  required\n                />\n                <div style={{ background: \"#f8d7da\" }}>\n                  {this.state.validationError}\n                </div>\n              </Form.Group>\n              <Form.Group controlId=\"feedback\">\n                <Form.Label style={{ fontWeight: \"bold\" }}>Feedback</Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  type=\"text\"\n                  name=\"feedback\"\n                  placeholder=\"Feedback\"\n                  required\n                />\n                <div style={{ background: \"#f8d7da\" }}>\n                  {this.state.validationError}\n                </div>\n              </Form.Group>\n\n              <Form.Group>\n                <Button\n                  className=\"my-1\"\n                  style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\n                  type=\"submit\"\n                >\n                  Add Feedback\n                </Button>\n              </Form.Group>\n            </Form>\n          </div>\n\n          <div className=\"col-1\"></div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default FeedbackPage;\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/WholesaleBuyer/ViewStockDetails.jsx",["252","253","254"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\nimport { ProductStockTable } from \"../../components/WholeSaleBuyer/Tabales/ProductStockTable\";\nimport SearchBox from \"../../components/WholeSaleBuyer/common/searchBox\";\nimport \"./styles.css\";\nimport viewpic from \"../../pages/assets/viewpic.png\";\n\nclass ViewStockDetails extends Component {\n  state = {\n    ProductList: [],\n    addModalShow: false,\n    searchQuery: \"\",\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/proStock-details\")\n      .then((result) => {\n        const ProductList = result.data;\n\n        this.setState({ ProductList: ProductList });\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  handleSearch = (query) => {\n    this.setState({\n      searchQuery: query,\n    });\n  };\n\n  filteredData() {\n    const { searchQuery, ProductList } = this.state;\n\n    let filtered = [];\n\n    if (searchQuery) {\n      filtered = ProductList.filter((r) =>\n        r.productCategory.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    } else {\n      filtered = ProductList;\n    }\n\n    return filtered;\n  }\n\n  render() {\n    //take the filtered list\n    let filtered = this.filteredData();\n\n    console.log(filtered);\n\n    return (\n      <React.Fragment>\n        <h1 className=\"heading\">View Product List</h1>\n\n        <div className=\"center\">\n          <img src={viewpic} alt=\"leavepic\" />\n        </div>\n\n        <div className=\"row\">\n          <div className=\"row\">\n            <div className=\"col-4\"></div>\n            <div className=\"col\">\n              <SearchBox onChange={this.handleSearch} placeHolder=\"Search\" />\n            </div>\n            <div className=\"col-3\"></div>\n          </div>\n          <div className=\"col-10\"></div>\n          <div className=\"col\"></div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-2\"></div>\n          <div className=\"col\">\n            <ProductStockTable ProductList={filtered} />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ViewStockDetails;\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/WholesaleBuyer/ReturnOrder.jsx",["255","256","257","258","259"],"import React, { Component } from \"react\";\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport addorder from \"../../pages/assets/addorderpic.png\";\n\nclass ReturnOrder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { snackbaropen: false, snackbarmsg: \"\", categories: [] };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/categories\")\n      .then((result) => {\n        const categories = result.data;\n\n        this.setState({ categories: categories });\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  handleSubmit(event, props) {\n    console.log(event);\n    const isValid = this.validate();\n    event.preventDefault();\n    //alert(event.target.name.value);\n\n    if (isValid) {\n      fetch(\"http://localhost:5000/api/return-order-details\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          username: \"thirnaya\",\n        },\n        body: JSON.stringify({\n          orderId: event.target.orderId.value,\n          email: event.target.email.value,\n          returnReason: event.target.returnReason.value,\n        }),\n      })\n        .then((res) => res.json())\n        .then(\n          (result) => {\n            swal({\n              title: \"New Production Round Details Added Succesfully\",\n              icon: \"success\",\n              button: \"Done\",\n            });\n            setTimeout(\n              function () {\n                window.location.reload();\n              }.bind(this),\n              1500\n            );\n          },\n          (error) => {\n            this.setState({ snackbaropen: true, snackbarmsg: \"Failed\" });\n          }\n        );\n    }\n  }\n\n  validate() {\n    let validationError = \"\";\n\n    if (!this.state.validationError) {\n      validationError = \"This Field Cannot Be Blank\";\n    }\n\n    if (validationError) {\n      this.setState({ validationError: validationError });\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1 className=\"heading\">Return An Order</h1>\n\n        <div className=\"center\">\n          <img src={addorder} alt=\"leavepic\" />\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-3\"></div>\n\n          <div className=\"col\">\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Group controlId=\"orderId\">\n                <Form.Label style={{ fontWeight: \"bold\" }}>Order Id</Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  type=\"text\"\n                  name=\"orderId\"\n                  placeholder=\"Order Id\"\n                />\n                <div style={{ background: \"#f8d7da\" }}>\n                  {this.state.validationError}\n                </div>\n              </Form.Group>\n\n              <Form.Group controlId=\"email\">\n                <Form.Label style={{ fontWeight: \"bold\" }}>Email</Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                />\n                <div style={{ background: \"#f8d7da\" }}>\n                  {this.state.validationError}\n                </div>\n              </Form.Group>\n              <Form.Group controlId=\"returnReason\">\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Reason To Return\n                </Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  type=\"text\"\n                  name=\"returnReason\"\n                  placeholder=\"Reason To Return\"\n                />\n                <div style={{ background: \"#f8d7da\" }}>\n                  {this.state.validationError}\n                </div>\n              </Form.Group>\n\n              <Form.Group>\n                <Button\n                  className=\"my-1\"\n                  style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\n                  type=\"submit\"\n                >\n                  Add Details\n                </Button>\n              </Form.Group>\n            </Form>\n          </div>\n\n          <div className=\"col-1\"></div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ReturnOrder;\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/WholesaleBuyer/ViewPlacedOrderDetails.jsx",["260","261","262","263"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\nimport { OrderDetailsTable } from \"../../components/WholeSaleBuyer/Tabales/OrderDetailsTable\";\nimport SearchBox from \"../../components/WholeSaleBuyer/common/searchBox\";\nimport \"./styles.css\";\nimport viewpic from \"../../pages/assets/viewpic.png\";\n\nclass ViewPlacedOrderDetails extends Component {\n  state = {\n    orderDetails: [],\n    addModalShow: false,\n    searchQuery: \"\",\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/order-details\")\n      .then((result) => {\n        const orderDetails = result.data;\n\n        this.setState({ orderDetails: orderDetails });\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  handleSearch = (query) => {\n    this.setState({\n      searchQuery: query,\n    });\n  };\n\n  filteredData() {\n    const { searchQuery, orderDetails } = this.state;\n\n    let filtered = [];\n\n    if (searchQuery) {\n      filtered = orderDetails.filter((r) =>\n        r.productCategory.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    } else {\n      filtered = orderDetails;\n    }\n\n    return filtered;\n  }\n\n  render() {\n    //take the filtered list\n    let filtered = this.filteredData();\n\n    console.log(filtered);\n\n    let AddModelClose = () => this.setState({ addModalShow: false });\n    return (\n      <React.Fragment>\n        <h1 className=\"heading\">View Order Details</h1>\n\n        <div className=\"center\">\n          <img src={viewpic} alt=\"leavepic\" />\n        </div>\n\n        <div className=\"row\">\n          <div className=\"row\">\n            <div className=\"col-4\"></div>\n            <div className=\"col\">\n              <SearchBox onChange={this.handleSearch} placeHolder=\"Search\" />\n            </div>\n            <div className=\"col-3\"></div>\n          </div>\n          <div className=\"col-10\"></div>\n          <div className=\"col\"></div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-2\"></div>\n          <div className=\"col\">\n            {/**pass the filtered data */}\n            <OrderDetailsTable orderDetails={filtered} />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ViewPlacedOrderDetails;\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/pages/WholesaleBuyer/AddOrder.jsx",["264","265","266","267","268"],"import React, { Component } from \"react\";\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport addorder from \"../../pages/assets/addorderpic.png\";\n\nclass AddOrder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { snackbaropen: false, snackbarmsg: \"\", categories: [] };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/categories\")\n      .then((result) => {\n        const categories = result.data;\n\n        this.setState({ categories: categories });\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  handleSubmit(event, props) {\n    console.log(event);\n    const isValid = this.validate();\n    event.preventDefault();\n    //alert(event.target.name.value);\n\n    if (isValid) {\n      fetch(\"http://localhost:5000/api/order-details\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          username: \"thirnaya\",\n        },\n        body: JSON.stringify({\n          orderId: event.target.orderId.value,\n          productCategory: event.target.productCategory.value,\n          buyerName: event.target.buyerName.value,\n          email: event.target.email.value,\n          quantity: event.target.quantity.value,\n          paymentMethode: event.target.paymentMethode.value,\n          status: event.target.status.value,\n        }),\n      })\n        .then((res) => res.json())\n        .then(\n          (result) => {\n            swal({\n              title: \"New Production Round Details Added Succesfully\",\n              icon: \"success\",\n              button: \"Done\",\n            });\n            setTimeout(\n              function () {\n                window.location.reload();\n              }.bind(this),\n              1500\n            );\n          },\n          (error) => {\n            this.setState({ snackbaropen: true, snackbarmsg: \"Failed\" });\n          }\n        );\n    }\n  }\n\n  validate() {\n    let validationError = \"\";\n\n    if (!this.state.validationError) {\n      validationError = \"This Field Cannot Be Blank\";\n    }\n\n    if (validationError) {\n      this.setState({ validationError: validationError });\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1 className=\"heading\">Add Order Details</h1>\n\n        <div className=\"center\">\n          <img src={addorder} alt=\"leavepic\" />\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-3\"></div>\n\n          <div className=\"col\">\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Group>\n                <Form.Group controlId=\"orderId\">\n                  <Form.Label style={{ fontWeight: \"bold\" }}>\n                    Order Id\n                  </Form.Label>\n                  <Form.Control\n                    style={{ border: \"1px solid #050139\" }}\n                    type=\"text\"\n                    name=\"orderId\"\n                    placeholder=\" Order Id\"\n                    required\n                  />\n                  <div style={{ background: \"#f8d7da\" }}>\n                    {this.state.validationError}\n                  </div>\n                </Form.Group>\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Product Category\n                </Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  as=\"select\"\n                  name=\"productCategory\"\n                  required\n                >\n                  <div style={{ background: \"#f8d7da\" }}>\n                    {this.state.validationError}\n                  </div>\n                  {this.state.categories.map((i) => (\n                    <option key={i._id}>{i.categoryName}</option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"buyerName\">\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Buyer Name\n                </Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  type=\"text\"\n                  name=\"buyerName\"\n                  placeholder=\"Buyer Name\"\n                  required\n                />\n                <div style={{ background: \"#f8d7da\" }}>\n                  {this.state.validationError}\n                </div>\n              </Form.Group>\n              <Form.Group controlId=\"email\">\n                <Form.Label style={{ fontWeight: \"bold\" }}>Email</Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  required\n                />\n                <div style={{ background: \"#f8d7da\" }}>\n                  {this.state.validationError}\n                </div>\n              </Form.Group>\n              <Form.Group controlId=\"quantity\">\n                <Form.Label style={{ fontWeight: \"bold\" }}>Quantity</Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  type=\"text\"\n                  name=\"quantity\"\n                  placeholder=\"Quantity\"\n                  required\n                />\n                <div style={{ background: \"#f8d7da\" }}>\n                  {this.state.validationError}\n                </div>\n              </Form.Group>\n\n              <Form.Group controlId=\"paymentMethode\">\n                <Form.Label style={{ fontWeight: \"bold\" }}>\n                  Payment Methode\n                </Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  type=\"text\"\n                  name=\"paymentMethode\"\n                  placeholder=\"Payment Methode\"\n                  required\n                />\n                <div style={{ background: \"#f8d7da\" }}>\n                  {this.state.validationError}\n                </div>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label style={{ fontWeight: \"bold\" }}>Status</Form.Label>\n                <Form.Control\n                  style={{ border: \"1px solid #050139\" }}\n                  as=\"select\"\n                  name=\"status\"\n                  required\n                >\n                  <div style={{ background: \"#f8d7da\" }}>\n                    {this.state.validationError}\n                  </div>\n                  <option selected>Pending</option>\n                  <option>Completed</option>\n                </Form.Control>\n              </Form.Group>\n              <Form.Group>\n                <Button\n                  className=\"my-1\"\n                  style={{ backgroundColor: \"#7121AD\", color: \"white\" }}\n                  type=\"submit\"\n                >\n                  Add Order\n                </Button>\n              </Form.Group>\n            </Form>\n          </div>\n\n          <div className=\"col-1\"></div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AddOrder;\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/ProManagersideNav/EmpSidebar.jsx",["269","270","271","272","273"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col, Container, Image } from \"react-bootstrap\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport { EmpSidebarData } from \"./EmpSidebarData\";\n\nimport SubMenu from \"./SubMenu\";\nimport { IconContext } from \"react-icons/lib\";\n\nconst Nav = styled.div`\n  background: #15171c;\n  height: 80px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst NavIcon = styled(Link)`\n  margin-left: 2rem;\n  font-size: 2rem;\n  height: 80px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst SidebarNav = styled.nav`\n  background: #15171c;  \n  width: 300px;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  @media only screen and (max-width: 1920px) {\n    left: ${({ sidebar }) => (sidebar ? \"0\" : \"-100%\")};\n  }\n  left: 0;\n  transition: 350ms;\n  z-index: 10;\n`;\n\nconst SidebarWrap = styled.div`\n  width: 100%;\n`;\n\nconst Sidebar = () => {\n  const [sidebar, setSidebar] = useState(false);\n\n  const showSidebar = () => setSidebar(!sidebar);\n\n  return (\n    <>\n      <IconContext.Provider value={{ color: \"#fff\" }}>\n        <Nav>\n          <NavIcon to=\"#\">\n            <FaIcons.FaBars onClick={showSidebar} />\n          </NavIcon>\n        </Nav>\n        <SidebarNav sidebar={sidebar}>\n          <SidebarWrap>\n            <NavIcon to=\"#\">\n              <AiIcons.AiOutlineClose onClick={showSidebar} />\n            </NavIcon>\n            {EmpSidebarData.map((item, index) => {\n              return <SubMenu item={item} key={index} />;\n            })}\n          </SidebarWrap>\n        </SidebarNav>\n      </IconContext.Provider>\n    </>\n  );\n};\n\nexport default Sidebar;\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/WholeSaleBuyer/wholesaleBuyerSideNav/EmpSidebar.jsx",["274","275","276","277","278"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col, Container, Image } from \"react-bootstrap\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport { EmpSidebarData } from \"./EmpSidebarData\";\n\nimport SubMenu from \"./SubMenu\";\nimport { IconContext } from \"react-icons/lib\";\n\nconst Nav = styled.div`\n  background: #15171c;\n  height: 80px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst NavIcon = styled(Link)`\n  margin-left: 2rem;\n  font-size: 2rem;\n  height: 80px;\n  display: flex;\n  justify-content: flex-start;  \n  align-items: center;\n`;  \n\nconst SidebarNav = styled.nav`\n  background: #15171c;\n  width: 250px;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  @media only screen and (max-width: 1920px) {\n    left: ${({ sidebar }) => (sidebar ? \"0\" : \"-100%\")};\n  }\n  left: 0;\n  transition: 350ms;\n  z-index: 10;\n`;\n\nconst SidebarWrap = styled.div`\n  width: 100%;\n`;\n\nconst Sidebar = () => {\n  const [sidebar, setSidebar] = useState(false);\n\n  const showSidebar = () => setSidebar(!sidebar);\n\n  return (\n    <>\n      <IconContext.Provider value={{ color: \"#fff\" }}>\n        <Nav>\n          <NavIcon to=\"#\">\n            <FaIcons.FaBars onClick={showSidebar} />\n          </NavIcon>\n        </Nav>\n        <SidebarNav sidebar={sidebar}>\n          <SidebarWrap>\n            <NavIcon to=\"#\">\n              <AiIcons.AiOutlineClose onClick={showSidebar} />\n            </NavIcon>\n            {EmpSidebarData.map((item, index) => {\n              return <SubMenu item={item} key={index} />;\n            })}\n          </SidebarWrap>\n        </SidebarNav>\n      </IconContext.Provider>\n    </>\n  );\n};\n\nexport default Sidebar;\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/util/acceprtedreportGenerator.js",["279"],"import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { format } from \"date-fns\";\n\n// define a generatePDF function that accepts a tickets argument\nconst generateacceptedPDF = (tickets) => {\n  // initialize jsPDF\n  const doc = new jsPDF();\n\n  // define the columns we want and their titles\n\n  const tableColumn = [\n    \"Id\",\n    \"Buyer Name\",\n    \"Email\",\n    \"Product Category\",\n    \"Quantity\",\n    \"Payment Methode\",\n    \"Status\",\n  ];\n  // define an empty array of rows\n  const tableRows = [];\n\n  // for each ticket pass all its data into an array\n  tickets.forEach((ticket) => {\n    const ticketData = [\n      ticket.orderId,\n      ticket.buyerName,\n      ticket.email,\n      ticket.productCategory,\n      ticket.quantity,\n      ticket.paymentMethode,\n      ticket.status,\n      // called date-fns to format the date on the ticket\n    ];\n    // push each tickcet's info into a row\n    tableRows.push(ticketData);\n  });\n\n  // startY is basically margin-top\n  doc.autoTable(tableColumn, tableRows, { startY: 20 });\n  const date = Date().split(\" \");\n  // we use a date string to generate our filename.\n  const dateStr = date[0] + date[1] + date[2] + date[3] + date[4];\n  // ticket title. and margin-top + margin-left\n  doc.text(\"Factory Management System\", 5, 5);\n  // ticket title. and margin-top + margin-left\n  doc.text(\"Order Details Report\", 14, 15);\n  // we define the name of our PDF file.\n  doc.save(`report_${dateStr}.pdf`);\n};\n\nexport default generateacceptedPDF;\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/util/reportGenerator.js",["280"],"import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { format } from \"date-fns\";\n\n// define a generatePDF function that accepts a tickets argument\nconst generatePDF = (tickets) => {\n  // initialize jsPDF\n  const doc = new jsPDF();\n\n  // define the columns we want and their titles\n  //const tableColumn = [\"Id\", \"Title\", \"Issue\", \"Status\", \"Closed on\"];\n  const tableColumn = [\n    \"Id\",\n    \"Product Category\",\n    \"Quntity\",\n    \"Estimated Days\",\n    \"Estimated Employees\",\n    \"Status\",\n  ];\n  // define an empty array of rows\n  const tableRows = [];\n\n  // for each ticket pass all its data into an array\n  tickets.forEach((ticket) => {\n    const ticketData = [\n      ticket.productId,\n      ticket.productCategory,\n      ticket.quantity,\n      ticket.esDays,\n      ticket.esEmployees,\n      ticket.status,\n\n      // called date-fns to format the date on the ticket\n    ];\n    // push each tickcet's info into a row\n    tableRows.push(ticketData);\n  });\n\n  // startY is basically margin-top\n  doc.autoTable(tableColumn, tableRows, { startY: 20 });\n  const date = Date().split(\" \");\n  // we use a date string to generate our filename.\n  const dateStr = date[0] + date[1] + date[2] + date[3] + date[4];\n  // ticket title. and margin-top + margin-left\n  doc.text(\"Factory Management System\", 5, 5);\n  // ticket title. and margin-top + margin-left\n  doc.text(\"Production Rounds.\", 14, 15);\n  // we define the name of our PDF file.\n  doc.save(`report_${dateStr}.pdf`);\n};\n\nexport default generatePDF;\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/WholeSaleBuyer/util/acceprtedreportGenerator.js",["281"],"/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/WholeSaleBuyer/wholesaleBuyerSideNav/EmpSidebarData.js",[],"/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/Tabales/ProductListTable.jsx",[],"/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/Tabales/PreviousProductionRoundTable.jsx",["282","283","284"],"import React, { Component } from \"react\";\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\nimport swal from \"sweetalert\";\nimport { EditPreviousProductionRoundDetailsModal } from \"../Modals/EditPreviousProductionRoundDetailsModal\";\n\nexport class PreviousProductionRoundTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { editModalShow: false };\n  }\n\n  deleteCat(id) {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this Recode!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        fetch(\"http://localhost:5000/api/prevProRound-details\", {\n          method: \"DELETE\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            username: \"chathura\",\n          },\n          body: JSON.stringify({\n            id: id,\n          }),\n        })\n          .then((res) => res.json())\n          .then((result) => {\n            swal({\n              title: \"Previous Production Round Deleted Succesfully\",\n              icon: \"success\",\n              button: \"Done\",\n            });\n            setTimeout(\n              function () {\n                window.location.reload();\n              }.bind(this),\n              1500\n            );\n          });\n      } else {\n        swal(\"Your imaginary file is safe!\");\n      }\n    });\n  }\n\n  render() {\n    const {\n      id,\n      productCategory,\n      quantity,\n      completedQuantity,\n      remaningQuantity,\n      status,\n    } = this.state;\n    let EditModelClose = () => this.setState({ editModalShow: false });\n    return (\n      <div>\n        <ButtonToolbar>\n          <EditPreviousProductionRoundDetailsModal\n            show={this.state.editModalShow}\n            onHide={EditModelClose}\n            id={id}\n            productCategory={productCategory}\n            quantity={quantity}\n            completedQuantity={completedQuantity}\n            remaningQuantity={remaningQuantity}\n            status={status}\n          />\n        </ButtonToolbar>\n        <table\n          className=\"table table-bordered table-sm\"\n          style={{ width: \"1200px\" }}\n        >\n          <thead>\n            <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" }}>\n              <th scope=\"col\">Id</th>\n              <th scope=\"col\">Product Category</th>\n              <th scope=\"col\">Quntity</th>\n              <th scope=\"col\">Completed Quantity</th>\n              <th scope=\"col\">Remaining Quantity</th>\n              <th scope=\"col\">Status</th>\n              <th scope=\"col\">Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.preproductionRound.map((i) => (\n              <tr key={i._id}>\n                <td>{i.productId}</td>\n                <td>{i.productCategory}</td>\n                <td>{i.quantity}</td>\n                <td>{i.completedQuantity}</td>\n                <td>{i.remainingQuantity}</td>\n                <td>{i.status}</td>\n                <td>\n                  <button\n                    className=\"btn-sm\"\n                    style={{\n                      backgroundColor: \"#7121AD\",\n                      color: \"white\",\n                      marginRight: \"4px\",\n                    }}\n                    onClick={() =>\n                      this.setState({\n                        editModalShow: true,\n                        id: i._id,\n                        productCategory: i.productCategory,\n                        quantity: i.quantity,\n                        completedQuantity: i.completedQuantity,\n                        remainingQuantity: i.remainingQuantity,\n                      })\n                    }\n                  >\n                    Edit\n                  </button>\n                  <button\n                    className=\"btn-sm\"\n                    style={{ backgroundColor: \"#dc3545 \", color: \"white\" }}\n                    onClick={() => this.deleteCat(i._id)}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/Tabales/ProductonRoundTable.jsx",["285","286","287"],"import React, { Component } from \"react\";\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\nimport swal from \"sweetalert\";\nimport { EditProductionRoundDetailsModal } from \"../Modals/EditProductionRoundDetailsModal\";\n\nexport class ProductonRoundTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { editModalShow: false };\n  }\n\n  deleteCat(id) {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this Recode!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        fetch(\"http://localhost:5000/api/newProRound-details\", {\n          method: \"DELETE\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            username: \"chathura\",\n          },\n          body: JSON.stringify({\n            id: id,\n          }),\n        })\n          .then((res) => res.json())  \n          .then((result) => {\n            swal({\n              title: \"New Production Round Deleted Succesfully\",\n              icon: \"success\",\n              button: \"Done\",\n            });\n            setTimeout(\n              function () {\n                window.location.reload();\n              }.bind(this),\n              1500\n            );\n          });\n      } else {\n        swal(\"Your imaginary file is safe!\");\n      }\n    });\n  }\n\n  render() {\n    const { id, productCategory, quantity, esDays, esEmployees } = this.state;\n    let EditModelClose = () => this.setState({ editModalShow: false });\n    return (\n      <div>\n        <ButtonToolbar>\n          <EditProductionRoundDetailsModal\n            show={this.state.editModalShow}\n            onHide={EditModelClose}\n            id={id}\n            productCategory={productCategory}\n            quantity={quantity}\n            esDays={esDays}\n            esEmployees={esEmployees}\n          />\n        </ButtonToolbar>\n        <table\n          className=\"table table-bordered table-sm\"\n          style={{ width: \"1200px\" }}\n        >\n          <thead>\n            <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" }}>\n              <th scope=\"col\">Id</th>\n              <th scope=\"col\">Product Category</th>\n              <th scope=\"col\">Quntity</th>\n              <th scope=\"col\">Estimated Days</th>\n              <th scope=\"col\">Estimated Employees</th>\n              <th scope=\"col\">Status</th>\n              <th scope=\"col\">Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.productionRound.map((i) => (\n              <tr key={i._id}>\n                <td>{i.productId}</td>\n                <td>{i.productCategory}</td>\n                <td>{i.quantity}</td>\n                <td>{i.esDays}</td>\n                <td>{i.esEmployees}</td>\n                <td>{i.status}</td>\n                <td>\n                  <button\n                    className=\"btn-sm\"\n                    style={{\n                      backgroundColor: \"#7121AD\",\n                      color: \"white\",\n                      marginRight: \"4px\",\n                    }}\n                    onClick={() =>\n                      this.setState({\n                        editModalShow: true,\n                        id: i._id,\n                        productCategory: i.productCategory,\n                        quantity: i.quantity,\n                        esDays: i.esDays,\n                        esEmployees: i.esEmployees,\n                      })\n                    }\n                  >\n                    Edit\n                  </button>\n                  <button\n                    className=\"btn-sm\"\n                    style={{ backgroundColor: \"#dc3545\", color: \"white\" }}\n                    onClick={() => this.deleteCat(i._id)}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/Tabales/OrderDetailsTable.jsx",["288","289","290"],"import React, { Component } from \"react\";\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\nimport swal from \"sweetalert\";\nimport { EditProductStockDetailsMoadal } from \"../Modals/EditProductStockDetailsMoadal\";\n\nexport class OrderDetailsTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { editModalShow: false };\n  }\n\n  deleteCat(id) {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this Recode!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        fetch(\"http://localhost:5000/api/order-details\", {\n          method: \"DELETE\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            username: \"chathura\",\n          },\n          body: JSON.stringify({\n            id: id,\n          }),\n        })\n          .then((res) => res.json())\n          .then((result) => {\n            swal({\n              title: \"Order Rejected Succesfully\",\n              icon: \"success\",\n              button: \"Done\",\n            });\n            setTimeout(\n              function () {\n                window.location.reload();\n              }.bind(this),\n              1500\n            );\n          });\n      } else {\n        swal(\"Your imaginary file is safe!\");\n      }\n    });\n  }\n\n  render() {\n    const {\n      id,\n      buyerName,\n      email,\n      productCategory,\n      quantity,\n      paymentMethode,\n      status,\n    } = this.state;\n    let EditModelClose = () => this.setState({ editModalShow: false });\n    return (\n      <div>\n        <ButtonToolbar>\n          <EditProductStockDetailsMoadal\n            show={this.state.editModalShow}\n            onHide={EditModelClose}\n            id={id}\n            buyerName={buyerName}\n            email={email}\n            productCategory={productCategory}\n            quantity={quantity}\n            paymentMethode={paymentMethode}\n            status={status}\n          />\n        </ButtonToolbar>\n        <table\n          className=\"table table-bordered table-sm\"\n          style={{ width: \"1200px\" }}\n        >\n          <thead>\n            <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" }}>\n              <th scope=\"col\">Id</th>\n              <th scope=\"col\">Buyer Name</th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">Product Category</th>\n              <th scope=\"col\">Quantity</th>\n              <th scope=\"col\">Payment Methode</th>\n              <th scope=\"col\">Status</th>\n\n              <th scope=\"col\">Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.orderDetails.map((i) => (\n              <tr key={i._id}>\n                <td>{i.orderId}</td>\n                <td>{i.buyerName}</td>\n                <td>{i.email}</td>\n                <td>{i.productCategory}</td>\n                <td>{i.quantity}</td>\n                <td>{i.paymentMethode}</td>\n                <td>{i.status}</td>\n                <td>\n                  <button\n                    className=\"btn-sm\"\n                    style={{\n                      backgroundColor: \"#7121AD\",\n                      color: \"white\",\n                      marginRight: \"4px\",\n                    }}\n                    onClick={() =>\n                      this.setState({\n                        editModalShow: true,\n                        id: i._id,\n                        productCategory: i.productCategory,\n                      })\n                    }\n                  >\n                    Accept\n                  </button>\n                  <button\n                    className=\"btn-sm\"\n                    style={{ backgroundColor: \"#dc3545 \", color: \"white\" }}\n                    onClick={() => this.deleteCat(i._id)}\n                  >\n                    Reject\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/Tabales/FeedbackTable.jsx",[],"/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/common/searchBox.jsx",["291"],"import React, { Component } from \"react\";\n\nconst SearchBox = ({ value, onChange, placeHolder }) => {\n  return (\n    <input\n      style={{ border: \"2px solid #050139\" }}\n      type=\"text\"\n      name=\"query\"\n      autoComplete=\"off\"\n      className=\"form-control mt-3\"\n      placeholder={placeHolder}\n      value={value}\n      onChange={(e) => onChange(e.currentTarget.value)}\n    />\n  );\n};\nexport default SearchBox;\n   ","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/WholeSaleBuyer/Tabales/OrderDetailsTable.jsx",["292","293","294"],"import React, { Component } from \"react\";\nimport { Table, Button, ButtonToolbar } from \"react-bootstrap\";\nimport swal from \"sweetalert\";\nimport { EditOrderDetailsMoadal } from \"../Modals/EditOrderDetailsMoadal\";\n\nexport class OrderDetailsTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { editModalShow: false };\n  }\n\n  deleteCat(id) {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this Recode!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        fetch(\"http://localhost:5000/api/order-details\", {\n          method: \"DELETE\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            username: \"chathura\",\n          },\n          body: JSON.stringify({\n            id: id,\n          }),\n        })\n          .then((res) => res.json())\n          .then((result) => {\n            swal({\n              title: \"Order Rejected Succesfully\",\n              icon: \"success\",\n              button: \"Done\",\n            });\n            setTimeout(\n              function () {\n                window.location.reload();\n              }.bind(this),\n              1500\n            );\n          });\n      } else {\n        swal(\"Your imaginary file is safe!\");\n      }\n    });\n  }\n\n  render() {\n    const {\n      id,\n      buyerName,\n      email,\n      productCategory,\n      quantity,\n      paymentMethode,\n      status,\n    } = this.state;\n    let EditModelClose = () => this.setState({ editModalShow: false });\n    return (\n      <div>\n        <ButtonToolbar>\n          <EditOrderDetailsMoadal\n            show={this.state.editModalShow}\n            onHide={EditModelClose}\n            id={id}\n            buyerName={buyerName}\n            email={email}\n            productCategory={productCategory}\n            quantity={quantity}\n            paymentMethode={paymentMethode}\n            status={status}\n          />\n        </ButtonToolbar>\n        <table\n          className=\"table table-bordered table-sm\"\n          style={{ width: \"1200px\" }}\n        >\n          <thead>\n            <tr style={{ backgroundColor: \"#7121AD\", color: \"white\" }}>\n              <th scope=\"col\">Id</th>\n              <th scope=\"col\">Buyer Name</th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">Product Category</th>\n              <th scope=\"col\">Quantity</th>\n              <th scope=\"col\">Payment Methode</th>\n              <th scope=\"col\">Status</th>\n\n              <th scope=\"col\">Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.orderDetails.map((i) => (\n              <tr key={i._id}>\n                <td>{i.orderId}</td>\n                <td>{i.buyerName}</td>\n                <td>{i.email}</td>\n                <td>{i.productCategory}</td>\n                <td>{i.quantity}</td>\n                <td>{i.paymentMethode}</td>\n                <td>{i.status}</td>\n                <td>\n                  <button\n                    className=\"btn-sm\"\n                    style={{\n                      backgroundColor: \"#7121AD\",\n                      color: \"white\",\n                      marginRight: \"4px\",\n                    }}\n                    onClick={() =>\n                      this.setState({\n                        editModalShow: true,\n                        id: i._id,\n                        productCategory: i.productCategory,\n                      })\n                    }\n                  >\n                    Edit\n                  </button>\n                  <button\n                    className=\"btn-sm\"\n                    style={{ backgroundColor: \"#dc3545 \", color: \"white\" }}\n                    onClick={() => this.deleteCat(i._id)}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/WholeSaleBuyer/common/searchBox.jsx",["295"],"import React, { Component } from \"react\";\n\nconst SearchBox = ({ value, onChange, placeHolder }) => {\n  return (\n    <input\n      style={{ border: \"2px solid #050139\" }}\n      type=\"text\"\n      name=\"query\"\n      autoComplete=\"off\"\n      className=\"form-control my-4\"\n      placeholder={placeHolder}\n      value={value}\n      onChange={(e) => onChange(e.currentTarget.value)}\n    />\n  );\n};\nexport default SearchBox;\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/WholeSaleBuyer/Tabales/ProductStockTable.jsx",[],"/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/WholeSaleBuyer/wholesaleBuyerSideNav/SubMenu.jsx",[],"/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/ProManagersideNav/EmpSidebarData.js",[],"/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/Modals/EditPreviousProductionRoundDetailsModal.jsx",["296","297","298"],"import React, { Component } from \"react\";\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nexport class EditPreviousProductionRoundDetailsModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { snackbaropen: false, snackbarmsg: \"\", categories: [] };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  snackbarClose = (event) => {\n    this.setState({ snackbaropen: false });\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/categories\")\n      .then((result) => {\n        const categories = result.data;\n\n        this.setState({ categories: categories });\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    fetch(\"http://localhost:5000/api/prevProRound-details\", {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        username: \"thiranya\",\n      },\n      body: JSON.stringify({\n        id: event.target.id.value,\n        productCategory: event.target.productCategory.value,\n        status: event.target.status.value,\n      }),\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          swal({\n            title: \"Status Changed Succesfully\",\n            icon: \"success\",\n            button: \"Done\",\n          });\n          setTimeout(\n            function () {\n              window.location.reload();\n            }.bind(this),\n            1500\n          );\n        },\n        (error) => {\n          this.setState({ snackbaropen: true, snackbarmsg: \"Failed\" });\n        }\n      );\n  }\n\n  //   handleSubmit = (event) => {\n\n  //       return <Redirect to='/login' />\n\n  //   }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={this.state.snackbaropen}\n          autoHideDuration={6000}\n          onClose={this.snackbarClose}\n          message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"danger\"\n              onClick={this.snackbarClose}\n            ></IconButton>,\n          ]}\n        />\n        <Modal\n          {...this.props}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          //centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              Edit Status\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Row>\n              <Col sm={6}>\n                <Form onSubmit={this.handleSubmit}>\n                  <Form.Group>\n                    <Form.Group controlId=\"proId\">\n                      <Form.Control\n                        type=\"text\"\n                        name=\"id\"\n                        required\n                        placeholder=\"id\"\n                        defaultValue={this.props.id}\n                      />\n                    </Form.Group>\n                    <Form.Label>Product Category</Form.Label>\n                    <Form.Control\n                      as=\"select\"\n                      required\n                      name=\"productCategory\"\n                      defaultValue={this.props.productCategory}\n                    >\n                      {this.state.categories.map((i) => (\n                        <option key={i._id}>{i.categoryName}</option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                  <Form.Group controlId=\"status\">\n                    <Form.Label>Status</Form.Label>\n                    <Form.Control\n                      as=\"select\"\n                      name=\"status\"\n                      required\n                      placeholder=\"Status\"\n                      defaultValue={this.props.status}\n                    >\n                      <div style={{ background: \"#f8d7da\" }}>\n                        {this.state.validationError}\n                      </div>\n                      <option selected>Pending</option>\n                      <option>Completed</option>\n                    </Form.Control>\n                  </Form.Group>\n\n                  <Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">\n                      Update Status\n                    </Button>\n                  </Form.Group>\n                </Form>\n              </Col>\n            </Row>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"danger\" onClick={this.props.onHide}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/Modals/EditProductionRoundDetailsModal.jsx",["299","300","301"],"import React, { Component } from \"react\";\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nexport class EditProductionRoundDetailsModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { snackbaropen: false, snackbarmsg: \"\", categories: [] };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  snackbarClose = (event) => {\n    this.setState({ snackbaropen: false });\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/categories\")\n      .then((result) => {   \n        const categories = result.data;\n\n        this.setState({ categories: categories });\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    fetch(\"http://localhost:5000/api/newProRound-details\", {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        username: \"thiranya\",\n      },\n      body: JSON.stringify({\n        id: event.target.id.value,\n        productCategory: event.target.productCategory.value,\n        quantity: event.target.quantity.value,\n        esDays: event.target.esDays.value,\n        esEmployees: event.target.esEmployees.value,\n      }),\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          swal({\n            title: \"Details Updated Succesfully\",\n            icon: \"success\",\n            button: \"Done\",\n          });\n          setTimeout(\n            function () {\n              window.location.reload();\n            }.bind(this),\n            1500\n          );\n        },\n        (error) => {\n          this.setState({ snackbaropen: true, snackbarmsg: \"Failed\" });\n        }\n      );\n  }\n\n  //   handleSubmit = (event) => {\n\n  //       return <Redirect to='/login' />\n\n  //   }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={this.state.snackbaropen}\n          autoHideDuration={6000}\n          onClose={this.snackbarClose}\n          message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"danger\"\n              onClick={this.snackbarClose}\n            ></IconButton>,\n          ]}\n        />\n        <Modal\n          {...this.props}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          //centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              Update Details\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Row>\n              <Col sm={6}>\n                <Form onSubmit={this.handleSubmit}>\n                  <Form.Group>\n                    <Form.Group controlId=\"proId\">\n                      <Form.Control\n                        type=\"text\"\n                        name=\"id\"\n                        required\n                        placeholder=\"id\"\n                        defaultValue={this.props.id}\n                      />\n                    </Form.Group>\n                    <Form.Label>Product Category</Form.Label>\n                    <Form.Control\n                      as=\"select\"\n                      required\n                      name=\"productCategory\"\n                      defaultValue={this.props.productCategory}\n                    >\n                      {this.state.categories.map((i) => (\n                        <option key={i._id}>{i.categoryName}</option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                  <Form.Group controlId=\"quantity\">\n                    <Form.Label>Quntity</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"quantity\"\n                      required\n                      placeholder=\"Quntity\"\n                      defaultValue={this.props.quantity}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"esDays\">\n                    <Form.Label>Estimated Days</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"esDays\"\n                      required\n                      placeholder=\"Estimated Days\"\n                      defaultValue={this.props.esDays}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"esEmployees\">\n                    <Form.Label>Estimated Employees</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"esEmployees\"\n                      required\n                      placeholder=\"Estimated Employees\"\n                      defaultValue={this.props.esEmployees}\n                    />\n                  </Form.Group>\n                  <Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">\n                      Update Production Round\n                    </Button>\n                  </Form.Group>\n                </Form>\n              </Col>\n            </Row>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"danger\" onClick={this.props.onHide}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/ProductionManager/Modals/EditProductStockDetailsMoadal.jsx",["302","303","304"],"import React, { Component } from \"react\";\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nexport class EditProductStockDetailsMoadal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { snackbaropen: false, snackbarmsg: \"\", categories: [] };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  snackbarClose = (event) => {\n    this.setState({ snackbaropen: false });\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/categories\")\n      .then((result) => {\n        const categories = result.data;\n\n        this.setState({ categories: categories });\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    fetch(\"http://localhost:5000/update/order\", {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        username: \"thiranya\",\n      },\n      body: JSON.stringify({\n        id: event.target.id.value,\n        status: event.target.status.value,\n      }),\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          swal({\n            title: \"Order Status Changed Successfully\",\n            icon: \"success\",\n            button: \"Done\",\n          });\n          setTimeout(\n            function () {\n              window.location.reload();\n            }.bind(this),\n            1500\n          );\n        },\n        (error) => {\n          this.setState({ snackbaropen: true, snackbarmsg: \"Failed\" });\n        }\n      );\n  }\n\n  //   handleSubmit = (event) => {\n\n  //       return <Redirect to='/login' />\n\n  //   }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={this.state.snackbaropen}\n          autoHideDuration={6000}\n          onClose={this.snackbarClose}\n          message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"danger\"\n              onClick={this.snackbarClose}\n            ></IconButton>,\n          ]}\n        />\n        <Modal\n          {...this.props}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          //centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              Update Details\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Row>\n              <Col sm={6}>\n                <Form onSubmit={this.handleSubmit}>\n                  <Form.Group>\n                    <Form.Group controlId=\"orderId\">\n                      <Form.Control\n                        type=\"text\"\n                        name=\"id\"\n                        required\n                        placeholder=\"id\"\n                        defaultValue={this.props.id}\n                      />\n                    </Form.Group>\n                  </Form.Group>\n\n                  <Form.Group>\n                    <Form.Label style={{ fontWeight: \"bold\" }}>\n                      Status\n                    </Form.Label>\n                    <Form.Control\n                      style={{ border: \"1px solid #050139\" }}\n                      as=\"select\"\n                      name=\"status\"\n                      defaultValue={this.props.status}\n                    >\n                      <div style={{ background: \"#f8d7da\" }}>\n                        {this.state.validationError}\n                      </div>\n                      <option selected>Pending</option>\n                      <option>Accepted</option>\n                      <option>Rejected</option>\n                    </Form.Control>\n                  </Form.Group>\n                  <Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">\n                      Accept Order\n                    </Button>\n                  </Form.Group>\n                </Form>\n              </Col>\n            </Row>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"danger\" onClick={this.props.onHide}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n","/home/prabath/Documents/SLiit Projects/factory-management/factory-managment-frontend/src/components/WholeSaleBuyer/Modals/EditOrderDetailsMoadal.jsx",["305","306","307"],"import React, { Component } from \"react\";\nimport { Modal, Button, Row, Col, Form, FormGroup } from \"react-bootstrap\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nexport class EditOrderDetailsMoadal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { snackbaropen: false, snackbarmsg: \"\", categories: [] };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  snackbarClose = (event) => {\n    this.setState({ snackbaropen: false });\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/api/categories\")\n      .then((result) => {\n        const categories = result.data;\n\n        this.setState({ categories: categories });\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    fetch(\"http://localhost:5000/api/order-details\", {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        username: \"thiranya\",\n      },\n      body: JSON.stringify({\n        id: event.target.id.value,\n        productCategory: event.target.productCategory.value,\n        quantity: event.target.quantity.value,\n        paymentMethode: event.target.paymentMethode.value,\n        //status: event.target.status.value,\n      }),\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          swal({\n            title: \"Order Status Changed Successfully\",\n            icon: \"success\",\n            button: \"Done\",\n          });\n          setTimeout(\n            function () {\n              window.location.reload();\n            }.bind(this),\n            1500\n          );\n        },\n        (error) => {\n          this.setState({ snackbaropen: true, snackbarmsg: \"Failed\" });\n        }\n      );\n  }\n\n  //   handleSubmit = (event) => {\n\n  //       return <Redirect to='/login' />\n\n  //   }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={this.state.snackbaropen}\n          autoHideDuration={6000}\n          onClose={this.snackbarClose}\n          message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"danger\"\n              onClick={this.snackbarClose}\n            ></IconButton>,\n          ]}\n        />\n        <Modal\n          {...this.props}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          //centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              Update Details\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Row>\n              <Col sm={6}>\n                <Form onSubmit={this.handleSubmit}>\n                  <Form.Group>\n                    <Form.Group controlId=\"orderId\">\n                      <Form.Control\n                        type=\"text\"\n                        name=\"id\"\n                        required\n                        placeholder=\"id\"\n                        defaultValue={this.props.id}\n                      />\n                    </Form.Group>\n\n                    <Form.Label>Product Category</Form.Label>\n                    <Form.Control\n                      as=\"select\"\n                      required\n                      name=\"productCategory\"\n                      defaultValue={this.props.productCategory}\n                    >\n                      {this.state.categories.map((i) => (\n                        <option key={i._id}>{i.categoryName}</option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                  <Form.Group controlId=\"quantity\">\n                    <Form.Label>Quntity</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"quantity\"\n                      required\n                      placeholder=\"Quntity\"\n                      defaultValue={this.props.quantity}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"paymentMethode\">\n                    <Form.Label>Payment Methode</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"paymentMethode\"\n                      required\n                      placeholder=\"Payment Methode\"\n                      defaultValue={this.props.paymentMethode}\n                    />\n                    <div style={{ background: \"#f8d7da\" }}>\n                      {this.state.validationError}\n                    </div>\n                    <option selected>Cash</option>\n                    <option>Card</option>\n                  </Form.Group>\n                  <Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">\n                      Edit Details\n                    </Button>\n                  </Form.Group>\n                </Form>\n              </Col>\n            </Row>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"danger\" onClick={this.props.onHide}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n",{"ruleId":"308","severity":1,"message":"309","line":8,"column":27,"nodeType":"310","messageId":"311","endLine":8,"endColumn":33},{"ruleId":"308","severity":1,"message":"312","line":8,"column":35,"nodeType":"310","messageId":"311","endLine":8,"endColumn":41},{"ruleId":"308","severity":1,"message":"313","line":8,"column":43,"nodeType":"310","messageId":"311","endLine":8,"endColumn":48},{"ruleId":"308","severity":1,"message":"309","line":2,"column":27,"nodeType":"310","messageId":"311","endLine":2,"endColumn":33},{"ruleId":"308","severity":1,"message":"312","line":2,"column":35,"nodeType":"310","messageId":"311","endLine":2,"endColumn":41},{"ruleId":"314","severity":1,"message":"315","line":49,"column":18,"nodeType":"316","messageId":"317","endLine":49,"endColumn":20},{"ruleId":"314","severity":1,"message":"318","line":58,"column":21,"nodeType":"316","messageId":"317","endLine":58,"endColumn":23},{"ruleId":"314","severity":1,"message":"318","line":67,"column":21,"nodeType":"316","messageId":"317","endLine":67,"endColumn":23},{"ruleId":"314","severity":1,"message":"315","line":78,"column":18,"nodeType":"316","messageId":"317","endLine":78,"endColumn":20},{"ruleId":"314","severity":1,"message":"318","line":118,"column":21,"nodeType":"316","messageId":"317","endLine":118,"endColumn":23},{"ruleId":"314","severity":1,"message":"318","line":177,"column":21,"nodeType":"316","messageId":"317","endLine":177,"endColumn":23},{"ruleId":"308","severity":1,"message":"319","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":15},{"ruleId":"308","severity":1,"message":"320","line":2,"column":25,"nodeType":"310","messageId":"311","endLine":2,"endColumn":28},{"ruleId":"308","severity":1,"message":"321","line":2,"column":30,"nodeType":"310","messageId":"311","endLine":2,"endColumn":33},{"ruleId":"308","severity":1,"message":"322","line":2,"column":41,"nodeType":"310","messageId":"311","endLine":2,"endColumn":50},{"ruleId":"323","severity":1,"message":"324","line":65,"column":17,"nodeType":"325","messageId":"317","endLine":65,"endColumn":21,"fix":"326"},{"ruleId":"308","severity":1,"message":"327","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":15},{"ruleId":"308","severity":1,"message":"328","line":3,"column":17,"nodeType":"310","messageId":"311","endLine":3,"endColumn":23},{"ruleId":"308","severity":1,"message":"329","line":3,"column":25,"nodeType":"310","messageId":"311","endLine":3,"endColumn":38},{"ruleId":"308","severity":1,"message":"330","line":55,"column":9,"nodeType":"310","messageId":"311","endLine":55,"endColumn":22},{"ruleId":"308","severity":1,"message":"327","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":15},{"ruleId":"308","severity":1,"message":"328","line":3,"column":17,"nodeType":"310","messageId":"311","endLine":3,"endColumn":23},{"ruleId":"308","severity":1,"message":"330","line":78,"column":9,"nodeType":"310","messageId":"311","endLine":78,"endColumn":22},{"ruleId":"308","severity":1,"message":"327","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":15},{"ruleId":"308","severity":1,"message":"328","line":3,"column":17,"nodeType":"310","messageId":"311","endLine":3,"endColumn":23},{"ruleId":"308","severity":1,"message":"329","line":3,"column":25,"nodeType":"310","messageId":"311","endLine":3,"endColumn":38},{"ruleId":"308","severity":1,"message":"319","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":15},{"ruleId":"308","severity":1,"message":"320","line":2,"column":25,"nodeType":"310","messageId":"311","endLine":2,"endColumn":28},{"ruleId":"308","severity":1,"message":"321","line":2,"column":30,"nodeType":"310","messageId":"311","endLine":2,"endColumn":33},{"ruleId":"308","severity":1,"message":"322","line":2,"column":41,"nodeType":"310","messageId":"311","endLine":2,"endColumn":50},{"ruleId":"323","severity":1,"message":"324","line":59,"column":17,"nodeType":"325","messageId":"317","endLine":59,"endColumn":21,"fix":"331"},{"ruleId":"308","severity":1,"message":"319","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":15},{"ruleId":"308","severity":1,"message":"320","line":2,"column":25,"nodeType":"310","messageId":"311","endLine":2,"endColumn":28},{"ruleId":"308","severity":1,"message":"321","line":2,"column":30,"nodeType":"310","messageId":"311","endLine":2,"endColumn":33},{"ruleId":"308","severity":1,"message":"322","line":2,"column":41,"nodeType":"310","messageId":"311","endLine":2,"endColumn":50},{"ruleId":"323","severity":1,"message":"324","line":60,"column":17,"nodeType":"325","messageId":"317","endLine":60,"endColumn":21,"fix":"332"},{"ruleId":"308","severity":1,"message":"327","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":15},{"ruleId":"308","severity":1,"message":"328","line":3,"column":17,"nodeType":"310","messageId":"311","endLine":3,"endColumn":23},{"ruleId":"308","severity":1,"message":"329","line":3,"column":25,"nodeType":"310","messageId":"311","endLine":3,"endColumn":38},{"ruleId":"308","severity":1,"message":"330","line":55,"column":9,"nodeType":"310","messageId":"311","endLine":55,"endColumn":22},{"ruleId":"308","severity":1,"message":"327","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":15},{"ruleId":"308","severity":1,"message":"328","line":3,"column":17,"nodeType":"310","messageId":"311","endLine":3,"endColumn":23},{"ruleId":"308","severity":1,"message":"329","line":3,"column":25,"nodeType":"310","messageId":"311","endLine":3,"endColumn":38},{"ruleId":"308","severity":1,"message":"330","line":55,"column":9,"nodeType":"310","messageId":"311","endLine":55,"endColumn":22},{"ruleId":"308","severity":1,"message":"327","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":15},{"ruleId":"308","severity":1,"message":"328","line":3,"column":17,"nodeType":"310","messageId":"311","endLine":3,"endColumn":23},{"ruleId":"308","severity":1,"message":"329","line":3,"column":25,"nodeType":"310","messageId":"311","endLine":3,"endColumn":38},{"ruleId":"314","severity":1,"message":"318","line":30,"column":25,"nodeType":"316","messageId":"317","endLine":30,"endColumn":27},{"ruleId":"314","severity":1,"message":"318","line":32,"column":22,"nodeType":"316","messageId":"317","endLine":32,"endColumn":24},{"ruleId":"333","severity":1,"message":"334","line":117,"column":24,"nodeType":"335","endLine":117,"endColumn":36},{"ruleId":"308","severity":1,"message":"327","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":15},{"ruleId":"308","severity":1,"message":"328","line":3,"column":17,"nodeType":"310","messageId":"311","endLine":3,"endColumn":23},{"ruleId":"308","severity":1,"message":"330","line":65,"column":9,"nodeType":"310","messageId":"311","endLine":65,"endColumn":22},{"ruleId":"308","severity":1,"message":"319","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":15},{"ruleId":"308","severity":1,"message":"320","line":2,"column":25,"nodeType":"310","messageId":"311","endLine":2,"endColumn":28},{"ruleId":"308","severity":1,"message":"321","line":2,"column":30,"nodeType":"310","messageId":"311","endLine":2,"endColumn":33},{"ruleId":"308","severity":1,"message":"322","line":2,"column":41,"nodeType":"310","messageId":"311","endLine":2,"endColumn":50},{"ruleId":"323","severity":1,"message":"324","line":57,"column":17,"nodeType":"325","messageId":"317","endLine":57,"endColumn":21,"fix":"336"},{"ruleId":"308","severity":1,"message":"327","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":15},{"ruleId":"308","severity":1,"message":"328","line":3,"column":17,"nodeType":"310","messageId":"311","endLine":3,"endColumn":23},{"ruleId":"308","severity":1,"message":"329","line":3,"column":25,"nodeType":"310","messageId":"311","endLine":3,"endColumn":38},{"ruleId":"308","severity":1,"message":"319","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":15},{"ruleId":"308","severity":1,"message":"320","line":2,"column":25,"nodeType":"310","messageId":"311","endLine":2,"endColumn":28},{"ruleId":"308","severity":1,"message":"321","line":2,"column":30,"nodeType":"310","messageId":"311","endLine":2,"endColumn":33},{"ruleId":"308","severity":1,"message":"322","line":2,"column":41,"nodeType":"310","messageId":"311","endLine":2,"endColumn":50},{"ruleId":"323","severity":1,"message":"324","line":57,"column":17,"nodeType":"325","messageId":"317","endLine":57,"endColumn":21,"fix":"337"},{"ruleId":"308","severity":1,"message":"327","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":15},{"ruleId":"308","severity":1,"message":"328","line":3,"column":17,"nodeType":"310","messageId":"311","endLine":3,"endColumn":23},{"ruleId":"308","severity":1,"message":"329","line":3,"column":25,"nodeType":"310","messageId":"311","endLine":3,"endColumn":38},{"ruleId":"308","severity":1,"message":"330","line":55,"column":9,"nodeType":"310","messageId":"311","endLine":55,"endColumn":22},{"ruleId":"308","severity":1,"message":"319","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":15},{"ruleId":"308","severity":1,"message":"320","line":2,"column":25,"nodeType":"310","messageId":"311","endLine":2,"endColumn":28},{"ruleId":"308","severity":1,"message":"321","line":2,"column":30,"nodeType":"310","messageId":"311","endLine":2,"endColumn":33},{"ruleId":"308","severity":1,"message":"322","line":2,"column":41,"nodeType":"310","messageId":"311","endLine":2,"endColumn":50},{"ruleId":"323","severity":1,"message":"324","line":61,"column":17,"nodeType":"325","messageId":"317","endLine":61,"endColumn":21,"fix":"338"},{"ruleId":"308","severity":1,"message":"339","line":4,"column":10,"nodeType":"310","messageId":"311","endLine":4,"endColumn":14},{"ruleId":"308","severity":1,"message":"320","line":4,"column":16,"nodeType":"310","messageId":"311","endLine":4,"endColumn":19},{"ruleId":"308","severity":1,"message":"321","line":4,"column":21,"nodeType":"310","messageId":"311","endLine":4,"endColumn":24},{"ruleId":"308","severity":1,"message":"340","line":4,"column":26,"nodeType":"310","messageId":"311","endLine":4,"endColumn":35},{"ruleId":"308","severity":1,"message":"341","line":4,"column":37,"nodeType":"310","messageId":"311","endLine":4,"endColumn":42},{"ruleId":"308","severity":1,"message":"339","line":4,"column":10,"nodeType":"310","messageId":"311","endLine":4,"endColumn":14},{"ruleId":"308","severity":1,"message":"320","line":4,"column":16,"nodeType":"310","messageId":"311","endLine":4,"endColumn":19},{"ruleId":"308","severity":1,"message":"321","line":4,"column":21,"nodeType":"310","messageId":"311","endLine":4,"endColumn":24},{"ruleId":"308","severity":1,"message":"340","line":4,"column":26,"nodeType":"310","messageId":"311","endLine":4,"endColumn":35},{"ruleId":"308","severity":1,"message":"341","line":4,"column":37,"nodeType":"310","messageId":"311","endLine":4,"endColumn":42},{"ruleId":"308","severity":1,"message":"342","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":16},{"ruleId":"308","severity":1,"message":"342","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":16},{"ruleId":"308","severity":1,"message":"342","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":16},{"ruleId":"308","severity":1,"message":"327","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":15},{"ruleId":"308","severity":1,"message":"328","line":2,"column":17,"nodeType":"310","messageId":"311","endLine":2,"endColumn":23},{"ruleId":"323","severity":1,"message":"324","line":42,"column":17,"nodeType":"325","messageId":"317","endLine":42,"endColumn":21,"fix":"343"},{"ruleId":"308","severity":1,"message":"327","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":15},{"ruleId":"308","severity":1,"message":"328","line":2,"column":17,"nodeType":"310","messageId":"311","endLine":2,"endColumn":23},{"ruleId":"323","severity":1,"message":"324","line":42,"column":17,"nodeType":"325","messageId":"317","endLine":42,"endColumn":21,"fix":"344"},{"ruleId":"308","severity":1,"message":"327","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":15},{"ruleId":"308","severity":1,"message":"328","line":2,"column":17,"nodeType":"310","messageId":"311","endLine":2,"endColumn":23},{"ruleId":"323","severity":1,"message":"324","line":42,"column":17,"nodeType":"325","messageId":"317","endLine":42,"endColumn":21,"fix":"345"},{"ruleId":"308","severity":1,"message":"346","line":1,"column":17,"nodeType":"310","messageId":"311","endLine":1,"endColumn":26},{"ruleId":"308","severity":1,"message":"327","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":15},{"ruleId":"308","severity":1,"message":"328","line":2,"column":17,"nodeType":"310","messageId":"311","endLine":2,"endColumn":23},{"ruleId":"323","severity":1,"message":"324","line":42,"column":17,"nodeType":"325","messageId":"317","endLine":42,"endColumn":21,"fix":"347"},{"ruleId":"308","severity":1,"message":"346","line":1,"column":17,"nodeType":"310","messageId":"311","endLine":1,"endColumn":26},{"ruleId":"308","severity":1,"message":"322","line":2,"column":41,"nodeType":"310","messageId":"311","endLine":2,"endColumn":50},{"ruleId":"308","severity":1,"message":"348","line":7,"column":10,"nodeType":"310","messageId":"311","endLine":7,"endColumn":18},{"ruleId":"323","severity":1,"message":"324","line":58,"column":15,"nodeType":"325","messageId":"317","endLine":58,"endColumn":19,"fix":"349"},{"ruleId":"308","severity":1,"message":"322","line":2,"column":41,"nodeType":"310","messageId":"311","endLine":2,"endColumn":50},{"ruleId":"308","severity":1,"message":"348","line":7,"column":10,"nodeType":"310","messageId":"311","endLine":7,"endColumn":18},{"ruleId":"323","severity":1,"message":"324","line":60,"column":15,"nodeType":"325","messageId":"317","endLine":60,"endColumn":19,"fix":"350"},{"ruleId":"308","severity":1,"message":"322","line":2,"column":41,"nodeType":"310","messageId":"311","endLine":2,"endColumn":50},{"ruleId":"308","severity":1,"message":"348","line":7,"column":10,"nodeType":"310","messageId":"311","endLine":7,"endColumn":18},{"ruleId":"323","severity":1,"message":"324","line":57,"column":15,"nodeType":"325","messageId":"317","endLine":57,"endColumn":19,"fix":"351"},{"ruleId":"308","severity":1,"message":"322","line":2,"column":41,"nodeType":"310","messageId":"311","endLine":2,"endColumn":50},{"ruleId":"308","severity":1,"message":"348","line":7,"column":10,"nodeType":"310","messageId":"311","endLine":7,"endColumn":18},{"ruleId":"323","severity":1,"message":"324","line":60,"column":15,"nodeType":"325","messageId":"317","endLine":60,"endColumn":19,"fix":"352"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'Modal' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'FormGroup' is defined but never used.","no-extra-bind","The function binding is unnecessary.","CallExpression",{"range":"353","text":"354"},"'Table' is defined but never used.","'Button' is defined but never used.","'ButtonToolbar' is defined but never used.","'AddModelClose' is assigned a value but never used.",{"range":"355","text":"354"},{"range":"356","text":"354"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"range":"357","text":"354"},{"range":"358","text":"354"},{"range":"359","text":"354"},"'Card' is defined but never used.","'Container' is defined but never used.","'Image' is defined but never used.","'format' is defined but never used.",{"range":"360","text":"354"},{"range":"361","text":"354"},{"range":"362","text":"354"},"'Component' is defined but never used.",{"range":"363","text":"354"},"'Redirect' is defined but never used.",{"range":"364","text":"354"},{"range":"365","text":"354"},{"range":"366","text":"354"},{"range":"367","text":"354"},[1956,1967],"",[1896,1907],[1833,1844],[1698,1709],[1699,1710],[1901,1912],[1323,1334],[1294,1305],[1266,1277],[1252,1263],[1686,1697],[1781,1792],[1610,1621],[1777,1788]]